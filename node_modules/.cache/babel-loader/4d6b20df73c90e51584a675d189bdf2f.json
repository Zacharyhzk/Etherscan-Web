{"ast":null,"code":"import _regeneratorRuntime from \"/Users/huangzhongkai/Desktop/ntu msis/Semester 2/Blockchain System Software Engineering/FrontendAssessment/codes/Codes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/huangzhongkai/Desktop/ntu msis/Semester 2/Blockchain System Software Engineering/FrontendAssessment/codes/Codes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/huangzhongkai/Desktop/ntu msis/Semester 2/Blockchain System Software Engineering/FrontendAssessment/codes/Codes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/huangzhongkai/Desktop/ntu msis/Semester 2/Blockchain System Software Engineering/FrontendAssessment/codes/Codes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/huangzhongkai/Desktop/ntu msis/Semester 2/Blockchain System Software Engineering/FrontendAssessment/codes/Codes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/huangzhongkai/Desktop/ntu msis/Semester 2/Blockchain System Software Engineering/FrontendAssessment/codes/Codes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/huangzhongkai/Desktop/ntu msis/Semester 2/Blockchain System Software Engineering/FrontendAssessment/codes/Codes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/huangzhongkai/Desktop/ntu msis/Semester 2/Blockchain System Software Engineering/FrontendAssessment/codes/Codes/src/components/Eth-overview/EtherOverview.js\";\nimport React, { Component } from 'react';\nimport logo from '../logo.png';\nimport Web3 from 'web3';\n\nvar EtherOverview =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EtherOverview, _Component);\n\n  _createClass(EtherOverview, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var web3, latestBlock, gasPrice, block, latestBlocks, i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // Load Web3\n                web3 = new Web3('https://mainnet.infura.io/v3/953247d0c42b419aa3416810d625cc8c'); //let web3 = new Web3('https://mainnet.infura.io/v3/89a6c0f97366409388252f270db4b5d7')\n                // Fetch latest block\n\n                _context.next = 3;\n                return web3.eth.getBlock('latest');\n\n              case 3:\n                latestBlock = _context.sent;\n                console.log('latest block', latestBlock);\n                this.setState({\n                  blockNumber: latestBlock.number,\n                  difficulty: latestBlock.difficulty\n                }); // Fetch Gas price\n\n                _context.next = 8;\n                return web3.eth.getGasPrice();\n\n              case 8:\n                gasPrice = _context.sent;\n                console.log('gasPrice', gasPrice);\n                this.setState({\n                  gasPrice: gasPrice\n                }); // Fetch latest 10 blocks\n\n                latestBlocks = [];\n                i = 0;\n\n              case 13:\n                if (!(i < 10)) {\n                  _context.next = 22;\n                  break;\n                }\n\n                _context.next = 16;\n                return web3.eth.getBlock(latestBlock.number - i);\n\n              case 16:\n                block = _context.sent;\n                console.log(block);\n                latestBlocks.push(block);\n\n              case 19:\n                i++;\n                _context.next = 13;\n                break;\n\n              case 22:\n                this.setState({\n                  latestBlocks: latestBlocks\n                });\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }]);\n\n  function EtherOverview(props) {\n    var _this;\n\n    _classCallCheck(this, EtherOverview);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EtherOverview).call(this, props));\n    _this.state = {\n      blockNumber: 0,\n      difficulty: 0,\n      gasPrice: 0,\n      latestBlocks: []\n    };\n    return _this;\n  }\n\n  _createClass(EtherOverview, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        style: {\n          width: '800px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Ethereum Blockchain Explorer\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-light pt-4 pb-10 m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Latest Block\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.blockNumber))), React.createElement(\"div\", {\n        className: \"col-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-light pt-4 pb-3 m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Difficulty\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.difficulty))), React.createElement(\"div\", {\n        className: \"col-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-light pt-4 pb-3 m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Gas Price\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.gasPrice)))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Latest Blocks\")), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Block Number\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Hash\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Miner\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Timestamp\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.latestBlocks.map(function (block, key) {\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, block.number), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, block.hash.substring(0, 20), \"...\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, block.miner.substring(0, 20), \"...\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, block.timestamp));\n      }))))))))))));\n    }\n  }]);\n\n  return EtherOverview;\n}(Component);\n\nexport default EtherOverview;","map":{"version":3,"sources":["/Users/huangzhongkai/Desktop/ntu msis/Semester 2/Blockchain System Software Engineering/FrontendAssessment/codes/Codes/src/components/Eth-overview/EtherOverview.js"],"names":["React","Component","logo","Web3","EtherOverview","web3","eth","getBlock","latestBlock","console","log","setState","blockNumber","number","difficulty","getGasPrice","gasPrice","latestBlocks","i","block","push","props","state","width","map","key","hash","substring","miner","timestamp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from '../logo.png';\nimport Web3 from 'web3'\n\nclass EtherOverview extends Component {\n\n  async componentWillMount() {\n    // Load Web3\n    let web3 = new Web3('https://mainnet.infura.io/v3/953247d0c42b419aa3416810d625cc8c')\n    //let web3 = new Web3('https://mainnet.infura.io/v3/89a6c0f97366409388252f270db4b5d7')\n    \n\n    // Fetch latest block\n    let latestBlock = await web3.eth.getBlock('latest')\n    console.log('latest block', latestBlock)\n    this.setState({\n      blockNumber: latestBlock.number,\n      difficulty: latestBlock.difficulty\n    })\n\n    // Fetch Gas price\n    let gasPrice = await web3.eth.getGasPrice()\n    console.log('gasPrice', gasPrice)\n    this.setState({\n      gasPrice: gasPrice\n    })\n\n    // Fetch latest 10 blocks\n    let block\n    let latestBlocks = []\n    for (let i = 0; i < 10; i++) {\n      block = await web3.eth.getBlock(latestBlock.number - i)\n      console.log(block)\n      latestBlocks.push(block)\n    }\n    this.setState({\n      latestBlocks: latestBlocks\n    })\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      blockNumber: 0,\n      difficulty: 0,\n      gasPrice: 0,\n      latestBlocks: []\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\" style={{ width: '800px' }}>\n                <h5><b>Ethereum Blockchain Explorer</b></h5>\n                <div className=\"row\">\n                  <div className=\"col-4\">\n                    <div className=\"bg-light pt-4 pb-10 m-1\">\n                      <h5>Latest Block</h5>\n                      <p>{this.state.blockNumber}</p>\n                    </div>\n                  </div>\n                  <div className=\"col-4\">\n                    <div className=\"bg-light pt-4 pb-3 m-1\">\n                      <h5>Difficulty</h5>\n                      <p>{this.state.difficulty}</p>\n                    </div>\n                  </div>\n                  <div className=\"col-4\">\n                    <div className=\"bg-light pt-4 pb-3 m-1\">\n                      <h5>Gas Price</h5>\n                      <p>{this.state.gasPrice}</p>\n                    </div>\n                  </div>\n\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-lg-12 mt-3\">\n\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h5>Latest Blocks</h5>\n                      </div>\n                      <div className=\"card-body\">\n                        <table className=\"table\">\n                          <thead>\n                            <tr>\n                              <th scope=\"col\">Block Number</th>\n                              <th scope=\"col\">Hash</th>\n                              <th scope=\"col\">Miner</th>\n                              <th scope=\"col\">Timestamp</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            { this.state.latestBlocks.map((block, key) => {\n                              return (\n                                <tr key={key} >\n                                  <th scope=\"row\">{block.number}</th>\n                                  <td>{block.hash.substring(0,20)}...</td>\n                                  <td>{block.miner.substring(0,20)}...</td>\n                                  <td>{block.timestamp}</td>\n                                </tr>\n                              )\n                            }) }\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EtherOverview;\n"]},"metadata":{},"sourceType":"module"}