{"ast":null,"code":"import * as statAPIUtil from '../util/stats_api_util';\nexport var RECEIVE_PRICES = 'RECEIVE_PRICES';\nexport var RECEIVE_TOTAL_SUPPLY = 'RECEIVE_TOTAL_SUPPLY';\nexport var RECEIVE_BLOCK_CHAIR_STATS = 'RECEIVE_BLOCK_CHAIR_STATS';\nexport var RECEIVE_TETHER_TX_HISTORY = 'RECEIVE_TETHER_TX_HISTORY';\nexport var RECEIVE_LAST_BLOCK = 'RECEIVE_LAST_BLOCK';\nexport var receievePrice = function receievePrice(replyObj) {\n  return {\n    type: RECEIVE_PRICES,\n    prices: replyObj.result\n  };\n};\nexport var receiveBlockChairStates = function receiveBlockChairStates(replyObj) {\n  return {\n    type: RECEIVE_BLOCK_CHAIR_STATS,\n    totalTransactions: replyObj.data.transactions,\n    transactions24H: replyObj.data.blocks_24h,\n    mempoolTPS: replyObj.data.mempool_tps\n  };\n};\nexport var receieveTotalSupply = function receieveTotalSupply(replyObj) {\n  return {\n    type: RECEIVE_TOTAL_SUPPLY,\n    supply: replyObj.result\n  };\n};\nexport var receieveTetherTxHistory = function receieveTetherTxHistory(replyObj) {\n  return {\n    type: RECEIVE_TETHER_TX_HISTORY,\n    countTxs: replyObj.countTxs\n  };\n};\nexport var receieveLastBlock = function receieveLastBlock(replyObj) {\n  return {\n    type: RECEIVE_LAST_BLOCK,\n    lastBlock: replyObj.lastBlock\n  };\n};\nexport var fetchPrices = function fetchPrices() {\n  return function (dispatch) {\n    return statAPIUtil.lastPrices().then(function (prices) {\n      return dispatch(receievePrice(prices));\n    });\n  };\n};\nexport var fetchTotalSupply = function fetchTotalSupply() {\n  return function (dispatch) {\n    return statAPIUtil.totalSupply().then(function (totalSupply) {\n      return dispatch(receieveTotalSupply(totalSupply));\n    });\n  };\n};\nexport var fetchBlockChairStats = function fetchBlockChairStats() {\n  return function (dispatch) {\n    return statAPIUtil.blockChairStats().then(function (stats) {\n      dispatch(receiveBlockChairStates(stats));\n    });\n  };\n};\nexport var fetchTetherTxHistory = function fetchTetherTxHistory() {\n  return function (dispatch) {\n    return statAPIUtil.tetherTxHistory30Day().then(function (countTxs) {\n      return dispatch(receieveTetherTxHistory(countTxs));\n    });\n  };\n};\nexport var fetchLastBlock = function fetchLastBlock() {\n  return function (dispatch) {\n    return statAPIUtil.lastBlock().then(function (lastBlock) {\n      return dispatch(receieveLastBlock(lastBlock));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/huangzhongkai/Desktop/ntu msis/Semester 2/Blockchain System Software Engineering/FrontendAssessment/Etherscan-Web/src/actions/stats_actions.js"],"names":["statAPIUtil","RECEIVE_PRICES","RECEIVE_TOTAL_SUPPLY","RECEIVE_BLOCK_CHAIR_STATS","RECEIVE_TETHER_TX_HISTORY","RECEIVE_LAST_BLOCK","receievePrice","replyObj","type","prices","result","receiveBlockChairStates","totalTransactions","data","transactions","transactions24H","blocks_24h","mempoolTPS","mempool_tps","receieveTotalSupply","supply","receieveTetherTxHistory","countTxs","receieveLastBlock","lastBlock","fetchPrices","dispatch","lastPrices","then","fetchTotalSupply","totalSupply","fetchBlockChairStats","blockChairStats","stats","fetchTetherTxHistory","tetherTxHistory30Day","fetchLastBlock"],"mappings":"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","sourcesContent":["import * as statAPIUtil from '../util/stats_api_util';\n\nexport const RECEIVE_PRICES = 'RECEIVE_PRICES';\nexport const RECEIVE_TOTAL_SUPPLY = 'RECEIVE_TOTAL_SUPPLY';\nexport const RECEIVE_BLOCK_CHAIR_STATS = 'RECEIVE_BLOCK_CHAIR_STATS';\nexport const RECEIVE_TETHER_TX_HISTORY = 'RECEIVE_TETHER_TX_HISTORY';\nexport const RECEIVE_LAST_BLOCK = 'RECEIVE_LAST_BLOCK';\n\n\nexport const receievePrice = (replyObj) => ({\n  type: RECEIVE_PRICES,\n  prices: replyObj.result,\n});\n\nexport const receiveBlockChairStates = (replyObj) => {\n  return {\n    type: RECEIVE_BLOCK_CHAIR_STATS,\n    totalTransactions: replyObj.data.transactions,\n    transactions24H: replyObj.data.blocks_24h,\n    mempoolTPS: replyObj.data.mempool_tps,\n  }\n};\n\nexport const receieveTotalSupply = (replyObj) => ({\n  type: RECEIVE_TOTAL_SUPPLY,\n  supply: replyObj.result,\n});\n\nexport const receieveTetherTxHistory = (replyObj) => ({\n  type: RECEIVE_TETHER_TX_HISTORY,\n  countTxs: replyObj.countTxs,\n});\n\nexport const receieveLastBlock = (replyObj) => ({\n  type: RECEIVE_LAST_BLOCK,\n  lastBlock: replyObj.lastBlock,\n});\n\nexport const fetchPrices = () => (dispatch) => statAPIUtil.lastPrices()\n  .then((prices) => dispatch(receievePrice(prices)));\n\nexport const fetchTotalSupply = () => (dispatch) => statAPIUtil.totalSupply()\n  .then((totalSupply) => dispatch(receieveTotalSupply(totalSupply)));\n\nexport const fetchBlockChairStats = () => (dispatch) => statAPIUtil.blockChairStats()\n  .then((stats) => {\n    dispatch(receiveBlockChairStates(stats));\n  });\n\nexport const fetchTetherTxHistory = () => (dispatch) => statAPIUtil.tetherTxHistory30Day()\n  .then((countTxs) => dispatch(receieveTetherTxHistory(countTxs)));\n\nexport const fetchLastBlock = () => (dispatch) => statAPIUtil.lastBlock()\n  .then((lastBlock) => dispatch(receieveLastBlock(lastBlock)));\n\n  \n"]},"metadata":{},"sourceType":"module"}