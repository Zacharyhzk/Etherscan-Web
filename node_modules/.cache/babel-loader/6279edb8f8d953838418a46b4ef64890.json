{"ast":null,"code":"import * as AddressAPIUtil from '../util/address_api_util';\nexport var RECEIVE_ADDRESS_TYPE_TAGS = 'RECEIVE_ADDRESS_TYPE_TAGS';\nexport var RECEIVE_ADDRESS_TYPE_TAG = 'RECEIVE_ADDRESS_TYPE_TAG';\nexport var receievAddressTypeTags = function receievAddressTypeTags(addressTypeTags) {\n  return {\n    type: RECEIVE_ADDRESS_TYPE_TAGS,\n    addressTypeTags: addressTypeTags\n  };\n};\nexport var receievAddressTypeTag = function receievAddressTypeTag(addressTypeTag) {\n  return {\n    type: RECEIVE_ADDRESS_TYPE_TAG,\n    addressTypeTag: addressTypeTag\n  };\n};\nexport var fetchAddressTypeTags = function fetchAddressTypeTags() {\n  return function (dispatch) {\n    return AddressAPIUtil.addressTypeTags().then(function (tags) {\n      return dispatch(receievAddressTypeTags(tags));\n    });\n  };\n};\nexport var fetchAddressTypeTag = function fetchAddressTypeTag(address) {\n  return function (dispatch) {\n    return AddressAPIUtil.addressTypeTag(address).then(function (tag) {\n      return dispatch(receievAddressTypeTag(tag));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/huangzhongkai/Desktop/ntu msis/Semester 2/Blockchain System Software Engineering/FrontendAssessment/codes/Codes/src/actions/address_actions.js"],"names":["AddressAPIUtil","RECEIVE_ADDRESS_TYPE_TAGS","RECEIVE_ADDRESS_TYPE_TAG","receievAddressTypeTags","addressTypeTags","type","receievAddressTypeTag","addressTypeTag","fetchAddressTypeTags","dispatch","then","tags","fetchAddressTypeTag","address","tag"],"mappings":"AAAA,OAAO,KAAKA,cAAZ,MAAgC,0BAAhC;AAEA,OAAO,IAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,IAAMC,wBAAwB,GAAG,0BAAjC;AAEP,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,eAAD;AAAA,SAAsB;AAC1DC,IAAAA,IAAI,EAAEJ,yBADoD;AAE1DG,IAAAA,eAAe,EAAfA;AAF0D,GAAtB;AAAA,CAA/B;AAKP,OAAO,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,cAAD;AAAA,SAAqB;AACxDF,IAAAA,IAAI,EAAEH,wBADkD;AAExDK,IAAAA,cAAc,EAAdA;AAFwD,GAArB;AAAA,CAA9B;AAKP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,SAAM,UAACC,QAAD;AAAA,WAAcT,cAAc,CACnEI,eADqD,GAErDM,IAFqD,CAEhD,UAACC,IAAD;AAAA,aAAUF,QAAQ,CAACN,sBAAsB,CAACQ,IAAD,CAAvB,CAAlB;AAAA,KAFgD,CAAd;AAAA,GAAN;AAAA,CAA7B;AAIP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,OAAD;AAAA,SAAa,UAACJ,QAAD;AAAA,WAAcT,cAAc,CACzEO,cAD2D,CAC5CM,OAD4C,EAE3DH,IAF2D,CAEtD,UAACI,GAAD;AAAA,aAASL,QAAQ,CAACH,qBAAqB,CAACQ,GAAD,CAAtB,CAAjB;AAAA,KAFsD,CAAd;AAAA,GAAb;AAAA,CAA5B","sourcesContent":["import * as AddressAPIUtil from '../util/address_api_util';\n\nexport const RECEIVE_ADDRESS_TYPE_TAGS = 'RECEIVE_ADDRESS_TYPE_TAGS';\nexport const RECEIVE_ADDRESS_TYPE_TAG = 'RECEIVE_ADDRESS_TYPE_TAG';\n\nexport const receievAddressTypeTags = (addressTypeTags) => ({\n  type: RECEIVE_ADDRESS_TYPE_TAGS,\n  addressTypeTags,\n});\n\nexport const receievAddressTypeTag = (addressTypeTag) => ({\n  type: RECEIVE_ADDRESS_TYPE_TAG,\n  addressTypeTag,\n});\n\nexport const fetchAddressTypeTags = () => (dispatch) => AddressAPIUtil\n  .addressTypeTags()\n  .then((tags) => dispatch(receievAddressTypeTags(tags)));\n\nexport const fetchAddressTypeTag = (address) => (dispatch) => AddressAPIUtil\n  .addressTypeTag(address)\n  .then((tag) => dispatch(receievAddressTypeTag(tag)));\n\n  "]},"metadata":{},"sourceType":"module"}