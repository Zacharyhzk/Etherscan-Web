{"ast":null,"code":"import _toConsumableArray from \"/Users/huangzhongkai/Desktop/ntu msis/Semester 2/Blockchain System Software Engineering/FrontendAssessment/codes/Codes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/huangzhongkai/Desktop/ntu msis/Semester 2/Blockchain System Software Engineering/FrontendAssessment/codes/Codes/src/components/home/tx_history_graph.jsx\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\nvar months = Object.freeze(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);\n\nvar TXHistoryGraph = function TXHistoryGraph(_ref) {\n  var tetherTXHistory = _ref.tetherTXHistory;\n\n  var recent = _toConsumableArray(tetherTXHistory).reverse().slice(14);\n\n  debugger;\n  var cleanData = recent.map(function (data, idx) {\n    var _data$_id = data._id,\n        month = _data$_id.month,\n        day = _data$_id.day;\n    var date = \"\".concat(months[month - 1], \" \").concat(day);\n    var quant = (data.cnt / 1000).toString().slice(0, 3);\n    return {\n      date: date,\n      yVal: \"\".concat(quant, \" k\"),\n      txs_k: data.cnt / 1000\n    };\n  });\n  return React.createElement(LineChart, {\n    width: 320,\n    height: 105,\n    data: cleanData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"txs_k\",\n    stroke: \"#1E2002\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"date\",\n    axisLine: false,\n    interval: \"preserveStart\",\n    tickCount: 3,\n    height: 10,\n    tickSize: true,\n    dy: \"25\",\n    padding: {\n      left: 30,\n      right: 30,\n      top: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    axisLine: false,\n    interval: \"preserveEnd\",\n    tickCount: 3,\n    type: \"number\",\n    domain: ['dataMin', 'dataMax + 5'],\n    tickSize: true,\n    padding: {\n      left: 0,\n      right: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n};\n\nexport default TXHistoryGraph;","map":{"version":3,"sources":["/Users/huangzhongkai/Desktop/ntu msis/Semester 2/Blockchain System Software Engineering/FrontendAssessment/codes/Codes/src/components/home/tx_history_graph.jsx"],"names":["React","LineChart","Line","XAxis","YAxis","Tooltip","ResponsiveContainer","months","Object","freeze","TXHistoryGraph","tetherTXHistory","recent","reverse","slice","cleanData","map","data","idx","_id","month","day","date","quant","cnt","toString","yVal","txs_k","left","right","top"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,OAAxC,EAAiDC,mBAAjD,QAA4E,UAA5E;AAEA,IAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAC3B,KAD2B,EACpB,KADoB,EACb,KADa,CAAd,CAAf;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAyB;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;;AAC9C,MAAMC,MAAM,GAAG,mBAAID,eAAJ,EAAqBE,OAArB,GAA+BC,KAA/B,CAAqC,EAArC,CAAf;;AACA;AACA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAP,CAAW,UAACC,IAAD,EAAOC,GAAP,EAAe;AAAA,oBACnBD,IAAI,CAACE,GADc;AAAA,QAClCC,KADkC,aAClCA,KADkC;AAAA,QAC3BC,GAD2B,aAC3BA,GAD2B;AAG1C,QAAMC,IAAI,aAAMf,MAAM,CAACa,KAAK,GAAG,CAAT,CAAZ,cAA2BC,GAA3B,CAAV;AACA,QAAME,KAAK,GAAG,CAACN,IAAI,CAACO,GAAL,GAAW,IAAZ,EACXC,QADW,GAEXX,KAFW,CAEL,CAFK,EAEF,CAFE,CAAd;AAIA,WAAO;AAAEQ,MAAAA,IAAI,EAAJA,IAAF;AAAQI,MAAAA,IAAI,YAAKH,KAAL,OAAZ;AAA4BI,MAAAA,KAAK,EAAGV,IAAI,CAACO,GAAL,GAAW;AAA/C,KAAP;AACD,GATiB,CAAlB;AAWA,SAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE,GAAlB;AAAuB,IAAA,MAAM,EAAE,GAA/B;AAAoC,IAAA,IAAI,EAAET,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,OAA9B;AAAsC,IAAA,MAAM,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,QAAQ,EAAE,KAFZ;AAGE,IAAA,QAAQ,EAAC,eAHX;AAIE,IAAA,SAAS,EAAE,CAJb;AAKE,IAAA,MAAM,EAAE,EALV;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,EAAE,EAAC,IAPL;AAQE,IAAA,OAAO,EAAE;AAAEa,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,KAAK,EAAE,EAAnB;AAAuBC,MAAAA,GAAG,EAAE;AAA5B,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAaE,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAE,KADZ;AAEE,IAAA,QAAQ,EAAC,aAFX;AAGE,IAAA,SAAS,EAAE,CAHb;AAKE,IAAA,IAAI,EAAC,QALP;AAKgB,IAAA,MAAM,EAAE,CAAC,SAAD,EAAY,aAAZ,CALxB;AAOE,IAAA,QAAQ,MAPV;AAQE,IAAA,OAAO,EAAE;AAAEF,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,KAAK,EAAE;AAAlB,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAFF;AA4BD,CA1CD;;AA4CA,eAAenB,cAAf","sourcesContent":["import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst months = Object.freeze(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n  'Oct', 'Nov', 'Dec']);\n\nconst TXHistoryGraph = ({ tetherTXHistory }) => {\n  const recent = [...tetherTXHistory].reverse().slice(14)\n  debugger\n  const cleanData = recent.map((data, idx) => {\n    const { month, day } = data._id;\n\n    const date = `${months[month - 1]} ${day}`;\n    const quant = (data.cnt / 1000)\n      .toString()\n      .slice(0, 3)\n\n    return { date, yVal: `${quant} k`, txs_k: (data.cnt / 1000) }\n  })\n\n  return (\n\n    <LineChart width={320} height={105} data={cleanData} >\n      <Tooltip />\n      <Line type=\"monotone\" dataKey=\"txs_k\" stroke=\"#1E2002\" />\n      <XAxis\n        dataKey=\"date\"\n        axisLine={false}\n        interval=\"preserveStart\"\n        tickCount={3}\n        height={10}\n        tickSize\n        dy='25'\n        padding={{ left: 30, right: 30, top: 5 }}\n      />\n      <YAxis\n        axisLine={false}\n        interval=\"preserveEnd\"\n        tickCount={3}\n\n        type=\"number\" domain={['dataMin', 'dataMax + 5']}\n\n        tickSize\n        padding={{ left: 0, right: 5 }}\n      />\n\n    </LineChart>\n  )\n}\n\nexport default TXHistoryGraph;"]},"metadata":{},"sourceType":"module"}