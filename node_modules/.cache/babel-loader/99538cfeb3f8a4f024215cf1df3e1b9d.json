{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('react-popper'), require('react-dom')) : typeof define === 'function' && define.amd ? define(['exports', 'react', 'react-popper', 'react-dom'], factory) : (global = global || self, factory(global.Reactstrap = {}, global.React, global.ReactPopper, global.ReactDOM));\n})(this, function (exports, React, reactPopper, ReactDOM) {\n  'use strict';\n\n  var React__default = 'default' in React ? React['default'] : React;\n  ReactDOM = ReactDOM && Object.prototype.hasOwnProperty.call(ReactDOM, 'default') ? ReactDOM['default'] : ReactDOM;\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n\n    _setPrototypeOf(subClass, superClass);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function unwrapExports(x) {\n    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n  }\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  function getCjsExportFromNamespace(n) {\n    return n && n['default'] || n;\n  }\n  /** @license React v16.13.1\n   * react-is.production.min.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n\n  var b = \"function\" === typeof Symbol && Symbol.for,\n      c = b ? Symbol.for(\"react.element\") : 60103,\n      d = b ? Symbol.for(\"react.portal\") : 60106,\n      e = b ? Symbol.for(\"react.fragment\") : 60107,\n      f = b ? Symbol.for(\"react.strict_mode\") : 60108,\n      g = b ? Symbol.for(\"react.profiler\") : 60114,\n      h = b ? Symbol.for(\"react.provider\") : 60109,\n      k = b ? Symbol.for(\"react.context\") : 60110,\n      l = b ? Symbol.for(\"react.async_mode\") : 60111,\n      m = b ? Symbol.for(\"react.concurrent_mode\") : 60111,\n      n = b ? Symbol.for(\"react.forward_ref\") : 60112,\n      p = b ? Symbol.for(\"react.suspense\") : 60113,\n      q = b ? Symbol.for(\"react.suspense_list\") : 60120,\n      r = b ? Symbol.for(\"react.memo\") : 60115,\n      t = b ? Symbol.for(\"react.lazy\") : 60116,\n      v = b ? Symbol.for(\"react.block\") : 60121,\n      w = b ? Symbol.for(\"react.fundamental\") : 60117,\n      x = b ? Symbol.for(\"react.responder\") : 60118,\n      y = b ? Symbol.for(\"react.scope\") : 60119;\n\n  function z(a) {\n    if (\"object\" === typeof a && null !== a) {\n      var u = a.$$typeof;\n\n      switch (u) {\n        case c:\n          switch (a = a.type, a) {\n            case l:\n            case m:\n            case e:\n            case g:\n            case f:\n            case p:\n              return a;\n\n            default:\n              switch (a = a && a.$$typeof, a) {\n                case k:\n                case n:\n                case t:\n                case r:\n                case h:\n                  return a;\n\n                default:\n                  return u;\n              }\n\n          }\n\n        case d:\n          return u;\n      }\n    }\n  }\n\n  function A(a) {\n    return z(a) === m;\n  }\n\n  var AsyncMode = l;\n  var ConcurrentMode = m;\n  var ContextConsumer = k;\n  var ContextProvider = h;\n  var Element = c;\n  var ForwardRef = n;\n  var Fragment = e;\n  var Lazy = t;\n  var Memo = r;\n  var Portal = d;\n  var Profiler = g;\n  var StrictMode = f;\n  var Suspense = p;\n\n  var isAsyncMode = function isAsyncMode(a) {\n    return A(a) || z(a) === l;\n  };\n\n  var isConcurrentMode = A;\n\n  var isContextConsumer = function isContextConsumer(a) {\n    return z(a) === k;\n  };\n\n  var isContextProvider = function isContextProvider(a) {\n    return z(a) === h;\n  };\n\n  var isElement = function isElement(a) {\n    return \"object\" === typeof a && null !== a && a.$$typeof === c;\n  };\n\n  var isForwardRef = function isForwardRef(a) {\n    return z(a) === n;\n  };\n\n  var isFragment = function isFragment(a) {\n    return z(a) === e;\n  };\n\n  var isLazy = function isLazy(a) {\n    return z(a) === t;\n  };\n\n  var isMemo = function isMemo(a) {\n    return z(a) === r;\n  };\n\n  var isPortal = function isPortal(a) {\n    return z(a) === d;\n  };\n\n  var isProfiler = function isProfiler(a) {\n    return z(a) === g;\n  };\n\n  var isStrictMode = function isStrictMode(a) {\n    return z(a) === f;\n  };\n\n  var isSuspense = function isSuspense(a) {\n    return z(a) === p;\n  };\n\n  var isValidElementType = function isValidElementType(a) {\n    return \"string\" === typeof a || \"function\" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || \"object\" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);\n  };\n\n  var typeOf = z;\n  var reactIs_production_min = {\n    AsyncMode: AsyncMode,\n    ConcurrentMode: ConcurrentMode,\n    ContextConsumer: ContextConsumer,\n    ContextProvider: ContextProvider,\n    Element: Element,\n    ForwardRef: ForwardRef,\n    Fragment: Fragment,\n    Lazy: Lazy,\n    Memo: Memo,\n    Portal: Portal,\n    Profiler: Profiler,\n    StrictMode: StrictMode,\n    Suspense: Suspense,\n    isAsyncMode: isAsyncMode,\n    isConcurrentMode: isConcurrentMode,\n    isContextConsumer: isContextConsumer,\n    isContextProvider: isContextProvider,\n    isElement: isElement,\n    isForwardRef: isForwardRef,\n    isFragment: isFragment,\n    isLazy: isLazy,\n    isMemo: isMemo,\n    isPortal: isPortal,\n    isProfiler: isProfiler,\n    isStrictMode: isStrictMode,\n    isSuspense: isSuspense,\n    isValidElementType: isValidElementType,\n    typeOf: typeOf\n  };\n  var reactIs_development = createCommonjsModule(function (module, exports) {});\n  var reactIs_development_1 = reactIs_development.AsyncMode;\n  var reactIs_development_2 = reactIs_development.ConcurrentMode;\n  var reactIs_development_3 = reactIs_development.ContextConsumer;\n  var reactIs_development_4 = reactIs_development.ContextProvider;\n  var reactIs_development_5 = reactIs_development.Element;\n  var reactIs_development_6 = reactIs_development.ForwardRef;\n  var reactIs_development_7 = reactIs_development.Fragment;\n  var reactIs_development_8 = reactIs_development.Lazy;\n  var reactIs_development_9 = reactIs_development.Memo;\n  var reactIs_development_10 = reactIs_development.Portal;\n  var reactIs_development_11 = reactIs_development.Profiler;\n  var reactIs_development_12 = reactIs_development.StrictMode;\n  var reactIs_development_13 = reactIs_development.Suspense;\n  var reactIs_development_14 = reactIs_development.isAsyncMode;\n  var reactIs_development_15 = reactIs_development.isConcurrentMode;\n  var reactIs_development_16 = reactIs_development.isContextConsumer;\n  var reactIs_development_17 = reactIs_development.isContextProvider;\n  var reactIs_development_18 = reactIs_development.isElement;\n  var reactIs_development_19 = reactIs_development.isForwardRef;\n  var reactIs_development_20 = reactIs_development.isFragment;\n  var reactIs_development_21 = reactIs_development.isLazy;\n  var reactIs_development_22 = reactIs_development.isMemo;\n  var reactIs_development_23 = reactIs_development.isPortal;\n  var reactIs_development_24 = reactIs_development.isProfiler;\n  var reactIs_development_25 = reactIs_development.isStrictMode;\n  var reactIs_development_26 = reactIs_development.isSuspense;\n  var reactIs_development_27 = reactIs_development.isValidElementType;\n  var reactIs_development_28 = reactIs_development.typeOf;\n  var reactIs = createCommonjsModule(function (module) {\n    {\n      module.exports = reactIs_production_min;\n    }\n  });\n  /*\n  object-assign\n  (c) Sindre Sorhus\n  @license MIT\n  */\n\n  /* eslint-disable no-unused-vars */\n\n  var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n  function toObject(val) {\n    if (val === null || val === undefined) {\n      throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n\n    return Object(val);\n  }\n\n  function shouldUseNative() {\n    try {\n      if (!Object.assign) {\n        return false;\n      } // Detect buggy property enumeration order in older V8 versions.\n      // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n      var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n      test1[5] = 'de';\n\n      if (Object.getOwnPropertyNames(test1)[0] === '5') {\n        return false;\n      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n      var test2 = {};\n\n      for (var i = 0; i < 10; i++) {\n        test2['_' + String.fromCharCode(i)] = i;\n      }\n\n      var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n        return test2[n];\n      });\n\n      if (order2.join('') !== '0123456789') {\n        return false;\n      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n      var test3 = {};\n      'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n        test3[letter] = letter;\n      });\n\n      if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n        return false;\n      }\n\n      return true;\n    } catch (err) {\n      // We don't expect any of the above to throw, but better to be safe.\n      return false;\n    }\n  }\n\n  var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n    var from;\n    var to = toObject(target);\n    var symbols;\n\n    for (var s = 1; s < arguments.length; s++) {\n      from = Object(arguments[s]);\n\n      for (var key in from) {\n        if (hasOwnProperty.call(from, key)) {\n          to[key] = from[key];\n        }\n      }\n\n      if (getOwnPropertySymbols) {\n        symbols = getOwnPropertySymbols(from);\n\n        for (var i = 0; i < symbols.length; i++) {\n          if (propIsEnumerable.call(from, symbols[i])) {\n            to[symbols[i]] = from[symbols[i]];\n          }\n        }\n      }\n    }\n\n    return to;\n  };\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n  var ReactPropTypesSecret_1 = ReactPropTypesSecret;\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  function emptyFunction() {}\n\n  function emptyFunctionWithReset() {}\n\n  emptyFunctionWithReset.resetWarningCache = emptyFunction;\n\n  var factoryWithThrowingShims = function factoryWithThrowingShims() {\n    function shim(props, propName, componentName, location, propFullName, secret) {\n      if (secret === ReactPropTypesSecret_1) {\n        // It is still safe when called from React.\n        return;\n      }\n\n      var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n      err.name = 'Invariant Violation';\n      throw err;\n    }\n\n    shim.isRequired = shim;\n\n    function getShim() {\n      return shim;\n    } // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n\n    var ReactPropTypes = {\n      array: shim,\n      bool: shim,\n      func: shim,\n      number: shim,\n      object: shim,\n      string: shim,\n      symbol: shim,\n      any: shim,\n      arrayOf: getShim,\n      element: shim,\n      elementType: shim,\n      instanceOf: getShim,\n      node: shim,\n      objectOf: getShim,\n      oneOf: getShim,\n      oneOfType: getShim,\n      shape: getShim,\n      exact: getShim,\n      checkPropTypes: emptyFunctionWithReset,\n      resetWarningCache: emptyFunction\n    };\n    ReactPropTypes.PropTypes = ReactPropTypes;\n    return ReactPropTypes;\n  };\n\n  var propTypes = createCommonjsModule(function (module) {\n    /**\n     * Copyright (c) 2013-present, Facebook, Inc.\n     *\n     * This source code is licensed under the MIT license found in the\n     * LICENSE file in the root directory of this source tree.\n     */\n    {\n      // By explicitly using `prop-types` you are opting into new production behavior.\n      // http://fb.me/prop-types-in-prod\n      module.exports = factoryWithThrowingShims();\n    }\n  });\n  var classnames = createCommonjsModule(function (module) {\n    /*!\n      Copyright (c) 2018 Jed Watson.\n      Licensed under the MIT License (MIT), see\n      http://jedwatson.github.io/classnames\n    */\n\n    /* global define */\n    (function () {\n      var hasOwn = {}.hasOwnProperty;\n\n      function classNames() {\n        var classes = [];\n\n        for (var i = 0; i < arguments.length; i++) {\n          var arg = arguments[i];\n          if (!arg) continue;\n          var argType = typeof arg;\n\n          if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n          } else if (Array.isArray(arg)) {\n            if (arg.length) {\n              var inner = classNames.apply(null, arg);\n\n              if (inner) {\n                classes.push(inner);\n              }\n            }\n          } else if (argType === 'object') {\n            if (arg.toString === Object.prototype.toString) {\n              for (var key in arg) {\n                if (hasOwn.call(arg, key) && arg[key]) {\n                  classes.push(key);\n                }\n              }\n            } else {\n              classes.push(arg.toString());\n            }\n          }\n        }\n\n        return classes.join(' ');\n      }\n\n      if (module.exports) {\n        classNames.default = classNames;\n        module.exports = classNames;\n      } else {\n        window.classNames = classNames;\n      }\n    })();\n  });\n\n  function getScrollbarWidth() {\n    var scrollDiv = document.createElement('div'); // .modal-scrollbar-measure styles // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/scss/_modal.scss#L106-L113\n\n    scrollDiv.style.position = 'absolute';\n    scrollDiv.style.top = '-9999px';\n    scrollDiv.style.width = '50px';\n    scrollDiv.style.height = '50px';\n    scrollDiv.style.overflow = 'scroll';\n    document.body.appendChild(scrollDiv);\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    return scrollbarWidth;\n  }\n\n  function setScrollbarWidth(padding) {\n    document.body.style.paddingRight = padding > 0 ? padding + \"px\" : null;\n  }\n\n  function isBodyOverflowing() {\n    return document.body.clientWidth < window.innerWidth;\n  }\n\n  function getOriginalBodyPadding() {\n    var style = window.getComputedStyle(document.body, null);\n    return parseInt(style && style.getPropertyValue('padding-right') || 0, 10);\n  }\n\n  function conditionallyUpdateScrollbar() {\n    var scrollbarWidth = getScrollbarWidth(); // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.6/js/src/modal.js#L433\n\n    var fixedContent = document.querySelectorAll('.fixed-top, .fixed-bottom, .is-fixed, .sticky-top')[0];\n    var bodyPadding = fixedContent ? parseInt(fixedContent.style.paddingRight || 0, 10) : 0;\n\n    if (isBodyOverflowing()) {\n      setScrollbarWidth(bodyPadding + scrollbarWidth);\n    }\n  }\n\n  var globalCssModule;\n\n  function setGlobalCssModule(cssModule) {\n    globalCssModule = cssModule;\n  }\n\n  function mapToCssModules(className, cssModule) {\n    if (className === void 0) {\n      className = '';\n    }\n\n    if (cssModule === void 0) {\n      cssModule = globalCssModule;\n    }\n\n    if (!cssModule) return className;\n    return className.split(' ').map(function (c) {\n      return cssModule[c] || c;\n    }).join(' ');\n  }\n  /**\n   * Returns a new object with the key/value pairs from `obj` that are not in the array `omitKeys`.\n   */\n\n\n  function omit(obj, omitKeys) {\n    var result = {};\n    Object.keys(obj).forEach(function (key) {\n      if (omitKeys.indexOf(key) === -1) {\n        result[key] = obj[key];\n      }\n    });\n    return result;\n  }\n  /**\n   * Returns a filtered copy of an object with only the specified keys.\n   */\n\n\n  function pick(obj, keys) {\n    var pickKeys = Array.isArray(keys) ? keys : [keys];\n    var length = pickKeys.length;\n    var key;\n    var result = {};\n\n    while (length > 0) {\n      length -= 1;\n      key = pickKeys[length];\n      result[key] = obj[key];\n    }\n\n    return result;\n  }\n\n  var warned = {};\n\n  function warnOnce(message) {\n    if (!warned[message]) {\n      /* istanbul ignore else */\n      if (typeof console !== 'undefined') {\n        console.error(message); // eslint-disable-line no-console\n      }\n\n      warned[message] = true;\n    }\n  }\n\n  function deprecated(propType, explanation) {\n    return function validate(props, propName, componentName) {\n      if (props[propName] !== null && typeof props[propName] !== 'undefined') {\n        warnOnce(\"\\\"\" + propName + \"\\\" property of \\\"\" + componentName + \"\\\" has been deprecated.\\n\" + explanation);\n      }\n\n      for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n        rest[_key - 3] = arguments[_key];\n      }\n\n      return propType.apply(void 0, [props, propName, componentName].concat(rest));\n    };\n  } // Shim Element if needed (e.g. in Node environment)\n\n\n  var Element$1 = typeof window === 'object' && window.Element || function () {};\n\n  function DOMElement(props, propName, componentName) {\n    if (!(props[propName] instanceof Element$1)) {\n      return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`. Expected prop to be an instance of Element. Validation failed.');\n    }\n  }\n\n  var targetPropType = propTypes.oneOfType([propTypes.string, propTypes.func, DOMElement, propTypes.shape({\n    current: propTypes.any\n  })]);\n  var tagPropType = propTypes.oneOfType([propTypes.func, propTypes.string, propTypes.shape({\n    $$typeof: propTypes.symbol,\n    render: propTypes.func\n  }), propTypes.arrayOf(propTypes.oneOfType([propTypes.func, propTypes.string, propTypes.shape({\n    $$typeof: propTypes.symbol,\n    render: propTypes.func\n  })]))]);\n  /* eslint key-spacing: [\"error\", { afterColon: true, align: \"value\" }] */\n  // These are all setup to match what is in the bootstrap _variables.scss\n  // https://github.com/twbs/bootstrap/blob/v4-dev/scss/_variables.scss\n\n  var TransitionTimeouts = {\n    Fade: 150,\n    // $transition-fade\n    Collapse: 350,\n    // $transition-collapse\n    Modal: 300,\n    // $modal-transition\n    Carousel: 600 // $carousel-transition\n\n  }; // Duplicated Transition.propType keys to ensure that Reactstrap builds\n  // for distribution properly exclude these keys for nested child HTML attributes\n  // since `react-transition-group` removes propTypes in production builds.\n\n  var TransitionPropTypeKeys = ['in', 'mountOnEnter', 'unmountOnExit', 'appear', 'enter', 'exit', 'timeout', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'];\n  var TransitionStatuses = {\n    ENTERING: 'entering',\n    ENTERED: 'entered',\n    EXITING: 'exiting',\n    EXITED: 'exited'\n  };\n  var keyCodes = {\n    esc: 27,\n    space: 32,\n    enter: 13,\n    tab: 9,\n    up: 38,\n    down: 40,\n    home: 36,\n    end: 35,\n    n: 78,\n    p: 80\n  };\n  var PopperPlacements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n  function isReactRefObj(target) {\n    if (target && typeof target === 'object') {\n      return 'current' in target;\n    }\n\n    return false;\n  }\n\n  function getTag(value) {\n    if (value == null) {\n      return value === undefined ? '[object Undefined]' : '[object Null]';\n    }\n\n    return Object.prototype.toString.call(value);\n  }\n\n  function toNumber(value) {\n    var type = typeof value;\n    var NAN = 0 / 0;\n\n    if (type === 'number') {\n      return value;\n    }\n\n    if (type === 'symbol' || type === 'object' && getTag(value) === '[object Symbol]') {\n      return NAN;\n    }\n\n    if (isObject(value)) {\n      var other = typeof value.valueOf === 'function' ? value.valueOf() : value;\n      value = isObject(other) ? \"\" + other : other;\n    }\n\n    if (type !== 'string') {\n      return value === 0 ? value : +value;\n    }\n\n    value = value.replace(/^\\s+|\\s+$/g, '');\n    var isBinary = /^0b[01]+$/i.test(value);\n    return isBinary || /^0o[0-7]+$/i.test(value) ? parseInt(value.slice(2), isBinary ? 2 : 8) : /^[-+]0x[0-9a-f]+$/i.test(value) ? NAN : +value;\n  }\n\n  function isObject(value) {\n    var type = typeof value;\n    return value != null && (type === 'object' || type === 'function');\n  }\n\n  function isFunction(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    var tag = getTag(value);\n    return tag === '[object Function]' || tag === '[object AsyncFunction]' || tag === '[object GeneratorFunction]' || tag === '[object Proxy]';\n  }\n\n  function findDOMElements(target) {\n    if (isReactRefObj(target)) {\n      return target.current;\n    }\n\n    if (isFunction(target)) {\n      return target();\n    }\n\n    if (typeof target === 'string' && canUseDOM) {\n      var selection = document.querySelectorAll(target);\n\n      if (!selection.length) {\n        selection = document.querySelectorAll(\"#\" + target);\n      }\n\n      if (!selection.length) {\n        throw new Error(\"The target '\" + target + \"' could not be identified in the dom, tip: check spelling\");\n      }\n\n      return selection;\n    }\n\n    return target;\n  }\n\n  function isArrayOrNodeList(els) {\n    if (els === null) {\n      return false;\n    }\n\n    return Array.isArray(els) || canUseDOM && typeof els.length === 'number';\n  }\n\n  function getTarget(target, allElements) {\n    var els = findDOMElements(target);\n\n    if (allElements) {\n      if (isArrayOrNodeList(els)) {\n        return els;\n      }\n\n      if (els === null) {\n        return [];\n      }\n\n      return [els];\n    } else {\n      if (isArrayOrNodeList(els)) {\n        return els[0];\n      }\n\n      return els;\n    }\n  }\n\n  var defaultToggleEvents = ['touchstart', 'click'];\n\n  function addMultipleEventListeners(_els, handler, _events, useCapture) {\n    var els = _els;\n\n    if (!isArrayOrNodeList(els)) {\n      els = [els];\n    }\n\n    var events = _events;\n\n    if (typeof events === 'string') {\n      events = events.split(/\\s+/);\n    }\n\n    if (!isArrayOrNodeList(els) || typeof handler !== 'function' || !Array.isArray(events)) {\n      throw new Error(\"\\n      The first argument of this function must be DOM node or an array on DOM nodes or NodeList.\\n      The second must be a function.\\n      The third is a string or an array of strings that represents DOM events\\n    \");\n    }\n\n    Array.prototype.forEach.call(events, function (event) {\n      Array.prototype.forEach.call(els, function (el) {\n        el.addEventListener(event, handler, useCapture);\n      });\n    });\n    return function removeEvents() {\n      Array.prototype.forEach.call(events, function (event) {\n        Array.prototype.forEach.call(els, function (el) {\n          el.removeEventListener(event, handler, useCapture);\n        });\n      });\n    };\n  }\n\n  var focusableElements = ['a[href]', 'area[href]', 'input:not([disabled]):not([type=hidden])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'object', 'embed', '[tabindex]:not(.modal)', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])'];\n  var utils =\n  /*#__PURE__*/\n  Object.freeze({\n    __proto__: null,\n    getScrollbarWidth: getScrollbarWidth,\n    setScrollbarWidth: setScrollbarWidth,\n    isBodyOverflowing: isBodyOverflowing,\n    getOriginalBodyPadding: getOriginalBodyPadding,\n    conditionallyUpdateScrollbar: conditionallyUpdateScrollbar,\n    setGlobalCssModule: setGlobalCssModule,\n    mapToCssModules: mapToCssModules,\n    omit: omit,\n    pick: pick,\n    warnOnce: warnOnce,\n    deprecated: deprecated,\n    DOMElement: DOMElement,\n    targetPropType: targetPropType,\n    tagPropType: tagPropType,\n    TransitionTimeouts: TransitionTimeouts,\n    TransitionPropTypeKeys: TransitionPropTypeKeys,\n    TransitionStatuses: TransitionStatuses,\n    keyCodes: keyCodes,\n    PopperPlacements: PopperPlacements,\n    canUseDOM: canUseDOM,\n    isReactRefObj: isReactRefObj,\n    toNumber: toNumber,\n    isObject: isObject,\n    isFunction: isFunction,\n    findDOMElements: findDOMElements,\n    isArrayOrNodeList: isArrayOrNodeList,\n    getTarget: getTarget,\n    defaultToggleEvents: defaultToggleEvents,\n    addMultipleEventListeners: addMultipleEventListeners,\n    focusableElements: focusableElements\n  });\n  var _excluded = [\"className\", \"cssModule\", \"fluid\", \"tag\"];\n  var propTypes$1 = {\n    tag: tagPropType,\n    fluid: propTypes.oneOfType([propTypes.bool, propTypes.string]),\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps = {\n    tag: 'div'\n  };\n\n  var Container = function Container(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        fluid = props.fluid,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n    var containerClass = 'container';\n\n    if (fluid === true) {\n      containerClass = 'container-fluid';\n    } else if (fluid) {\n      containerClass = \"container-\" + fluid;\n    }\n\n    var classes = mapToCssModules(classnames(className, containerClass), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  Container.propTypes = propTypes$1;\n  Container.defaultProps = defaultProps;\n  var _excluded$1 = [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"];\n  var rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\n  var rowColsPropType = propTypes.oneOfType([propTypes.number, propTypes.string]);\n  var propTypes$2 = {\n    tag: tagPropType,\n    noGutters: propTypes.bool,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    form: propTypes.bool,\n    xs: rowColsPropType,\n    sm: rowColsPropType,\n    md: rowColsPropType,\n    lg: rowColsPropType,\n    xl: rowColsPropType\n  };\n  var defaultProps$1 = {\n    tag: 'div',\n    widths: rowColWidths\n  };\n\n  var Row = function Row(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        noGutters = props.noGutters,\n        Tag = props.tag,\n        form = props.form,\n        widths = props.widths,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$1);\n\n    var colClasses = [];\n    widths.forEach(function (colWidth, i) {\n      var colSize = props[colWidth];\n      delete attributes[colWidth];\n\n      if (!colSize) {\n        return;\n      }\n\n      var isXs = !i;\n      colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n    });\n    var classes = mapToCssModules(classnames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  Row.propTypes = propTypes$2;\n  Row.defaultProps = defaultProps$1;\n  var _excluded$2 = [\"className\", \"cssModule\", \"widths\", \"tag\"];\n  var colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\n  var stringOrNumberProp = propTypes.oneOfType([propTypes.number, propTypes.string]);\n  var columnProps = propTypes.oneOfType([propTypes.bool, propTypes.number, propTypes.string, propTypes.shape({\n    size: propTypes.oneOfType([propTypes.bool, propTypes.number, propTypes.string]),\n    order: stringOrNumberProp,\n    offset: stringOrNumberProp\n  })]);\n  var propTypes$3 = {\n    tag: tagPropType,\n    xs: columnProps,\n    sm: columnProps,\n    md: columnProps,\n    lg: columnProps,\n    xl: columnProps,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    widths: propTypes.array\n  };\n  var defaultProps$2 = {\n    tag: 'div',\n    widths: colWidths\n  };\n\n  var getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n    if (colSize === true || colSize === '') {\n      return isXs ? 'col' : \"col-\" + colWidth;\n    } else if (colSize === 'auto') {\n      return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n    }\n\n    return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n  };\n\n  var Col = function Col(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        widths = props.widths,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n    var colClasses = [];\n    widths.forEach(function (colWidth, i) {\n      var columnProp = props[colWidth];\n      delete attributes[colWidth];\n\n      if (!columnProp && columnProp !== '') {\n        return;\n      }\n\n      var isXs = !i;\n\n      if (isObject(columnProp)) {\n        var _classNames;\n\n        var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n        var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n        colClasses.push(mapToCssModules(classnames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n      } else {\n        var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n        colClasses.push(_colClass);\n      }\n    });\n\n    if (!colClasses.length) {\n      colClasses.push('col');\n    }\n\n    var classes = mapToCssModules(classnames(className, colClasses), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  Col.propTypes = propTypes$3;\n  Col.defaultProps = defaultProps$2;\n  var _excluded$3 = [\"expand\", \"className\", \"cssModule\", \"light\", \"dark\", \"fixed\", \"sticky\", \"color\", \"tag\"];\n  var propTypes$4 = {\n    light: propTypes.bool,\n    dark: propTypes.bool,\n    full: propTypes.bool,\n    fixed: propTypes.string,\n    sticky: propTypes.string,\n    color: propTypes.string,\n    role: propTypes.string,\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    expand: propTypes.oneOfType([propTypes.bool, propTypes.string])\n  };\n  var defaultProps$3 = {\n    tag: 'nav',\n    expand: false\n  };\n\n  var getExpandClass = function getExpandClass(expand) {\n    if (expand === false) {\n      return false;\n    } else if (expand === true || expand === 'xs') {\n      return 'navbar-expand';\n    }\n\n    return \"navbar-expand-\" + expand;\n  };\n\n  var Navbar = function Navbar(props) {\n    var _classNames;\n\n    var expand = props.expand,\n        className = props.className,\n        cssModule = props.cssModule,\n        light = props.light,\n        dark = props.dark,\n        fixed = props.fixed,\n        sticky = props.sticky,\n        color = props.color,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$3);\n\n    var classes = mapToCssModules(classnames(className, 'navbar', getExpandClass(expand), (_classNames = {\n      'navbar-light': light,\n      'navbar-dark': dark\n    }, _classNames[\"bg-\" + color] = color, _classNames[\"fixed-\" + fixed] = fixed, _classNames[\"sticky-\" + sticky] = sticky, _classNames)), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  Navbar.propTypes = propTypes$4;\n  Navbar.defaultProps = defaultProps$3;\n  var _excluded$4 = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$5 = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$4 = {\n    tag: 'a'\n  };\n\n  var NavbarBrand = function NavbarBrand(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$4);\n\n    var classes = mapToCssModules(classnames(className, 'navbar-brand'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  NavbarBrand.propTypes = propTypes$5;\n  NavbarBrand.defaultProps = defaultProps$4;\n  var _excluded$5 = [\"className\", \"cssModule\", \"active\", \"tag\"];\n  var propTypes$6 = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$5 = {\n    tag: 'span'\n  };\n\n  var NavbarText = function NavbarText(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        active = props.active,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$5);\n\n    var classes = mapToCssModules(classnames(className, 'navbar-text'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  NavbarText.propTypes = propTypes$6;\n  NavbarText.defaultProps = defaultProps$5;\n  var _excluded$6 = [\"className\", \"cssModule\", \"children\", \"tag\"];\n  var propTypes$7 = {\n    tag: tagPropType,\n    type: propTypes.string,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    children: propTypes.node\n  };\n  var defaultProps$6 = {\n    tag: 'button',\n    type: 'button'\n  };\n\n  var NavbarToggler = function NavbarToggler(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        children = props.children,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$6);\n\n    var classes = mapToCssModules(classnames(className, 'navbar-toggler'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({\n        \"aria-label\": \"Toggle navigation\"\n      }, attributes, {\n        className: classes\n      }), children ||\n      /*#__PURE__*/\n      React__default.createElement(\"span\", {\n        className: mapToCssModules('navbar-toggler-icon', cssModule)\n      }))\n    );\n  };\n\n  NavbarToggler.propTypes = propTypes$7;\n  NavbarToggler.defaultProps = defaultProps$6;\n  var _excluded$7 = [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"];\n  var propTypes$8 = {\n    tabs: propTypes.bool,\n    pills: propTypes.bool,\n    vertical: propTypes.oneOfType([propTypes.bool, propTypes.string]),\n    horizontal: propTypes.string,\n    justified: propTypes.bool,\n    fill: propTypes.bool,\n    navbar: propTypes.bool,\n    card: propTypes.bool,\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$7 = {\n    tag: 'ul',\n    vertical: false\n  };\n\n  var getVerticalClass = function getVerticalClass(vertical) {\n    if (vertical === false) {\n      return false;\n    } else if (vertical === true || vertical === 'xs') {\n      return 'flex-column';\n    }\n\n    return \"flex-\" + vertical + \"-column\";\n  };\n\n  var Nav = function Nav(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        tabs = props.tabs,\n        pills = props.pills,\n        vertical = props.vertical,\n        horizontal = props.horizontal,\n        justified = props.justified,\n        fill = props.fill,\n        navbar = props.navbar,\n        card = props.card,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$7);\n\n    var classes = mapToCssModules(classnames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n      'nav-tabs': tabs,\n      'card-header-tabs': card && tabs,\n      'nav-pills': pills,\n      'card-header-pills': card && pills,\n      'nav-justified': justified,\n      'nav-fill': fill\n    }), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  Nav.propTypes = propTypes$8;\n  Nav.defaultProps = defaultProps$7;\n  var _excluded$8 = [\"className\", \"cssModule\", \"active\", \"tag\"];\n  var propTypes$9 = {\n    tag: tagPropType,\n    active: propTypes.bool,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$8 = {\n    tag: 'li'\n  };\n\n  var NavItem = function NavItem(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        active = props.active,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$8);\n\n    var classes = mapToCssModules(classnames(className, 'nav-item', active ? 'active' : false), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  NavItem.propTypes = propTypes$9;\n  NavItem.defaultProps = defaultProps$8;\n  var _excluded$9 = [\"className\", \"cssModule\", \"active\", \"tag\", \"innerRef\"];\n  var propTypes$a = {\n    tag: tagPropType,\n    innerRef: propTypes.oneOfType([propTypes.object, propTypes.func, propTypes.string]),\n    disabled: propTypes.bool,\n    active: propTypes.bool,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    onClick: propTypes.func,\n    href: propTypes.any\n  };\n  var defaultProps$9 = {\n    tag: 'a'\n  };\n\n  var NavLink =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(NavLink, _React$Component);\n\n    function NavLink(props) {\n      var _this;\n\n      _this = _React$Component.call(this, props) || this;\n      _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    var _proto = NavLink.prototype;\n\n    _proto.onClick = function onClick(e) {\n      if (this.props.disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      if (this.props.href === '#') {\n        e.preventDefault();\n      }\n\n      if (this.props.onClick) {\n        this.props.onClick(e);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          cssModule = _this$props.cssModule,\n          active = _this$props.active,\n          Tag = _this$props.tag,\n          innerRef = _this$props.innerRef,\n          attributes = _objectWithoutPropertiesLoose(_this$props, _excluded$9);\n\n      var classes = mapToCssModules(classnames(className, 'nav-link', {\n        disabled: attributes.disabled,\n        active: active\n      }), cssModule);\n      return (\n        /*#__PURE__*/\n        React__default.createElement(Tag, _extends({}, attributes, {\n          ref: innerRef,\n          onClick: this.onClick,\n          className: classes\n        }))\n      );\n    };\n\n    return NavLink;\n  }(React__default.Component);\n\n  NavLink.propTypes = propTypes$a;\n  NavLink.defaultProps = defaultProps$9;\n  var _excluded$a = [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"];\n  var propTypes$b = {\n    tag: tagPropType,\n    listTag: tagPropType,\n    className: propTypes.string,\n    listClassName: propTypes.string,\n    cssModule: propTypes.object,\n    children: propTypes.node,\n    'aria-label': propTypes.string\n  };\n  var defaultProps$a = {\n    tag: 'nav',\n    listTag: 'ol',\n    'aria-label': 'breadcrumb'\n  };\n\n  var Breadcrumb = function Breadcrumb(props) {\n    var className = props.className,\n        listClassName = props.listClassName,\n        cssModule = props.cssModule,\n        children = props.children,\n        Tag = props.tag,\n        ListTag = props.listTag,\n        label = props['aria-label'],\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$a);\n\n    var classes = mapToCssModules(classnames(className), cssModule);\n    var listClasses = mapToCssModules(classnames('breadcrumb', listClassName), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes,\n        \"aria-label\": label\n      }),\n      /*#__PURE__*/\n      React__default.createElement(ListTag, {\n        className: listClasses\n      }, children))\n    );\n  };\n\n  Breadcrumb.propTypes = propTypes$b;\n  Breadcrumb.defaultProps = defaultProps$a;\n  var _excluded$b = [\"className\", \"cssModule\", \"active\", \"tag\"];\n  var propTypes$c = {\n    tag: tagPropType,\n    active: propTypes.bool,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$b = {\n    tag: 'li'\n  };\n\n  var BreadcrumbItem = function BreadcrumbItem(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        active = props.active,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$b);\n\n    var classes = mapToCssModules(classnames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes,\n        \"aria-current\": active ? 'page' : undefined\n      }))\n    );\n  };\n\n  BreadcrumbItem.propTypes = propTypes$c;\n  BreadcrumbItem.defaultProps = defaultProps$b;\n  var _excluded$c = [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"];\n  var propTypes$d = {\n    active: propTypes.bool,\n    'aria-label': propTypes.string,\n    block: propTypes.bool,\n    color: propTypes.string,\n    disabled: propTypes.bool,\n    outline: propTypes.bool,\n    tag: tagPropType,\n    innerRef: propTypes.oneOfType([propTypes.object, propTypes.func, propTypes.string]),\n    onClick: propTypes.func,\n    size: propTypes.string,\n    children: propTypes.node,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    close: propTypes.bool\n  };\n  var defaultProps$c = {\n    color: 'secondary',\n    tag: 'button'\n  };\n\n  var Button =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(Button, _React$Component);\n\n    function Button(props) {\n      var _this;\n\n      _this = _React$Component.call(this, props) || this;\n      _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    var _proto = Button.prototype;\n\n    _proto.onClick = function onClick(e) {\n      if (this.props.disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      if (this.props.onClick) {\n        return this.props.onClick(e);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props = this.props,\n          active = _this$props.active,\n          ariaLabel = _this$props['aria-label'],\n          block = _this$props.block,\n          className = _this$props.className,\n          close = _this$props.close,\n          cssModule = _this$props.cssModule,\n          color = _this$props.color,\n          outline = _this$props.outline,\n          size = _this$props.size,\n          Tag = _this$props.tag,\n          innerRef = _this$props.innerRef,\n          attributes = _objectWithoutPropertiesLoose(_this$props, _excluded$c);\n\n      if (close && typeof attributes.children === 'undefined') {\n        attributes.children =\n        /*#__PURE__*/\n        React__default.createElement(\"span\", {\n          \"aria-hidden\": true\n        }, \"\\xD7\");\n      }\n\n      var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n      var classes = mapToCssModules(classnames(className, {\n        close: close\n      }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n        active: active,\n        disabled: this.props.disabled\n      }), cssModule);\n\n      if (attributes.href && Tag === 'button') {\n        Tag = 'a';\n      }\n\n      var defaultAriaLabel = close ? 'Close' : null;\n      return (\n        /*#__PURE__*/\n        React__default.createElement(Tag, _extends({\n          type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n        }, attributes, {\n          className: classes,\n          ref: innerRef,\n          onClick: this.onClick,\n          \"aria-label\": ariaLabel || defaultAriaLabel\n        }))\n      );\n    };\n\n    return Button;\n  }(React__default.Component);\n\n  Button.propTypes = propTypes$d;\n  Button.defaultProps = defaultProps$c;\n  var _excluded$d = [\"className\"];\n  var propTypes$e = {\n    onClick: propTypes.func,\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n    defaultValue: propTypes.bool\n  };\n  var defaultProps$d = {\n    defaultValue: false\n  };\n\n  var ButtonToggle =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(ButtonToggle, _React$Component);\n\n    function ButtonToggle(props) {\n      var _this;\n\n      _this = _React$Component.call(this, props) || this;\n      _this.state = {\n        toggled: props.defaultValue,\n        focus: false\n      };\n      _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n      _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n      _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    var _proto = ButtonToggle.prototype;\n\n    _proto.onBlur = function onBlur(e) {\n      if (this.props.onBlur) {\n        this.props.onBlur(e);\n      }\n\n      this.setState({\n        focus: false\n      });\n    };\n\n    _proto.onFocus = function onFocus(e) {\n      if (this.props.onFocus) {\n        this.props.onFocus(e);\n      }\n\n      this.setState({\n        focus: true\n      });\n    };\n\n    _proto.onClick = function onClick(e) {\n      if (this.props.onClick) {\n        this.props.onClick(e);\n      }\n\n      this.setState(function (_ref) {\n        var toggled = _ref.toggled;\n        return {\n          toggled: !toggled\n        };\n      });\n    };\n\n    _proto.render = function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          attributes = _objectWithoutPropertiesLoose(_this$props, _excluded$d);\n\n      var classes = mapToCssModules(classnames(className, {\n        focus: this.state.focus\n      }), this.props.cssModule);\n      return (\n        /*#__PURE__*/\n        React__default.createElement(Button, _extends({\n          active: this.state.toggled,\n          onBlur: this.onBlur,\n          onFocus: this.onFocus,\n          onClick: this.onClick,\n          className: classes\n        }, attributes))\n      );\n    };\n\n    return ButtonToggle;\n  }(React__default.Component);\n\n  ButtonToggle.propTypes = propTypes$e;\n  ButtonToggle.defaultProps = defaultProps$d;\n  /**\n   * DropdownContext\n   * {\n   *  toggle: PropTypes.func.isRequired,\n   *  isOpen: PropTypes.bool.isRequired,\n   *  direction: PropTypes.oneOf(['up', 'down', 'left', 'right']).isRequired,\n   *  inNavbar: PropTypes.bool.isRequired,\n   *  disabled: PropTypes.bool\n   * }\n   */\n\n  var DropdownContext =\n  /*#__PURE__*/\n  React__default.createContext({});\n  var _excluded$e = [\"className\", \"cssModule\", \"direction\", \"isOpen\", \"group\", \"size\", \"nav\", \"setActiveFromChild\", \"active\", \"addonType\", \"tag\", \"menuRole\"];\n  var propTypes$f = {\n    a11y: propTypes.bool,\n    disabled: propTypes.bool,\n    direction: propTypes.oneOf(['up', 'down', 'left', 'right']),\n    group: propTypes.bool,\n    isOpen: propTypes.bool,\n    nav: propTypes.bool,\n    active: propTypes.bool,\n    addonType: propTypes.oneOfType([propTypes.bool, propTypes.oneOf(['prepend', 'append'])]),\n    size: propTypes.string,\n    tag: tagPropType,\n    toggle: propTypes.func,\n    children: propTypes.node,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    inNavbar: propTypes.bool,\n    setActiveFromChild: propTypes.bool,\n    menuRole: propTypes.oneOf(['listbox', 'menu'])\n  };\n  var defaultProps$e = {\n    a11y: true,\n    isOpen: false,\n    direction: 'down',\n    nav: false,\n    active: false,\n    addonType: false,\n    inNavbar: false,\n    setActiveFromChild: false\n  };\n  var preventDefaultKeys = [keyCodes.space, keyCodes.enter, keyCodes.up, keyCodes.down, keyCodes.end, keyCodes.home];\n\n  var Dropdown =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(Dropdown, _React$Component);\n\n    function Dropdown(props) {\n      var _this;\n\n      _this = _React$Component.call(this, props) || this;\n      _this.addEvents = _this.addEvents.bind(_assertThisInitialized(_this));\n      _this.handleDocumentClick = _this.handleDocumentClick.bind(_assertThisInitialized(_this));\n      _this.handleKeyDown = _this.handleKeyDown.bind(_assertThisInitialized(_this));\n      _this.removeEvents = _this.removeEvents.bind(_assertThisInitialized(_this));\n      _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n      _this.handleMenuRef = _this.handleMenuRef.bind(_assertThisInitialized(_this));\n      _this.containerRef =\n      /*#__PURE__*/\n      React__default.createRef();\n      _this.menuRef =\n      /*#__PURE__*/\n      React__default.createRef();\n      return _this;\n    }\n\n    var _proto = Dropdown.prototype;\n\n    _proto.handleMenuRef = function handleMenuRef(menuRef) {\n      this.menuRef.current = menuRef;\n    };\n\n    _proto.getContextValue = function getContextValue() {\n      return {\n        toggle: this.toggle,\n        isOpen: this.props.isOpen,\n        direction: this.props.direction === 'down' && this.props.dropup ? 'up' : this.props.direction,\n        inNavbar: this.props.inNavbar,\n        disabled: this.props.disabled,\n        // Callback that should be called by DropdownMenu to provide a ref to\n        // a HTML tag that's used for the DropdownMenu\n        onMenuRef: this.handleMenuRef,\n        menuRole: this.props.menuRole\n      };\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      this.handleProps();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n      if (this.props.isOpen !== prevProps.isOpen) {\n        this.handleProps();\n      }\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.removeEvents();\n    };\n\n    _proto.getContainer = function getContainer() {\n      return this.containerRef.current;\n    };\n\n    _proto.getMenu = function getMenu() {\n      return this.menuRef.current;\n    };\n\n    _proto.getMenuCtrl = function getMenuCtrl() {\n      if (this._$menuCtrl) return this._$menuCtrl;\n      this._$menuCtrl = this.getContainer().querySelector('[aria-expanded]');\n      return this._$menuCtrl;\n    };\n\n    _proto.getItemType = function getItemType() {\n      if (this.context.menuRole === 'listbox') {\n        return 'option';\n      }\n\n      return 'menuitem';\n    };\n\n    _proto.getMenuItems = function getMenuItems() {\n      // In a real menu with a child DropdownMenu, `this.getMenu()` should never\n      // be null, but it is sometimes null in tests. To mitigate that, we just\n      // use `this.getContainer()` as the fallback `menuContainer`.\n      var menuContainer = this.getMenu() || this.getContainer();\n      return [].slice.call(menuContainer.querySelectorAll(\"[role=\\\"\" + this.getItemType() + \"\\\"]\"));\n    };\n\n    _proto.addEvents = function addEvents() {\n      var _this2 = this;\n\n      ['click', 'touchstart', 'keyup'].forEach(function (event) {\n        return document.addEventListener(event, _this2.handleDocumentClick, true);\n      });\n    };\n\n    _proto.removeEvents = function removeEvents() {\n      var _this3 = this;\n\n      ['click', 'touchstart', 'keyup'].forEach(function (event) {\n        return document.removeEventListener(event, _this3.handleDocumentClick, true);\n      });\n    };\n\n    _proto.handleDocumentClick = function handleDocumentClick(e) {\n      if (e && (e.which === 3 || e.type === 'keyup' && e.which !== keyCodes.tab)) return;\n      var container = this.getContainer();\n      var menu = this.getMenu();\n      var clickIsInContainer = container.contains(e.target) && container !== e.target;\n      var clickIsInMenu = menu && menu.contains(e.target) && menu !== e.target;\n\n      if ((clickIsInContainer || clickIsInMenu) && (e.type !== 'keyup' || e.which === keyCodes.tab)) {\n        return;\n      }\n\n      this.toggle(e);\n    };\n\n    _proto.handleKeyDown = function handleKeyDown(e) {\n      var _this4 = this;\n\n      var isTargetMenuItem = e.target.getAttribute('role') === 'menuitem' || e.target.getAttribute('role') === 'option';\n      var isTargetMenuCtrl = this.getMenuCtrl() === e.target;\n      var isTab = keyCodes.tab === e.which;\n\n      if (/input|textarea/i.test(e.target.tagName) || isTab && !this.props.a11y || isTab && !(isTargetMenuItem || isTargetMenuCtrl)) {\n        return;\n      }\n\n      if (preventDefaultKeys.indexOf(e.which) !== -1 || e.which >= 48 && e.which <= 90) {\n        e.preventDefault();\n      }\n\n      if (this.props.disabled) return;\n\n      if (isTargetMenuCtrl) {\n        if ([keyCodes.space, keyCodes.enter, keyCodes.up, keyCodes.down].indexOf(e.which) > -1) {\n          // Open the menu (if not open) and focus the first menu item\n          if (!this.props.isOpen) {\n            this.toggle(e);\n          }\n\n          setTimeout(function () {\n            return _this4.getMenuItems()[0].focus();\n          });\n        } else if (this.props.isOpen && isTab) {\n          // Focus the first menu item if tabbing from an open menu. We need this\n          // for cases where the DropdownMenu sets a custom container, which may\n          // not be the natural next item to tab to from the DropdownToggle.\n          e.preventDefault();\n          this.getMenuItems()[0].focus();\n        } else if (this.props.isOpen && e.which === keyCodes.esc) {\n          this.toggle(e);\n        }\n      }\n\n      if (this.props.isOpen && isTargetMenuItem) {\n        if ([keyCodes.tab, keyCodes.esc].indexOf(e.which) > -1) {\n          this.toggle(e);\n          this.getMenuCtrl().focus();\n        } else if ([keyCodes.space, keyCodes.enter].indexOf(e.which) > -1) {\n          e.target.click();\n          this.getMenuCtrl().focus();\n        } else if ([keyCodes.down, keyCodes.up].indexOf(e.which) > -1 || [keyCodes.n, keyCodes.p].indexOf(e.which) > -1 && e.ctrlKey) {\n          var $menuitems = this.getMenuItems();\n          var index = $menuitems.indexOf(e.target);\n\n          if (keyCodes.up === e.which || keyCodes.p === e.which && e.ctrlKey) {\n            index = index !== 0 ? index - 1 : $menuitems.length - 1;\n          } else if (keyCodes.down === e.which || keyCodes.n === e.which && e.ctrlKey) {\n            index = index === $menuitems.length - 1 ? 0 : index + 1;\n          }\n\n          $menuitems[index].focus();\n        } else if (keyCodes.end === e.which) {\n          var _$menuitems = this.getMenuItems();\n\n          _$menuitems[_$menuitems.length - 1].focus();\n        } else if (keyCodes.home === e.which) {\n          var _$menuitems2 = this.getMenuItems();\n\n          _$menuitems2[0].focus();\n        } else if (e.which >= 48 && e.which <= 90) {\n          var _$menuitems3 = this.getMenuItems();\n\n          var charPressed = String.fromCharCode(e.which).toLowerCase();\n\n          for (var i = 0; i < _$menuitems3.length; i += 1) {\n            var firstLetter = _$menuitems3[i].textContent && _$menuitems3[i].textContent[0].toLowerCase();\n\n            if (firstLetter === charPressed) {\n              _$menuitems3[i].focus();\n\n              break;\n            }\n          }\n        }\n      }\n    };\n\n    _proto.handleProps = function handleProps() {\n      if (this.props.isOpen) {\n        this.addEvents();\n      } else {\n        this.removeEvents();\n      }\n    };\n\n    _proto.toggle = function toggle(e) {\n      if (this.props.disabled) {\n        return e && e.preventDefault();\n      }\n\n      return this.props.toggle(e);\n    };\n\n    _proto.render = function render() {\n      var _classNames, _ref;\n\n      var _omit = omit(this.props, ['toggle', 'disabled', 'inNavbar', 'a11y']),\n          className = _omit.className,\n          cssModule = _omit.cssModule,\n          direction = _omit.direction,\n          isOpen = _omit.isOpen,\n          group = _omit.group,\n          size = _omit.size,\n          nav = _omit.nav,\n          setActiveFromChild = _omit.setActiveFromChild,\n          active = _omit.active,\n          addonType = _omit.addonType,\n          tag = _omit.tag,\n          attrs = _objectWithoutPropertiesLoose(_omit, _excluded$e);\n\n      var Tag = tag || (nav ? 'li' : 'div');\n      var subItemIsActive = false;\n\n      if (setActiveFromChild) {\n        React__default.Children.map(this.props.children[1].props.children, function (dropdownItem) {\n          if (dropdownItem && dropdownItem.props.active) subItemIsActive = true;\n        });\n      }\n\n      var classes = mapToCssModules(classnames(className, direction !== 'down' && \"drop\" + direction, nav && active ? 'active' : false, setActiveFromChild && subItemIsActive ? 'active' : false, (_classNames = {}, _classNames[\"input-group-\" + addonType] = addonType, _classNames['btn-group'] = group, _classNames[\"btn-group-\" + size] = !!size, _classNames.dropdown = !group && !addonType, _classNames.show = isOpen, _classNames['nav-item'] = nav, _classNames)), cssModule);\n      return (\n        /*#__PURE__*/\n        React__default.createElement(DropdownContext.Provider, {\n          value: this.getContextValue()\n        },\n        /*#__PURE__*/\n        React__default.createElement(reactPopper.Manager, null,\n        /*#__PURE__*/\n        React__default.createElement(Tag, _extends({}, attrs, (_ref = {}, _ref[typeof Tag === 'string' ? 'ref' : 'innerRef'] = this.containerRef, _ref), {\n          onKeyDown: this.handleKeyDown,\n          className: classes\n        }))))\n      );\n    };\n\n    return Dropdown;\n  }(React__default.Component);\n\n  Dropdown.propTypes = propTypes$f;\n  Dropdown.defaultProps = defaultProps$e;\n  var propTypes$g = {\n    children: propTypes.node\n  };\n\n  var ButtonDropdown = function ButtonDropdown(props) {\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Dropdown, _extends({\n        group: true\n      }, props))\n    );\n  };\n\n  ButtonDropdown.propTypes = propTypes$g;\n  var _excluded$f = [\"className\", \"cssModule\", \"size\", \"vertical\", \"tag\"];\n  var propTypes$h = {\n    tag: tagPropType,\n    'aria-label': propTypes.string,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    role: propTypes.string,\n    size: propTypes.string,\n    vertical: propTypes.bool\n  };\n  var defaultProps$f = {\n    tag: 'div',\n    role: 'group'\n  };\n\n  var ButtonGroup = function ButtonGroup(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        size = props.size,\n        vertical = props.vertical,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$f);\n\n    var classes = mapToCssModules(classnames(className, size ? 'btn-group-' + size : false, vertical ? 'btn-group-vertical' : 'btn-group'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  ButtonGroup.propTypes = propTypes$h;\n  ButtonGroup.defaultProps = defaultProps$f;\n  var _excluded$g = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$i = {\n    tag: tagPropType,\n    'aria-label': propTypes.string,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    role: propTypes.string\n  };\n  var defaultProps$g = {\n    tag: 'div',\n    role: 'toolbar'\n  };\n\n  var ButtonToolbar = function ButtonToolbar(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$g);\n\n    var classes = mapToCssModules(classnames(className, 'btn-toolbar'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  ButtonToolbar.propTypes = propTypes$i;\n  ButtonToolbar.defaultProps = defaultProps$g;\n  var _excluded$h = [\"className\", \"cssModule\", \"divider\", \"tag\", \"header\", \"active\", \"text\"];\n  var propTypes$j = {\n    children: propTypes.node,\n    active: propTypes.bool,\n    disabled: propTypes.bool,\n    divider: propTypes.bool,\n    tag: tagPropType,\n    header: propTypes.bool,\n    onClick: propTypes.func,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    toggle: propTypes.bool,\n    text: propTypes.bool\n  };\n  var defaultProps$h = {\n    tag: 'button',\n    toggle: true\n  };\n\n  var DropdownItem =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(DropdownItem, _React$Component);\n\n    function DropdownItem(props) {\n      var _this;\n\n      _this = _React$Component.call(this, props) || this;\n      _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n      _this.getTabIndex = _this.getTabIndex.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    var _proto = DropdownItem.prototype;\n\n    _proto.getRole = function getRole() {\n      if (this.context.menuRole === 'listbox') {\n        return 'option';\n      }\n\n      return 'menuitem';\n    };\n\n    _proto.onClick = function onClick(e) {\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          header = _this$props.header,\n          divider = _this$props.divider,\n          text = _this$props.text;\n\n      if (disabled || header || divider || text) {\n        e.preventDefault();\n        return;\n      }\n\n      if (this.props.onClick) {\n        this.props.onClick(e);\n      }\n\n      if (this.props.toggle) {\n        this.context.toggle(e);\n      }\n    };\n\n    _proto.getTabIndex = function getTabIndex() {\n      var _this$props2 = this.props,\n          disabled = _this$props2.disabled,\n          header = _this$props2.header,\n          divider = _this$props2.divider,\n          text = _this$props2.text;\n\n      if (disabled || header || divider || text) {\n        return '-1';\n      }\n\n      return '0';\n    };\n\n    _proto.render = function render() {\n      var tabIndex = this.getTabIndex();\n      var role = tabIndex > -1 ? this.getRole() : undefined;\n\n      var _omit = omit(this.props, ['toggle']),\n          className = _omit.className,\n          cssModule = _omit.cssModule,\n          divider = _omit.divider,\n          Tag = _omit.tag,\n          header = _omit.header,\n          active = _omit.active,\n          text = _omit.text,\n          props = _objectWithoutPropertiesLoose(_omit, _excluded$h);\n\n      var classes = mapToCssModules(classnames(className, {\n        disabled: props.disabled,\n        'dropdown-item': !divider && !header && !text,\n        active: active,\n        'dropdown-header': header,\n        'dropdown-divider': divider,\n        'dropdown-item-text': text\n      }), cssModule);\n\n      if (Tag === 'button') {\n        if (header) {\n          Tag = 'h6';\n        } else if (divider) {\n          Tag = 'div';\n        } else if (props.href) {\n          Tag = 'a';\n        } else if (text) {\n          Tag = 'span';\n        }\n      }\n\n      return (\n        /*#__PURE__*/\n        React__default.createElement(Tag, _extends({\n          type: Tag === 'button' && (props.onClick || this.props.toggle) ? 'button' : undefined\n        }, props, {\n          tabIndex: tabIndex,\n          role: role,\n          className: classes,\n          onClick: this.onClick\n        }))\n      );\n    };\n\n    return DropdownItem;\n  }(React__default.Component);\n\n  DropdownItem.propTypes = propTypes$j;\n  DropdownItem.defaultProps = defaultProps$h;\n  DropdownItem.contextType = DropdownContext;\n  var _excluded$i = [\"className\", \"cssModule\", \"right\", \"tag\", \"flip\", \"modifiers\", \"persist\", \"positionFixed\", \"container\"];\n  var propTypes$k = {\n    tag: tagPropType,\n    children: propTypes.node.isRequired,\n    right: propTypes.bool,\n    flip: propTypes.bool,\n    modifiers: propTypes.object,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    persist: propTypes.bool,\n    positionFixed: propTypes.bool,\n    container: targetPropType\n  };\n  var defaultProps$i = {\n    tag: 'div',\n    flip: true\n  };\n  var noFlipModifier = {\n    flip: {\n      enabled: false\n    }\n  };\n  var directionPositionMap = {\n    up: 'top',\n    left: 'left',\n    right: 'right',\n    down: 'bottom'\n  };\n\n  var DropdownMenu =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(DropdownMenu, _React$Component);\n\n    function DropdownMenu() {\n      return _React$Component.apply(this, arguments) || this;\n    }\n\n    var _proto = DropdownMenu.prototype;\n\n    _proto.getRole = function getRole() {\n      if (this.context.menuRole === 'listbox') {\n        return 'listbox';\n      }\n\n      return 'menu';\n    };\n\n    _proto.render = function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          cssModule = _this$props.cssModule,\n          right = _this$props.right,\n          tag = _this$props.tag,\n          flip = _this$props.flip,\n          modifiers = _this$props.modifiers,\n          persist = _this$props.persist,\n          positionFixed = _this$props.positionFixed,\n          container = _this$props.container,\n          attrs = _objectWithoutPropertiesLoose(_this$props, _excluded$i);\n\n      var classes = mapToCssModules(classnames(className, 'dropdown-menu', {\n        'dropdown-menu-right': right,\n        show: this.context.isOpen\n      }), cssModule);\n      var Tag = tag;\n\n      if (persist || this.context.isOpen && !this.context.inNavbar) {\n        var position1 = directionPositionMap[this.context.direction] || 'bottom';\n        var position2 = right ? 'end' : 'start';\n        var poperPlacement = position1 + \"-\" + position2;\n        var poperModifiers = !flip ? _extends({}, modifiers, noFlipModifier) : modifiers;\n        var popperPositionFixed = !!positionFixed;\n        var popper =\n        /*#__PURE__*/\n        React__default.createElement(reactPopper.Popper, {\n          placement: poperPlacement,\n          modifiers: poperModifiers,\n          positionFixed: popperPositionFixed\n        }, function (_ref) {\n          var ref = _ref.ref,\n              style = _ref.style,\n              placement = _ref.placement;\n\n          var combinedStyle = _extends({}, _this.props.style, style);\n\n          var handleRef = function handleRef(tagRef) {\n            // Send the ref to `react-popper`\n            ref(tagRef); // Send the ref to the parent Dropdown so that clicks outside\n            // it will cause it to close\n\n            var onMenuRef = _this.context.onMenuRef;\n            if (onMenuRef) onMenuRef(tagRef);\n          };\n\n          return (\n            /*#__PURE__*/\n            React__default.createElement(Tag, _extends({\n              tabIndex: \"-1\",\n              role: _this.getRole(),\n              ref: handleRef\n            }, attrs, {\n              style: combinedStyle,\n              \"aria-hidden\": !_this.context.isOpen,\n              className: classes,\n              \"x-placement\": placement\n            }))\n          );\n        });\n\n        if (container) {\n          return (\n            /*#__PURE__*/\n            ReactDOM.createPortal(popper, getTarget(container))\n          );\n        } else {\n          return popper;\n        }\n      }\n\n      return (\n        /*#__PURE__*/\n        React__default.createElement(Tag, _extends({\n          tabIndex: \"-1\",\n          role: this.getRole()\n        }, attrs, {\n          \"aria-hidden\": !this.context.isOpen,\n          className: classes,\n          \"x-placement\": attrs.placement\n        }))\n      );\n    };\n\n    return DropdownMenu;\n  }(React__default.Component);\n\n  DropdownMenu.propTypes = propTypes$k;\n  DropdownMenu.defaultProps = defaultProps$i;\n  DropdownMenu.contextType = DropdownContext;\n  var _excluded$j = [\"className\", \"color\", \"cssModule\", \"caret\", \"split\", \"nav\", \"tag\", \"innerRef\"];\n  var propTypes$l = {\n    caret: propTypes.bool,\n    color: propTypes.string,\n    children: propTypes.node,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    disabled: propTypes.bool,\n    onClick: propTypes.func,\n    'aria-haspopup': propTypes.bool,\n    split: propTypes.bool,\n    tag: tagPropType,\n    nav: propTypes.bool\n  };\n  var defaultProps$j = {\n    color: 'secondary',\n    'aria-haspopup': true\n  };\n\n  var DropdownToggle =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(DropdownToggle, _React$Component);\n\n    function DropdownToggle(props) {\n      var _this;\n\n      _this = _React$Component.call(this, props) || this;\n      _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    var _proto = DropdownToggle.prototype;\n\n    _proto.onClick = function onClick(e) {\n      if (this.props.disabled || this.context.disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      if (this.props.nav && !this.props.tag) {\n        e.preventDefault();\n      }\n\n      if (this.props.onClick) {\n        this.props.onClick(e);\n      }\n\n      this.context.toggle(e);\n    };\n\n    _proto.getRole = function getRole() {\n      return this.context.menuRole || this.props['aria-haspopup'];\n    };\n\n    _proto.render = function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          color = _this$props.color,\n          cssModule = _this$props.cssModule,\n          caret = _this$props.caret,\n          split = _this$props.split,\n          nav = _this$props.nav,\n          tag = _this$props.tag,\n          innerRef = _this$props.innerRef,\n          props = _objectWithoutPropertiesLoose(_this$props, _excluded$j);\n\n      var ariaLabel = props['aria-label'] || 'Toggle Dropdown';\n      var classes = mapToCssModules(classnames(className, {\n        'dropdown-toggle': caret || split,\n        'dropdown-toggle-split': split,\n        'nav-link': nav\n      }), cssModule);\n      var children = typeof props.children !== 'undefined' ? props.children :\n      /*#__PURE__*/\n      React__default.createElement(\"span\", {\n        className: \"sr-only\"\n      }, ariaLabel);\n      var Tag;\n\n      if (nav && !tag) {\n        Tag = 'a';\n        props.href = '#';\n      } else if (!tag) {\n        Tag = Button;\n        props.color = color;\n        props.cssModule = cssModule;\n      } else {\n        Tag = tag;\n      }\n\n      if (this.context.inNavbar) {\n        return (\n          /*#__PURE__*/\n          React__default.createElement(Tag, _extends({}, props, {\n            className: classes,\n            onClick: this.onClick,\n            \"aria-expanded\": this.context.isOpen,\n            \"aria-haspopup\": this.getRole(),\n            children: children\n          }))\n        );\n      }\n\n      return (\n        /*#__PURE__*/\n        React__default.createElement(reactPopper.Reference, {\n          innerRef: innerRef\n        }, function (_ref) {\n          var _ref2;\n\n          var ref = _ref.ref;\n          return (\n            /*#__PURE__*/\n            React__default.createElement(Tag, _extends({}, props, (_ref2 = {}, _ref2[typeof Tag === 'string' ? 'ref' : 'innerRef'] = ref, _ref2), {\n              className: classes,\n              onClick: _this2.onClick,\n              \"aria-expanded\": _this2.context.isOpen,\n              \"aria-haspopup\": _this2.getRole(),\n              children: children\n            }))\n          );\n        })\n      );\n    };\n\n    return DropdownToggle;\n  }(React__default.Component);\n\n  DropdownToggle.propTypes = propTypes$l;\n  DropdownToggle.defaultProps = defaultProps$j;\n  DropdownToggle.contextType = DropdownContext;\n  var interopRequireDefault = createCommonjsModule(function (module) {\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        \"default\": obj\n      };\n    }\n\n    module.exports = _interopRequireDefault;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  });\n  unwrapExports(interopRequireDefault);\n  var hasClass_1 = createCommonjsModule(function (module, exports) {\n    exports.__esModule = true;\n    exports.default = hasClass;\n\n    function hasClass(element, className) {\n      if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n    }\n\n    module.exports = exports[\"default\"];\n  });\n  unwrapExports(hasClass_1);\n  var addClass_1 = createCommonjsModule(function (module, exports) {\n    exports.__esModule = true;\n    exports.default = addClass;\n\n    var _hasClass = interopRequireDefault(hasClass_1);\n\n    function addClass(element, className) {\n      if (element.classList) element.classList.add(className);else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);\n    }\n\n    module.exports = exports[\"default\"];\n  });\n  unwrapExports(addClass_1);\n\n  function replaceClassName(origClass, classToRemove) {\n    return origClass.replace(new RegExp('(^|\\\\s)' + classToRemove + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n  }\n\n  var removeClass = function removeClass(element, className) {\n    if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  };\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n\n  function componentWillMount() {\n    // Call this.constructor.gDSFP to support sub-classes.\n    var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n\n    if (state !== null && state !== undefined) {\n      this.setState(state);\n    }\n  }\n\n  function componentWillReceiveProps(nextProps) {\n    // Call this.constructor.gDSFP to support sub-classes.\n    // Use the setState() updater to ensure state isn't stale in certain edge cases.\n    function updater(prevState) {\n      var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n      return state !== null && state !== undefined ? state : null;\n    } // Binding \"this\" is important for shallow renderer support.\n\n\n    this.setState(updater.bind(this));\n  }\n\n  function componentWillUpdate(nextProps, nextState) {\n    try {\n      var prevProps = this.props;\n      var prevState = this.state;\n      this.props = nextProps;\n      this.state = nextState;\n      this.__reactInternalSnapshotFlag = true;\n      this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);\n    } finally {\n      this.props = prevProps;\n      this.state = prevState;\n    }\n  } // React may warn about cWM/cWRP/cWU methods being deprecated.\n  // Add a flag to suppress these warnings for this special case.\n\n\n  componentWillMount.__suppressDeprecationWarning = true;\n  componentWillReceiveProps.__suppressDeprecationWarning = true;\n  componentWillUpdate.__suppressDeprecationWarning = true;\n\n  function polyfill(Component) {\n    var prototype = Component.prototype;\n\n    if (!prototype || !prototype.isReactComponent) {\n      throw new Error('Can only polyfill class components');\n    }\n\n    if (typeof Component.getDerivedStateFromProps !== 'function' && typeof prototype.getSnapshotBeforeUpdate !== 'function') {\n      return Component;\n    } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Error if any of these lifecycles are present,\n    // Because they would work differently between older and newer (16.3+) versions of React.\n\n\n    var foundWillMountName = null;\n    var foundWillReceivePropsName = null;\n    var foundWillUpdateName = null;\n\n    if (typeof prototype.componentWillMount === 'function') {\n      foundWillMountName = 'componentWillMount';\n    } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n      foundWillMountName = 'UNSAFE_componentWillMount';\n    }\n\n    if (typeof prototype.componentWillReceiveProps === 'function') {\n      foundWillReceivePropsName = 'componentWillReceiveProps';\n    } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n      foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n    }\n\n    if (typeof prototype.componentWillUpdate === 'function') {\n      foundWillUpdateName = 'componentWillUpdate';\n    } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n      foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n    }\n\n    if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n      var componentName = Component.displayName || Component.name;\n      var newApiName = typeof Component.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\n      throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + componentName + ' uses ' + newApiName + ' but also contains the following legacy lifecycles:' + (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') + (foundWillReceivePropsName !== null ? '\\n  ' + foundWillReceivePropsName : '') + (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') + '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://fb.me/react-async-component-lifecycle-hooks');\n    } // React <= 16.2 does not support static getDerivedStateFromProps.\n    // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n    // Newer versions of React will ignore these lifecycles if gDSFP exists.\n\n\n    if (typeof Component.getDerivedStateFromProps === 'function') {\n      prototype.componentWillMount = componentWillMount;\n      prototype.componentWillReceiveProps = componentWillReceiveProps;\n    } // React <= 16.2 does not support getSnapshotBeforeUpdate.\n    // As a workaround, use cWU to invoke the new lifecycle.\n    // Newer versions of React will ignore that lifecycle if gSBU exists.\n\n\n    if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n      if (typeof prototype.componentDidUpdate !== 'function') {\n        throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');\n      }\n\n      prototype.componentWillUpdate = componentWillUpdate;\n      var componentDidUpdate = prototype.componentDidUpdate;\n\n      prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {\n        // 16.3+ will not execute our will-update method;\n        // It will pass a snapshot value to did-update though.\n        // Older versions will require our polyfilled will-update value.\n        // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n        // Because for <= 15.x versions this might be a \"prevContext\" object.\n        // We also can't just check \"__reactInternalSnapshot\",\n        // Because get-snapshot might return a falsy value.\n        // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n        var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;\n        componentDidUpdate.call(this, prevProps, prevState, snapshot);\n      };\n    }\n\n    return Component;\n  }\n\n  var reactLifecyclesCompat_es =\n  /*#__PURE__*/\n  Object.freeze({\n    __proto__: null,\n    polyfill: polyfill\n  });\n  var PropTypes = createCommonjsModule(function (module, exports) {\n    exports.__esModule = true;\n    exports.classNamesShape = exports.timeoutsShape = void 0;\n\n    var _propTypes = _interopRequireDefault(propTypes);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }\n\n    var timeoutsShape = null;\n    exports.timeoutsShape = timeoutsShape;\n    var classNamesShape = null;\n    exports.classNamesShape = classNamesShape;\n  });\n  unwrapExports(PropTypes);\n  var PropTypes_1 = PropTypes.classNamesShape;\n  var PropTypes_2 = PropTypes.timeoutsShape;\n  var TransitionGroupContext = createCommonjsModule(function (module, exports) {\n    exports.__esModule = true;\n    exports.default = void 0;\n\n    var _react = _interopRequireDefault(React__default);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }\n\n    var _default = _react.default.createContext(null);\n\n    exports.default = _default;\n    module.exports = exports[\"default\"];\n  });\n  unwrapExports(TransitionGroupContext);\n\n  var _reactLifecyclesCompat = getCjsExportFromNamespace(reactLifecyclesCompat_es);\n\n  var Transition_1 = createCommonjsModule(function (module, exports) {\n    exports.__esModule = true;\n    exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;\n\n    var PropTypes = _interopRequireWildcard(propTypes);\n\n    var _react = _interopRequireDefault(React__default);\n\n    var _reactDom = _interopRequireDefault(ReactDOM);\n\n    var _TransitionGroupContext = _interopRequireDefault(TransitionGroupContext);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }\n\n    function _interopRequireWildcard(obj) {\n      if (obj && obj.__esModule) {\n        return obj;\n      } else {\n        var newObj = {};\n\n        if (obj != null) {\n          for (var key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n              if (desc.get || desc.set) {\n                Object.defineProperty(newObj, key, desc);\n              } else {\n                newObj[key] = obj[key];\n              }\n            }\n          }\n        }\n\n        newObj.default = obj;\n        return newObj;\n      }\n    }\n\n    function _objectWithoutPropertiesLoose(source, excluded) {\n      if (source == null) return {};\n      var target = {};\n      var sourceKeys = Object.keys(source);\n      var key, i;\n\n      for (i = 0; i < sourceKeys.length; i++) {\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n      }\n\n      return target;\n    }\n\n    function _inheritsLoose(subClass, superClass) {\n      subClass.prototype = Object.create(superClass.prototype);\n      subClass.prototype.constructor = subClass;\n      subClass.__proto__ = superClass;\n    }\n\n    var UNMOUNTED = 'unmounted';\n    exports.UNMOUNTED = UNMOUNTED;\n    var EXITED = 'exited';\n    exports.EXITED = EXITED;\n    var ENTERING = 'entering';\n    exports.ENTERING = ENTERING;\n    var ENTERED = 'entered';\n    exports.ENTERED = ENTERED;\n    var EXITING = 'exiting';\n    /**\n     * The Transition component lets you describe a transition from one component\n     * state to another _over time_ with a simple declarative API. Most commonly\n     * it's used to animate the mounting and unmounting of a component, but can also\n     * be used to describe in-place transition states as well.\n     *\n     * ---\n     *\n     * **Note**: `Transition` is a platform-agnostic base component. If you're using\n     * transitions in CSS, you'll probably want to use\n     * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n     * instead. It inherits all the features of `Transition`, but contains\n     * additional features necessary to play nice with CSS transitions (hence the\n     * name of the component).\n     *\n     * ---\n     *\n     * By default the `Transition` component does not alter the behavior of the\n     * component it renders, it only tracks \"enter\" and \"exit\" states for the\n     * components. It's up to you to give meaning and effect to those states. For\n     * example we can add styles to a component when it enters or exits:\n     *\n     * ```jsx\n     * import { Transition } from 'react-transition-group';\n     *\n     * const duration = 300;\n     *\n     * const defaultStyle = {\n     *   transition: `opacity ${duration}ms ease-in-out`,\n     *   opacity: 0,\n     * }\n     *\n     * const transitionStyles = {\n     *   entering: { opacity: 1 },\n     *   entered:  { opacity: 1 },\n     *   exiting:  { opacity: 0 },\n     *   exited:  { opacity: 0 },\n     * };\n     *\n     * const Fade = ({ in: inProp }) => (\n     *   <Transition in={inProp} timeout={duration}>\n     *     {state => (\n     *       <div style={{\n     *         ...defaultStyle,\n     *         ...transitionStyles[state]\n     *       }}>\n     *         I'm a fade Transition!\n     *       </div>\n     *     )}\n     *   </Transition>\n     * );\n     * ```\n     *\n     * There are 4 main states a Transition can be in:\n     *  - `'entering'`\n     *  - `'entered'`\n     *  - `'exiting'`\n     *  - `'exited'`\n     *\n     * Transition state is toggled via the `in` prop. When `true` the component\n     * begins the \"Enter\" stage. During this stage, the component will shift from\n     * its current transition state, to `'entering'` for the duration of the\n     * transition and then to the `'entered'` stage once it's complete. Let's take\n     * the following example (we'll use the\n     * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n     *\n     * ```jsx\n     * function App() {\n     *   const [inProp, setInProp] = useState(false);\n     *   return (\n     *     <div>\n     *       <Transition in={inProp} timeout={500}>\n     *         {state => (\n     *           // ...\n     *         )}\n     *       </Transition>\n     *       <button onClick={() => setInProp(true)}>\n     *         Click to Enter\n     *       </button>\n     *     </div>\n     *   );\n     * }\n     * ```\n     *\n     * When the button is clicked the component will shift to the `'entering'` state\n     * and stay there for 500ms (the value of `timeout`) before it finally switches\n     * to `'entered'`.\n     *\n     * When `in` is `false` the same thing happens except the state moves from\n     * `'exiting'` to `'exited'`.\n     */\n\n    exports.EXITING = EXITING;\n\n    var Transition =\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inheritsLoose(Transition, _React$Component);\n\n      function Transition(props, context) {\n        var _this;\n\n        _this = _React$Component.call(this, props, context) || this;\n        var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n        var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n        var initialStatus;\n        _this.appearStatus = null;\n\n        if (props.in) {\n          if (appear) {\n            initialStatus = EXITED;\n            _this.appearStatus = ENTERING;\n          } else {\n            initialStatus = ENTERED;\n          }\n        } else {\n          if (props.unmountOnExit || props.mountOnEnter) {\n            initialStatus = UNMOUNTED;\n          } else {\n            initialStatus = EXITED;\n          }\n        }\n\n        _this.state = {\n          status: initialStatus\n        };\n        _this.nextCallback = null;\n        return _this;\n      }\n\n      Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n        var nextIn = _ref.in;\n\n        if (nextIn && prevState.status === UNMOUNTED) {\n          return {\n            status: EXITED\n          };\n        }\n\n        return null;\n      }; // getSnapshotBeforeUpdate(prevProps) {\n      //   let nextStatus = null\n      //   if (prevProps !== this.props) {\n      //     const { status } = this.state\n      //     if (this.props.in) {\n      //       if (status !== ENTERING && status !== ENTERED) {\n      //         nextStatus = ENTERING\n      //       }\n      //     } else {\n      //       if (status === ENTERING || status === ENTERED) {\n      //         nextStatus = EXITING\n      //       }\n      //     }\n      //   }\n      //   return { nextStatus }\n      // }\n\n\n      var _proto = Transition.prototype;\n\n      _proto.componentDidMount = function componentDidMount() {\n        this.updateStatus(true, this.appearStatus);\n      };\n\n      _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n        var nextStatus = null;\n\n        if (prevProps !== this.props) {\n          var status = this.state.status;\n\n          if (this.props.in) {\n            if (status !== ENTERING && status !== ENTERED) {\n              nextStatus = ENTERING;\n            }\n          } else {\n            if (status === ENTERING || status === ENTERED) {\n              nextStatus = EXITING;\n            }\n          }\n        }\n\n        this.updateStatus(false, nextStatus);\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        this.cancelNextCallback();\n      };\n\n      _proto.getTimeouts = function getTimeouts() {\n        var timeout = this.props.timeout;\n        var exit, enter, appear;\n        exit = enter = appear = timeout;\n\n        if (timeout != null && typeof timeout !== 'number') {\n          exit = timeout.exit;\n          enter = timeout.enter; // TODO: remove fallback for next major\n\n          appear = timeout.appear !== undefined ? timeout.appear : enter;\n        }\n\n        return {\n          exit: exit,\n          enter: enter,\n          appear: appear\n        };\n      };\n\n      _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n        if (mounting === void 0) {\n          mounting = false;\n        }\n\n        if (nextStatus !== null) {\n          // nextStatus will always be ENTERING or EXITING.\n          this.cancelNextCallback();\n\n          var node = _reactDom.default.findDOMNode(this);\n\n          if (nextStatus === ENTERING) {\n            this.performEnter(node, mounting);\n          } else {\n            this.performExit(node);\n          }\n        } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n          this.setState({\n            status: UNMOUNTED\n          });\n        }\n      };\n\n      _proto.performEnter = function performEnter(node, mounting) {\n        var _this2 = this;\n\n        var enter = this.props.enter;\n        var appearing = this.context ? this.context.isMounting : mounting;\n        var timeouts = this.getTimeouts();\n        var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n        // if we are mounting and running this it means appear _must_ be set\n\n        if (!mounting && !enter) {\n          this.safeSetState({\n            status: ENTERED\n          }, function () {\n            _this2.props.onEntered(node);\n          });\n          return;\n        }\n\n        this.props.onEnter(node, appearing);\n        this.safeSetState({\n          status: ENTERING\n        }, function () {\n          _this2.props.onEntering(node, appearing);\n\n          _this2.onTransitionEnd(node, enterTimeout, function () {\n            _this2.safeSetState({\n              status: ENTERED\n            }, function () {\n              _this2.props.onEntered(node, appearing);\n            });\n          });\n        });\n      };\n\n      _proto.performExit = function performExit(node) {\n        var _this3 = this;\n\n        var exit = this.props.exit;\n        var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n        if (!exit) {\n          this.safeSetState({\n            status: EXITED\n          }, function () {\n            _this3.props.onExited(node);\n          });\n          return;\n        }\n\n        this.props.onExit(node);\n        this.safeSetState({\n          status: EXITING\n        }, function () {\n          _this3.props.onExiting(node);\n\n          _this3.onTransitionEnd(node, timeouts.exit, function () {\n            _this3.safeSetState({\n              status: EXITED\n            }, function () {\n              _this3.props.onExited(node);\n            });\n          });\n        });\n      };\n\n      _proto.cancelNextCallback = function cancelNextCallback() {\n        if (this.nextCallback !== null) {\n          this.nextCallback.cancel();\n          this.nextCallback = null;\n        }\n      };\n\n      _proto.safeSetState = function safeSetState(nextState, callback) {\n        // This shouldn't be necessary, but there are weird race conditions with\n        // setState callbacks and unmounting in testing, so always make sure that\n        // we can cancel any pending setState callbacks after we unmount.\n        callback = this.setNextCallback(callback);\n        this.setState(nextState, callback);\n      };\n\n      _proto.setNextCallback = function setNextCallback(callback) {\n        var _this4 = this;\n\n        var active = true;\n\n        this.nextCallback = function (event) {\n          if (active) {\n            active = false;\n            _this4.nextCallback = null;\n            callback(event);\n          }\n        };\n\n        this.nextCallback.cancel = function () {\n          active = false;\n        };\n\n        return this.nextCallback;\n      };\n\n      _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n        this.setNextCallback(handler);\n        var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n        if (!node || doesNotHaveTimeoutOrListener) {\n          setTimeout(this.nextCallback, 0);\n          return;\n        }\n\n        if (this.props.addEndListener) {\n          this.props.addEndListener(node, this.nextCallback);\n        }\n\n        if (timeout != null) {\n          setTimeout(this.nextCallback, timeout);\n        }\n      };\n\n      _proto.render = function render() {\n        var status = this.state.status;\n\n        if (status === UNMOUNTED) {\n          return null;\n        }\n\n        var _this$props = this.props,\n            children = _this$props.children,\n            childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n\n        delete childProps.in;\n        delete childProps.mountOnEnter;\n        delete childProps.unmountOnExit;\n        delete childProps.appear;\n        delete childProps.enter;\n        delete childProps.exit;\n        delete childProps.timeout;\n        delete childProps.addEndListener;\n        delete childProps.onEnter;\n        delete childProps.onEntering;\n        delete childProps.onEntered;\n        delete childProps.onExit;\n        delete childProps.onExiting;\n        delete childProps.onExited;\n\n        if (typeof children === 'function') {\n          // allows for nested Transitions\n          return _react.default.createElement(_TransitionGroupContext.default.Provider, {\n            value: null\n          }, children(status, childProps));\n        }\n\n        var child = _react.default.Children.only(children);\n\n        return (// allows for nested Transitions\n          _react.default.createElement(_TransitionGroupContext.default.Provider, {\n            value: null\n          }, _react.default.cloneElement(child, childProps))\n        );\n      };\n\n      return Transition;\n    }(_react.default.Component);\n\n    Transition.contextType = _TransitionGroupContext.default;\n    Transition.propTypes = {};\n\n    function noop() {}\n\n    Transition.defaultProps = {\n      in: false,\n      mountOnEnter: false,\n      unmountOnExit: false,\n      appear: false,\n      enter: true,\n      exit: true,\n      onEnter: noop,\n      onEntering: noop,\n      onEntered: noop,\n      onExit: noop,\n      onExiting: noop,\n      onExited: noop\n    };\n    Transition.UNMOUNTED = 0;\n    Transition.EXITED = 1;\n    Transition.ENTERING = 2;\n    Transition.ENTERED = 3;\n    Transition.EXITING = 4;\n\n    var _default = (0, _reactLifecyclesCompat.polyfill)(Transition);\n\n    exports.default = _default;\n  });\n  unwrapExports(Transition_1);\n  var Transition_2 = Transition_1.EXITING;\n  var Transition_3 = Transition_1.ENTERED;\n  var Transition_4 = Transition_1.ENTERING;\n  var Transition_5 = Transition_1.EXITED;\n  var Transition_6 = Transition_1.UNMOUNTED;\n  var CSSTransition_1 = createCommonjsModule(function (module, exports) {\n    exports.__esModule = true;\n    exports.default = void 0;\n\n    var PropTypes = _interopRequireWildcard(propTypes);\n\n    var _addClass = _interopRequireDefault(addClass_1);\n\n    var _removeClass = _interopRequireDefault(removeClass);\n\n    var _react = _interopRequireDefault(React__default);\n\n    var _Transition = _interopRequireDefault(Transition_1);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }\n\n    function _interopRequireWildcard(obj) {\n      if (obj && obj.__esModule) {\n        return obj;\n      } else {\n        var newObj = {};\n\n        if (obj != null) {\n          for (var key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n              if (desc.get || desc.set) {\n                Object.defineProperty(newObj, key, desc);\n              } else {\n                newObj[key] = obj[key];\n              }\n            }\n          }\n        }\n\n        newObj.default = obj;\n        return newObj;\n      }\n    }\n\n    function _extends() {\n      _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      return _extends.apply(this, arguments);\n    }\n\n    function _inheritsLoose(subClass, superClass) {\n      subClass.prototype = Object.create(superClass.prototype);\n      subClass.prototype.constructor = subClass;\n      subClass.__proto__ = superClass;\n    }\n\n    var addClass = function addClass(node, classes) {\n      return node && classes && classes.split(' ').forEach(function (c) {\n        return (0, _addClass.default)(node, c);\n      });\n    };\n\n    var removeClass$1 = function removeClass(node, classes) {\n      return node && classes && classes.split(' ').forEach(function (c) {\n        return (0, _removeClass.default)(node, c);\n      });\n    };\n    /**\n     * A transition component inspired by the excellent\n     * [ng-animate](http://www.nganimate.org/) library, you should use it if you're\n     * using CSS transitions or animations. It's built upon the\n     * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n     * component, so it inherits all of its props.\n     *\n     * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n     * and `exit` states of the transition. The first class is applied and then a\n     * second `*-active` class in order to activate the CSSS transition. After the\n     * transition, matching `*-done` class names are applied to persist the\n     * transition state.\n     *\n     * ```jsx\n     * function App() {\n     *   const [inProp, setInProp] = useState(false);\n     *   return (\n     *     <div>\n     *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n     *         <div>\n     *           {\"I'll receive my-node-* classes\"}\n     *         </div>\n     *       </CSSTransition>\n     *       <button type=\"button\" onClick={() => setInProp(true)}>\n     *         Click to Enter\n     *       </button>\n     *     </div>\n     *   );\n     * }\n     * ```\n     *\n     * When the `in` prop is set to `true`, the child component will first receive\n     * the class `example-enter`, then the `example-enter-active` will be added in\n     * the next tick. `CSSTransition` [forces a\n     * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n     * between before adding the `example-enter-active`. This is an important trick\n     * because it allows us to transition between `example-enter` and\n     * `example-enter-active` even though they were added immediately one after\n     * another. Most notably, this is what makes it possible for us to animate\n     * _appearance_.\n     *\n     * ```css\n     * .my-node-enter {\n     *   opacity: 0;\n     * }\n     * .my-node-enter-active {\n     *   opacity: 1;\n     *   transition: opacity 200ms;\n     * }\n     * .my-node-exit {\n     *   opacity: 1;\n     * }\n     * .my-node-exit-active {\n     *   opacity: 0;\n     *   transition: opacity 200ms;\n     * }\n     * ```\n     *\n     * `*-active` classes represent which styles you want to animate **to**.\n     */\n\n\n    var CSSTransition =\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inheritsLoose(CSSTransition, _React$Component);\n\n      function CSSTransition() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n        _this.onEnter = function (node, appearing) {\n          var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),\n              className = _this$getClassNames.className;\n\n          _this.removeClasses(node, 'exit');\n\n          addClass(node, className);\n\n          if (_this.props.onEnter) {\n            _this.props.onEnter(node, appearing);\n          }\n        };\n\n        _this.onEntering = function (node, appearing) {\n          var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),\n              activeClassName = _this$getClassNames2.activeClassName;\n\n          _this.reflowAndAddClass(node, activeClassName);\n\n          if (_this.props.onEntering) {\n            _this.props.onEntering(node, appearing);\n          }\n        };\n\n        _this.onEntered = function (node, appearing) {\n          var appearClassName = _this.getClassNames('appear').doneClassName;\n\n          var enterClassName = _this.getClassNames('enter').doneClassName;\n\n          var doneClassName = appearing ? appearClassName + \" \" + enterClassName : enterClassName;\n\n          _this.removeClasses(node, appearing ? 'appear' : 'enter');\n\n          addClass(node, doneClassName);\n\n          if (_this.props.onEntered) {\n            _this.props.onEntered(node, appearing);\n          }\n        };\n\n        _this.onExit = function (node) {\n          var _this$getClassNames3 = _this.getClassNames('exit'),\n              className = _this$getClassNames3.className;\n\n          _this.removeClasses(node, 'appear');\n\n          _this.removeClasses(node, 'enter');\n\n          addClass(node, className);\n\n          if (_this.props.onExit) {\n            _this.props.onExit(node);\n          }\n        };\n\n        _this.onExiting = function (node) {\n          var _this$getClassNames4 = _this.getClassNames('exit'),\n              activeClassName = _this$getClassNames4.activeClassName;\n\n          _this.reflowAndAddClass(node, activeClassName);\n\n          if (_this.props.onExiting) {\n            _this.props.onExiting(node);\n          }\n        };\n\n        _this.onExited = function (node) {\n          var _this$getClassNames5 = _this.getClassNames('exit'),\n              doneClassName = _this$getClassNames5.doneClassName;\n\n          _this.removeClasses(node, 'exit');\n\n          addClass(node, doneClassName);\n\n          if (_this.props.onExited) {\n            _this.props.onExited(node);\n          }\n        };\n\n        _this.getClassNames = function (type) {\n          var classNames = _this.props.classNames;\n          var isStringClassNames = typeof classNames === 'string';\n          var prefix = isStringClassNames && classNames ? classNames + '-' : '';\n          var className = isStringClassNames ? prefix + type : classNames[type];\n          var activeClassName = isStringClassNames ? className + '-active' : classNames[type + 'Active'];\n          var doneClassName = isStringClassNames ? className + '-done' : classNames[type + 'Done'];\n          return {\n            className: className,\n            activeClassName: activeClassName,\n            doneClassName: doneClassName\n          };\n        };\n\n        return _this;\n      }\n\n      var _proto = CSSTransition.prototype;\n\n      _proto.removeClasses = function removeClasses(node, type) {\n        var _this$getClassNames6 = this.getClassNames(type),\n            className = _this$getClassNames6.className,\n            activeClassName = _this$getClassNames6.activeClassName,\n            doneClassName = _this$getClassNames6.doneClassName;\n\n        className && removeClass$1(node, className);\n        activeClassName && removeClass$1(node, activeClassName);\n        doneClassName && removeClass$1(node, doneClassName);\n      };\n\n      _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {\n        // This is for to force a repaint,\n        // which is necessary in order to transition styles when adding a class name.\n        if (className) {\n          /* eslint-disable no-unused-expressions */\n          node && node.scrollTop;\n          /* eslint-enable no-unused-expressions */\n\n          addClass(node, className);\n        }\n      };\n\n      _proto.render = function render() {\n        var props = _extends({}, this.props);\n\n        delete props.classNames;\n        return _react.default.createElement(_Transition.default, _extends({}, props, {\n          onEnter: this.onEnter,\n          onEntered: this.onEntered,\n          onEntering: this.onEntering,\n          onExit: this.onExit,\n          onExiting: this.onExiting,\n          onExited: this.onExited\n        }));\n      };\n\n      return CSSTransition;\n    }(_react.default.Component);\n\n    CSSTransition.defaultProps = {\n      classNames: ''\n    };\n    CSSTransition.propTypes = {};\n    var _default = CSSTransition;\n    exports.default = _default;\n    module.exports = exports[\"default\"];\n  });\n  unwrapExports(CSSTransition_1);\n  var ChildMapping = createCommonjsModule(function (module, exports) {\n    exports.__esModule = true;\n    exports.getChildMapping = getChildMapping;\n    exports.mergeChildMappings = mergeChildMappings;\n    exports.getInitialChildMapping = getInitialChildMapping;\n    exports.getNextChildMapping = getNextChildMapping;\n    /**\n     * Given `this.props.children`, return an object mapping key to child.\n     *\n     * @param {*} children `this.props.children`\n     * @return {object} Mapping of key to child\n     */\n\n    function getChildMapping(children, mapFn) {\n      var mapper = function mapper(child) {\n        return mapFn && (0, React__default.isValidElement)(child) ? mapFn(child) : child;\n      };\n\n      var result = Object.create(null);\n      if (children) React__default.Children.map(children, function (c) {\n        return c;\n      }).forEach(function (child) {\n        // run the map function here instead so that the key is the computed one\n        result[child.key] = mapper(child);\n      });\n      return result;\n    }\n    /**\n     * When you're adding or removing children some may be added or removed in the\n     * same render pass. We want to show *both* since we want to simultaneously\n     * animate elements in and out. This function takes a previous set of keys\n     * and a new set of keys and merges them with its best guess of the correct\n     * ordering. In the future we may expose some of the utilities in\n     * ReactMultiChild to make this easy, but for now React itself does not\n     * directly have this concept of the union of prevChildren and nextChildren\n     * so we implement it here.\n     *\n     * @param {object} prev prev children as returned from\n     * `ReactTransitionChildMapping.getChildMapping()`.\n     * @param {object} next next children as returned from\n     * `ReactTransitionChildMapping.getChildMapping()`.\n     * @return {object} a key set that contains all keys in `prev` and all keys\n     * in `next` in a reasonable order.\n     */\n\n\n    function mergeChildMappings(prev, next) {\n      prev = prev || {};\n      next = next || {};\n\n      function getValueForKey(key) {\n        return key in next ? next[key] : prev[key];\n      } // For each key of `next`, the list of keys to insert before that key in\n      // the combined list\n\n\n      var nextKeysPending = Object.create(null);\n      var pendingKeys = [];\n\n      for (var prevKey in prev) {\n        if (prevKey in next) {\n          if (pendingKeys.length) {\n            nextKeysPending[prevKey] = pendingKeys;\n            pendingKeys = [];\n          }\n        } else {\n          pendingKeys.push(prevKey);\n        }\n      }\n\n      var i;\n      var childMapping = {};\n\n      for (var nextKey in next) {\n        if (nextKeysPending[nextKey]) {\n          for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n            var pendingNextKey = nextKeysPending[nextKey][i];\n            childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n          }\n        }\n\n        childMapping[nextKey] = getValueForKey(nextKey);\n      } // Finally, add the keys which didn't appear before any key in `next`\n\n\n      for (i = 0; i < pendingKeys.length; i++) {\n        childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n      }\n\n      return childMapping;\n    }\n\n    function getProp(child, prop, props) {\n      return props[prop] != null ? props[prop] : child.props[prop];\n    }\n\n    function getInitialChildMapping(props, onExited) {\n      return getChildMapping(props.children, function (child) {\n        return (0, React__default.cloneElement)(child, {\n          onExited: onExited.bind(null, child),\n          in: true,\n          appear: getProp(child, 'appear', props),\n          enter: getProp(child, 'enter', props),\n          exit: getProp(child, 'exit', props)\n        });\n      });\n    }\n\n    function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n      var nextChildMapping = getChildMapping(nextProps.children);\n      var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n      Object.keys(children).forEach(function (key) {\n        var child = children[key];\n        if (!(0, React__default.isValidElement)(child)) return;\n        var hasPrev = key in prevChildMapping;\n        var hasNext = key in nextChildMapping;\n        var prevChild = prevChildMapping[key];\n        var isLeaving = (0, React__default.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)\n\n        if (hasNext && (!hasPrev || isLeaving)) {\n          // console.log('entering', key)\n          children[key] = (0, React__default.cloneElement)(child, {\n            onExited: onExited.bind(null, child),\n            in: true,\n            exit: getProp(child, 'exit', nextProps),\n            enter: getProp(child, 'enter', nextProps)\n          });\n        } else if (!hasNext && hasPrev && !isLeaving) {\n          // item is old (exiting)\n          // console.log('leaving', key)\n          children[key] = (0, React__default.cloneElement)(child, {\n            in: false\n          });\n        } else if (hasNext && hasPrev && (0, React__default.isValidElement)(prevChild)) {\n          // item hasn't changed transition states\n          // copy over the last transition props;\n          // console.log('unchanged', key)\n          children[key] = (0, React__default.cloneElement)(child, {\n            onExited: onExited.bind(null, child),\n            in: prevChild.props.in,\n            exit: getProp(child, 'exit', nextProps),\n            enter: getProp(child, 'enter', nextProps)\n          });\n        }\n      });\n      return children;\n    }\n  });\n  unwrapExports(ChildMapping);\n  var ChildMapping_1 = ChildMapping.getChildMapping;\n  var ChildMapping_2 = ChildMapping.mergeChildMappings;\n  var ChildMapping_3 = ChildMapping.getInitialChildMapping;\n  var ChildMapping_4 = ChildMapping.getNextChildMapping;\n  var TransitionGroup_1 = createCommonjsModule(function (module, exports) {\n    exports.__esModule = true;\n    exports.default = void 0;\n\n    var _propTypes = _interopRequireDefault(propTypes);\n\n    var _react = _interopRequireDefault(React__default);\n\n    var _TransitionGroupContext = _interopRequireDefault(TransitionGroupContext);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }\n\n    function _objectWithoutPropertiesLoose(source, excluded) {\n      if (source == null) return {};\n      var target = {};\n      var sourceKeys = Object.keys(source);\n      var key, i;\n\n      for (i = 0; i < sourceKeys.length; i++) {\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n      }\n\n      return target;\n    }\n\n    function _extends() {\n      _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      return _extends.apply(this, arguments);\n    }\n\n    function _inheritsLoose(subClass, superClass) {\n      subClass.prototype = Object.create(superClass.prototype);\n      subClass.prototype.constructor = subClass;\n      subClass.__proto__ = superClass;\n    }\n\n    function _assertThisInitialized(self) {\n      if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return self;\n    }\n\n    var values = Object.values || function (obj) {\n      return Object.keys(obj).map(function (k) {\n        return obj[k];\n      });\n    };\n\n    var defaultProps = {\n      component: 'div',\n      childFactory: function childFactory(child) {\n        return child;\n      }\n      /**\n       * The `<TransitionGroup>` component manages a set of transition components\n       * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n       * components, `<TransitionGroup>` is a state machine for managing the mounting\n       * and unmounting of components over time.\n       *\n       * Consider the example below. As items are removed or added to the TodoList the\n       * `in` prop is toggled automatically by the `<TransitionGroup>`.\n       *\n       * Note that `<TransitionGroup>`  does not define any animation behavior!\n       * Exactly _how_ a list item animates is up to the individual transition\n       * component. This means you can mix and match animations across different list\n       * items.\n       */\n\n    };\n\n    var TransitionGroup =\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inheritsLoose(TransitionGroup, _React$Component);\n\n      function TransitionGroup(props, context) {\n        var _this;\n\n        _this = _React$Component.call(this, props, context) || this;\n\n        var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Initial children should all be entering, dependent on appear\n\n\n        _this.state = {\n          contextValue: {\n            isMounting: true\n          },\n          handleExited: handleExited,\n          firstRender: true\n        };\n        return _this;\n      }\n\n      var _proto = TransitionGroup.prototype;\n\n      _proto.componentDidMount = function componentDidMount() {\n        this.mounted = true;\n        this.setState({\n          contextValue: {\n            isMounting: false\n          }\n        });\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        this.mounted = false;\n      };\n\n      TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n        var prevChildMapping = _ref.children,\n            handleExited = _ref.handleExited,\n            firstRender = _ref.firstRender;\n        return {\n          children: firstRender ? (0, ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),\n          firstRender: false\n        };\n      };\n\n      _proto.handleExited = function handleExited(child, node) {\n        var currentChildMapping = (0, ChildMapping.getChildMapping)(this.props.children);\n        if (child.key in currentChildMapping) return;\n\n        if (child.props.onExited) {\n          child.props.onExited(node);\n        }\n\n        if (this.mounted) {\n          this.setState(function (state) {\n            var children = _extends({}, state.children);\n\n            delete children[child.key];\n            return {\n              children: children\n            };\n          });\n        }\n      };\n\n      _proto.render = function render() {\n        var _this$props = this.props,\n            Component = _this$props.component,\n            childFactory = _this$props.childFactory,\n            props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n        var contextValue = this.state.contextValue;\n        var children = values(this.state.children).map(childFactory);\n        delete props.appear;\n        delete props.enter;\n        delete props.exit;\n\n        if (Component === null) {\n          return _react.default.createElement(_TransitionGroupContext.default.Provider, {\n            value: contextValue\n          }, children);\n        }\n\n        return _react.default.createElement(_TransitionGroupContext.default.Provider, {\n          value: contextValue\n        }, _react.default.createElement(Component, props, children));\n      };\n\n      return TransitionGroup;\n    }(_react.default.Component);\n\n    TransitionGroup.propTypes = {};\n    TransitionGroup.defaultProps = defaultProps;\n\n    var _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup);\n\n    exports.default = _default;\n    module.exports = exports[\"default\"];\n  });\n  unwrapExports(TransitionGroup_1);\n  var ReplaceTransition_1 = createCommonjsModule(function (module, exports) {\n    exports.__esModule = true;\n    exports.default = void 0;\n\n    var _propTypes = _interopRequireDefault(propTypes);\n\n    var _react = _interopRequireDefault(React__default);\n\n    var _TransitionGroup = _interopRequireDefault(TransitionGroup_1);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }\n\n    function _objectWithoutPropertiesLoose(source, excluded) {\n      if (source == null) return {};\n      var target = {};\n      var sourceKeys = Object.keys(source);\n      var key, i;\n\n      for (i = 0; i < sourceKeys.length; i++) {\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n      }\n\n      return target;\n    }\n\n    function _inheritsLoose(subClass, superClass) {\n      subClass.prototype = Object.create(superClass.prototype);\n      subClass.prototype.constructor = subClass;\n      subClass.__proto__ = superClass;\n    }\n    /**\n     * The `<ReplaceTransition>` component is a specialized `Transition` component\n     * that animates between two children.\n     *\n     * ```jsx\n     * <ReplaceTransition in>\n     *   <Fade><div>I appear first</div></Fade>\n     *   <Fade><div>I replace the above</div></Fade>\n     * </ReplaceTransition>\n     * ```\n     */\n\n\n    var ReplaceTransition =\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inheritsLoose(ReplaceTransition, _React$Component);\n\n      function ReplaceTransition() {\n        var _this;\n\n        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n          _args[_key] = arguments[_key];\n        }\n\n        _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;\n\n        _this.handleEnter = function () {\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          return _this.handleLifecycle('onEnter', 0, args);\n        };\n\n        _this.handleEntering = function () {\n          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n\n          return _this.handleLifecycle('onEntering', 0, args);\n        };\n\n        _this.handleEntered = function () {\n          for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n            args[_key4] = arguments[_key4];\n          }\n\n          return _this.handleLifecycle('onEntered', 0, args);\n        };\n\n        _this.handleExit = function () {\n          for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n            args[_key5] = arguments[_key5];\n          }\n\n          return _this.handleLifecycle('onExit', 1, args);\n        };\n\n        _this.handleExiting = function () {\n          for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n            args[_key6] = arguments[_key6];\n          }\n\n          return _this.handleLifecycle('onExiting', 1, args);\n        };\n\n        _this.handleExited = function () {\n          for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n            args[_key7] = arguments[_key7];\n          }\n\n          return _this.handleLifecycle('onExited', 1, args);\n        };\n\n        return _this;\n      }\n\n      var _proto = ReplaceTransition.prototype;\n\n      _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {\n        var _child$props;\n\n        var children = this.props.children;\n\n        var child = _react.default.Children.toArray(children)[idx];\n\n        if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);\n        if (this.props[handler]) this.props[handler]((0, ReactDOM.findDOMNode)(this));\n      };\n\n      _proto.render = function render() {\n        var _this$props = this.props,\n            children = _this$props.children,\n            inProp = _this$props.in,\n            props = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\"]);\n\n        var _React$Children$toArr = _react.default.Children.toArray(children),\n            first = _React$Children$toArr[0],\n            second = _React$Children$toArr[1];\n\n        delete props.onEnter;\n        delete props.onEntering;\n        delete props.onEntered;\n        delete props.onExit;\n        delete props.onExiting;\n        delete props.onExited;\n        return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {\n          key: 'first',\n          onEnter: this.handleEnter,\n          onEntering: this.handleEntering,\n          onEntered: this.handleEntered\n        }) : _react.default.cloneElement(second, {\n          key: 'second',\n          onEnter: this.handleExit,\n          onEntering: this.handleExiting,\n          onEntered: this.handleExited\n        }));\n      };\n\n      return ReplaceTransition;\n    }(_react.default.Component);\n\n    ReplaceTransition.propTypes = {};\n    var _default = ReplaceTransition;\n    exports.default = _default;\n    module.exports = exports[\"default\"];\n  });\n  unwrapExports(ReplaceTransition_1);\n  var reactTransitionGroup = createCommonjsModule(function (module) {\n    var _CSSTransition = _interopRequireDefault(CSSTransition_1);\n\n    var _ReplaceTransition = _interopRequireDefault(ReplaceTransition_1);\n\n    var _TransitionGroup = _interopRequireDefault(TransitionGroup_1);\n\n    var _Transition = _interopRequireDefault(Transition_1);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }\n\n    module.exports = {\n      Transition: _Transition.default,\n      TransitionGroup: _TransitionGroup.default,\n      ReplaceTransition: _ReplaceTransition.default,\n      CSSTransition: _CSSTransition.default\n    };\n  });\n  unwrapExports(reactTransitionGroup);\n  var reactTransitionGroup_1 = reactTransitionGroup.Transition;\n  var reactTransitionGroup_2 = reactTransitionGroup.TransitionGroup;\n  var reactTransitionGroup_3 = reactTransitionGroup.ReplaceTransition;\n  var reactTransitionGroup_4 = reactTransitionGroup.CSSTransition;\n  var _excluded$k = [\"tag\", \"baseClass\", \"baseClassActive\", \"className\", \"cssModule\", \"children\", \"innerRef\"];\n\n  var propTypes$m = _extends({}, reactTransitionGroup_1.propTypes, {\n    children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),\n    tag: tagPropType,\n    baseClass: propTypes.string,\n    baseClassActive: propTypes.string,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    innerRef: propTypes.oneOfType([propTypes.object, propTypes.string, propTypes.func])\n  });\n\n  var defaultProps$k = _extends({}, reactTransitionGroup_1.defaultProps, {\n    tag: 'div',\n    baseClass: 'fade',\n    baseClassActive: 'show',\n    timeout: TransitionTimeouts.Fade,\n    appear: true,\n    enter: true,\n    exit: true,\n    in: true\n  });\n\n  function Fade(props) {\n    var Tag = props.tag,\n        baseClass = props.baseClass,\n        baseClassActive = props.baseClassActive,\n        className = props.className,\n        cssModule = props.cssModule,\n        children = props.children,\n        innerRef = props.innerRef,\n        otherProps = _objectWithoutPropertiesLoose(props, _excluded$k);\n\n    var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    var childProps = omit(otherProps, TransitionPropTypeKeys);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(reactTransitionGroup_1, transitionProps, function (status) {\n        var isActive = status === 'entered';\n        var classes = mapToCssModules(classnames(className, baseClass, isActive && baseClassActive), cssModule);\n        return (\n          /*#__PURE__*/\n          React__default.createElement(Tag, _extends({\n            className: classes\n          }, childProps, {\n            ref: innerRef\n          }), children)\n        );\n      })\n    );\n  }\n\n  Fade.propTypes = propTypes$m;\n  Fade.defaultProps = defaultProps$k;\n  var _excluded$l = [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"];\n  var propTypes$n = {\n    color: propTypes.string,\n    pill: propTypes.bool,\n    tag: tagPropType,\n    innerRef: propTypes.oneOfType([propTypes.object, propTypes.func, propTypes.string]),\n    children: propTypes.node,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$l = {\n    color: 'secondary',\n    pill: false,\n    tag: 'span'\n  };\n\n  var Badge = function Badge(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        color = props.color,\n        innerRef = props.innerRef,\n        pill = props.pill,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$l);\n\n    var classes = mapToCssModules(classnames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n    if (attributes.href && Tag === 'span') {\n      Tag = 'a';\n    }\n\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes,\n        ref: innerRef\n      }))\n    );\n  };\n\n  Badge.propTypes = propTypes$n;\n  Badge.defaultProps = defaultProps$l;\n  var _excluded$m = [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"];\n  var propTypes$o = {\n    tag: tagPropType,\n    inverse: propTypes.bool,\n    color: propTypes.string,\n    body: propTypes.bool,\n    outline: propTypes.bool,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    innerRef: propTypes.oneOfType([propTypes.object, propTypes.string, propTypes.func])\n  };\n  var defaultProps$m = {\n    tag: 'div'\n  };\n\n  var Card = function Card(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        color = props.color,\n        body = props.body,\n        inverse = props.inverse,\n        outline = props.outline,\n        Tag = props.tag,\n        innerRef = props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$m);\n\n    var classes = mapToCssModules(classnames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes,\n        ref: innerRef\n      }))\n    );\n  };\n\n  Card.propTypes = propTypes$o;\n  Card.defaultProps = defaultProps$m;\n  var _excluded$n = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$p = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$n = {\n    tag: 'div'\n  };\n\n  var CardGroup = function CardGroup(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$n);\n\n    var classes = mapToCssModules(classnames(className, 'card-group'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  CardGroup.propTypes = propTypes$p;\n  CardGroup.defaultProps = defaultProps$n;\n  var _excluded$o = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$q = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$o = {\n    tag: 'div'\n  };\n\n  var CardDeck = function CardDeck(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$o);\n\n    var classes = mapToCssModules(classnames(className, 'card-deck'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  CardDeck.propTypes = propTypes$q;\n  CardDeck.defaultProps = defaultProps$o;\n  var _excluded$p = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$r = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$p = {\n    tag: 'div'\n  };\n\n  var CardColumns = function CardColumns(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$p);\n\n    var classes = mapToCssModules(classnames(className, 'card-columns'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  CardColumns.propTypes = propTypes$r;\n  CardColumns.defaultProps = defaultProps$p;\n  var _excluded$q = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\n  var propTypes$s = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    innerRef: propTypes.oneOfType([propTypes.object, propTypes.string, propTypes.func])\n  };\n  var defaultProps$q = {\n    tag: 'div'\n  };\n\n  var CardBody = function CardBody(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        innerRef = props.innerRef,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$q);\n\n    var classes = mapToCssModules(classnames(className, 'card-body'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes,\n        ref: innerRef\n      }))\n    );\n  };\n\n  CardBody.propTypes = propTypes$s;\n  CardBody.defaultProps = defaultProps$q;\n  var _excluded$r = [\"className\", \"cssModule\", \"tag\", \"innerRef\"];\n  var propTypes$t = {\n    tag: tagPropType,\n    innerRef: propTypes.oneOfType([propTypes.object, propTypes.func, propTypes.string]),\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$r = {\n    tag: 'a'\n  };\n\n  var CardLink = function CardLink(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        innerRef = props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$r);\n\n    var classes = mapToCssModules(classnames(className, 'card-link'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        ref: innerRef,\n        className: classes\n      }))\n    );\n  };\n\n  CardLink.propTypes = propTypes$t;\n  CardLink.defaultProps = defaultProps$r;\n  var _excluded$s = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$u = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$s = {\n    tag: 'div'\n  };\n\n  var CardFooter = function CardFooter(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$s);\n\n    var classes = mapToCssModules(classnames(className, 'card-footer'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  CardFooter.propTypes = propTypes$u;\n  CardFooter.defaultProps = defaultProps$s;\n  var _excluded$t = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$v = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$t = {\n    tag: 'div'\n  };\n\n  var CardHeader = function CardHeader(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$t);\n\n    var classes = mapToCssModules(classnames(className, 'card-header'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  CardHeader.propTypes = propTypes$v;\n  CardHeader.defaultProps = defaultProps$t;\n  var _excluded$u = [\"className\", \"cssModule\", \"top\", \"bottom\", \"tag\"];\n  var propTypes$w = {\n    tag: tagPropType,\n    top: propTypes.bool,\n    bottom: propTypes.bool,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$u = {\n    tag: 'img'\n  };\n\n  var CardImg = function CardImg(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        top = props.top,\n        bottom = props.bottom,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$u);\n\n    var cardImgClassName = 'card-img';\n\n    if (top) {\n      cardImgClassName = 'card-img-top';\n    }\n\n    if (bottom) {\n      cardImgClassName = 'card-img-bottom';\n    }\n\n    var classes = mapToCssModules(classnames(className, cardImgClassName), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  CardImg.propTypes = propTypes$w;\n  CardImg.defaultProps = defaultProps$u;\n  var _excluded$v = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$x = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$v = {\n    tag: 'div'\n  };\n\n  var CardImgOverlay = function CardImgOverlay(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$v);\n\n    var classes = mapToCssModules(classnames(className, 'card-img-overlay'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  CardImgOverlay.propTypes = propTypes$x;\n  CardImgOverlay.defaultProps = defaultProps$v;\n  var _excluded$w = [\"in\", \"children\", \"cssModule\", \"slide\", \"tag\", \"className\"];\n\n  var CarouselItem =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(CarouselItem, _React$Component);\n\n    function CarouselItem(props) {\n      var _this;\n\n      _this = _React$Component.call(this, props) || this;\n      _this.state = {\n        startAnimation: false\n      };\n      _this.onEnter = _this.onEnter.bind(_assertThisInitialized(_this));\n      _this.onEntering = _this.onEntering.bind(_assertThisInitialized(_this));\n      _this.onExit = _this.onExit.bind(_assertThisInitialized(_this));\n      _this.onExiting = _this.onExiting.bind(_assertThisInitialized(_this));\n      _this.onExited = _this.onExited.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    var _proto = CarouselItem.prototype;\n\n    _proto.onEnter = function onEnter(node, isAppearing) {\n      this.setState({\n        startAnimation: false\n      });\n      this.props.onEnter(node, isAppearing);\n    };\n\n    _proto.onEntering = function onEntering(node, isAppearing) {\n      // getting this variable triggers a reflow\n      var offsetHeight = node.offsetHeight;\n      this.setState({\n        startAnimation: true\n      });\n      this.props.onEntering(node, isAppearing);\n      return offsetHeight;\n    };\n\n    _proto.onExit = function onExit(node) {\n      this.setState({\n        startAnimation: false\n      });\n      this.props.onExit(node);\n    };\n\n    _proto.onExiting = function onExiting(node) {\n      this.setState({\n        startAnimation: true\n      });\n      node.dispatchEvent(new CustomEvent('slide.bs.carousel'));\n      this.props.onExiting(node);\n    };\n\n    _proto.onExited = function onExited(node) {\n      node.dispatchEvent(new CustomEvent('slid.bs.carousel'));\n      this.props.onExited(node);\n    };\n\n    _proto.render = function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          isIn = _this$props.in,\n          children = _this$props.children,\n          cssModule = _this$props.cssModule,\n          slide = _this$props.slide,\n          Tag = _this$props.tag,\n          className = _this$props.className,\n          transitionProps = _objectWithoutPropertiesLoose(_this$props, _excluded$w);\n\n      return (\n        /*#__PURE__*/\n        React__default.createElement(reactTransitionGroup_1, _extends({}, transitionProps, {\n          enter: slide,\n          exit: slide,\n          in: isIn,\n          onEnter: this.onEnter,\n          onEntering: this.onEntering,\n          onExit: this.onExit,\n          onExiting: this.onExiting,\n          onExited: this.onExited\n        }), function (status) {\n          var direction = _this2.context.direction;\n          var isActive = status === TransitionStatuses.ENTERED || status === TransitionStatuses.EXITING;\n          var directionClassName = (status === TransitionStatuses.ENTERING || status === TransitionStatuses.EXITING) && _this2.state.startAnimation && (direction === 'right' ? 'carousel-item-left' : 'carousel-item-right');\n          var orderClassName = status === TransitionStatuses.ENTERING && (direction === 'right' ? 'carousel-item-next' : 'carousel-item-prev');\n          var itemClasses = mapToCssModules(classnames(className, 'carousel-item', isActive && 'active', directionClassName, orderClassName), cssModule);\n          return (\n            /*#__PURE__*/\n            React__default.createElement(Tag, {\n              className: itemClasses\n            }, children)\n          );\n        })\n      );\n    };\n\n    return CarouselItem;\n  }(React__default.Component);\n\n  CarouselItem.propTypes = _extends({}, reactTransitionGroup_1.propTypes, {\n    tag: tagPropType,\n    in: propTypes.bool,\n    cssModule: propTypes.object,\n    children: propTypes.node,\n    slide: propTypes.bool,\n    className: propTypes.string\n  });\n  CarouselItem.defaultProps = _extends({}, reactTransitionGroup_1.defaultProps, {\n    tag: 'div',\n    timeout: TransitionTimeouts.Carousel,\n    slide: true\n  });\n  CarouselItem.contextTypes = {\n    direction: propTypes.string\n  };\n  var SWIPE_THRESHOLD = 40;\n\n  var Carousel =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(Carousel, _React$Component);\n\n    function Carousel(props) {\n      var _this;\n\n      _this = _React$Component.call(this, props) || this;\n      _this.handleKeyPress = _this.handleKeyPress.bind(_assertThisInitialized(_this));\n      _this.renderItems = _this.renderItems.bind(_assertThisInitialized(_this));\n      _this.hoverStart = _this.hoverStart.bind(_assertThisInitialized(_this));\n      _this.hoverEnd = _this.hoverEnd.bind(_assertThisInitialized(_this));\n      _this.handleTouchStart = _this.handleTouchStart.bind(_assertThisInitialized(_this));\n      _this.handleTouchEnd = _this.handleTouchEnd.bind(_assertThisInitialized(_this));\n      _this.touchStartX = 0;\n      _this.touchStartY = 0;\n      _this.state = {\n        activeIndex: _this.props.activeIndex,\n        direction: 'right',\n        indicatorClicked: false\n      };\n      return _this;\n    }\n\n    var _proto = Carousel.prototype;\n\n    _proto.getChildContext = function getChildContext() {\n      return {\n        direction: this.state.direction\n      };\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      // Set up the cycle\n      if (this.props.ride === 'carousel') {\n        this.setInterval();\n      } // TODO: move this to the specific carousel like bootstrap. Currently it will trigger ALL carousels on the page.\n\n\n      document.addEventListener('keyup', this.handleKeyPress);\n    };\n\n    Carousel.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = null;\n      var activeIndex = prevState.activeIndex,\n          direction = prevState.direction,\n          indicatorClicked = prevState.indicatorClicked;\n\n      if (nextProps.activeIndex !== activeIndex) {\n        // Calculate the direction to turn\n        if (nextProps.activeIndex === activeIndex + 1) {\n          direction = 'right';\n        } else if (nextProps.activeIndex === activeIndex - 1) {\n          direction = 'left';\n        } else if (nextProps.activeIndex < activeIndex) {\n          direction = indicatorClicked ? 'left' : 'right';\n        } else if (nextProps.activeIndex !== activeIndex) {\n          direction = indicatorClicked ? 'right' : 'left';\n        }\n\n        newState = {\n          activeIndex: nextProps.activeIndex,\n          direction: direction,\n          indicatorClicked: false\n        };\n      }\n\n      return newState;\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n      if (prevState.activeIndex === this.state.activeIndex) return;\n      this.setInterval(this.props);\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.clearInterval();\n      document.removeEventListener('keyup', this.handleKeyPress);\n    };\n\n    _proto.setInterval = function (_setInterval) {\n      function setInterval() {\n        return _setInterval.apply(this, arguments);\n      }\n\n      setInterval.toString = function () {\n        return _setInterval.toString();\n      };\n\n      return setInterval;\n    }(function (props) {\n      if (props === void 0) {\n        props = this.props;\n      } // make sure not to have multiple intervals going...\n\n\n      this.clearInterval();\n\n      if (props.interval) {\n        this.cycleInterval = setInterval(function () {\n          props.next();\n        }, parseInt(props.interval, 10));\n      }\n    });\n\n    _proto.clearInterval = function (_clearInterval) {\n      function clearInterval() {\n        return _clearInterval.apply(this, arguments);\n      }\n\n      clearInterval.toString = function () {\n        return _clearInterval.toString();\n      };\n\n      return clearInterval;\n    }(function () {\n      clearInterval(this.cycleInterval);\n    });\n\n    _proto.hoverStart = function hoverStart() {\n      if (this.props.pause === 'hover') {\n        this.clearInterval();\n      }\n\n      if (this.props.mouseEnter) {\n        var _this$props;\n\n        (_this$props = this.props).mouseEnter.apply(_this$props, arguments);\n      }\n    };\n\n    _proto.hoverEnd = function hoverEnd() {\n      if (this.props.pause === 'hover') {\n        this.setInterval();\n      }\n\n      if (this.props.mouseLeave) {\n        var _this$props2;\n\n        (_this$props2 = this.props).mouseLeave.apply(_this$props2, arguments);\n      }\n    };\n\n    _proto.handleKeyPress = function handleKeyPress(evt) {\n      if (this.props.keyboard) {\n        if (evt.keyCode === 37) {\n          this.props.previous();\n        } else if (evt.keyCode === 39) {\n          this.props.next();\n        }\n      }\n    };\n\n    _proto.handleTouchStart = function handleTouchStart(e) {\n      if (!this.props.enableTouch) {\n        return;\n      }\n\n      this.touchStartX = e.changedTouches[0].screenX;\n      this.touchStartY = e.changedTouches[0].screenY;\n    };\n\n    _proto.handleTouchEnd = function handleTouchEnd(e) {\n      if (!this.props.enableTouch) {\n        return;\n      }\n\n      var currentX = e.changedTouches[0].screenX;\n      var currentY = e.changedTouches[0].screenY;\n      var diffX = Math.abs(this.touchStartX - currentX);\n      var diffY = Math.abs(this.touchStartY - currentY); // Don't swipe if Y-movement is bigger than X-movement\n\n      if (diffX < diffY) {\n        return;\n      }\n\n      if (diffX < SWIPE_THRESHOLD) {\n        return;\n      }\n\n      if (currentX < this.touchStartX) {\n        this.props.next();\n      } else {\n        this.props.previous();\n      }\n    };\n\n    _proto.renderItems = function renderItems(carouselItems, className) {\n      var _this2 = this;\n\n      var slide = this.props.slide;\n      return (\n        /*#__PURE__*/\n        React__default.createElement(\"div\", {\n          className: className\n        }, carouselItems.map(function (item, index) {\n          var isIn = index === _this2.state.activeIndex;\n          return (\n            /*#__PURE__*/\n            React__default.cloneElement(item, {\n              in: isIn,\n              slide: slide\n            })\n          );\n        }))\n      );\n    };\n\n    _proto.render = function render() {\n      var _this3 = this;\n\n      var _this$props3 = this.props,\n          cssModule = _this$props3.cssModule,\n          slide = _this$props3.slide,\n          className = _this$props3.className;\n      var outerClasses = mapToCssModules(classnames(className, 'carousel', slide && 'slide'), cssModule);\n      var innerClasses = mapToCssModules(classnames('carousel-inner'), cssModule); // filter out booleans, null, or undefined\n\n      var children = this.props.children.filter(function (child) {\n        return child !== null && child !== undefined && typeof child !== 'boolean';\n      });\n      var slidesOnly = children.every(function (child) {\n        return child.type === CarouselItem;\n      }); // Rendering only slides\n\n      if (slidesOnly) {\n        return (\n          /*#__PURE__*/\n          React__default.createElement(\"div\", {\n            className: outerClasses,\n            onMouseEnter: this.hoverStart,\n            onMouseLeave: this.hoverEnd\n          }, this.renderItems(children, innerClasses))\n        );\n      } // Rendering slides and controls\n\n\n      if (children[0] instanceof Array) {\n        var _carouselItems = children[0];\n        var _controlLeft = children[1];\n        var _controlRight = children[2];\n        return (\n          /*#__PURE__*/\n          React__default.createElement(\"div\", {\n            className: outerClasses,\n            onMouseEnter: this.hoverStart,\n            onMouseLeave: this.hoverEnd\n          }, this.renderItems(_carouselItems, innerClasses), _controlLeft, _controlRight)\n        );\n      } // Rendering indicators, slides and controls\n\n\n      var indicators = children[0];\n\n      var wrappedOnClick = function wrappedOnClick(e) {\n        if (typeof indicators.props.onClickHandler === 'function') {\n          _this3.setState({\n            indicatorClicked: true\n          }, function () {\n            return indicators.props.onClickHandler(e);\n          });\n        }\n      };\n\n      var wrappedIndicators =\n      /*#__PURE__*/\n      React__default.cloneElement(indicators, {\n        onClickHandler: wrappedOnClick\n      });\n      var carouselItems = children[1];\n      var controlLeft = children[2];\n      var controlRight = children[3];\n      return (\n        /*#__PURE__*/\n        React__default.createElement(\"div\", {\n          className: outerClasses,\n          onMouseEnter: this.hoverStart,\n          onMouseLeave: this.hoverEnd,\n          onTouchStart: this.handleTouchStart,\n          onTouchEnd: this.handleTouchEnd\n        }, wrappedIndicators, this.renderItems(carouselItems, innerClasses), controlLeft, controlRight)\n      );\n    };\n\n    return Carousel;\n  }(React__default.Component);\n\n  Carousel.propTypes = {\n    // the current active slide of the carousel\n    activeIndex: propTypes.number,\n    // a function which should advance the carousel to the next slide (via activeIndex)\n    next: propTypes.func.isRequired,\n    // a function which should advance the carousel to the previous slide (via activeIndex)\n    previous: propTypes.func.isRequired,\n    // controls if the left and right arrow keys should control the carousel\n    keyboard: propTypes.bool,\n\n    /* If set to \"hover\", pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on\n     * mouseleave. If set to false, hovering over the carousel won't pause it. (default: \"hover\")\n     */\n    pause: propTypes.oneOf(['hover', false]),\n    // Autoplays the carousel after the user manually cycles the first item. If \"carousel\", autoplays the carousel on load.\n    // This is how bootstrap defines it... I would prefer a bool named autoplay or something...\n    ride: propTypes.oneOf(['carousel']),\n    // the interval at which the carousel automatically cycles (default: 5000)\n    // eslint-disable-next-line react/no-unused-prop-types\n    interval: propTypes.oneOfType([propTypes.number, propTypes.string, propTypes.bool]),\n    children: propTypes.array,\n    // called when the mouse enters the Carousel\n    mouseEnter: propTypes.func,\n    // called when the mouse exits the Carousel\n    mouseLeave: propTypes.func,\n    // controls whether the slide animation on the Carousel works or not\n    slide: propTypes.bool,\n    cssModule: propTypes.object,\n    className: propTypes.string,\n    enableTouch: propTypes.bool\n  };\n  Carousel.defaultProps = {\n    interval: 5000,\n    pause: 'hover',\n    keyboard: true,\n    slide: true,\n    enableTouch: true\n  };\n  Carousel.childContextTypes = {\n    direction: propTypes.string\n  };\n\n  var CarouselControl = function CarouselControl(props) {\n    var direction = props.direction,\n        onClickHandler = props.onClickHandler,\n        cssModule = props.cssModule,\n        directionText = props.directionText,\n        className = props.className;\n    var anchorClasses = mapToCssModules(classnames(className, \"carousel-control-\" + direction), cssModule);\n    var iconClasses = mapToCssModules(classnames(\"carousel-control-\" + direction + \"-icon\"), cssModule);\n    var screenReaderClasses = mapToCssModules(classnames('sr-only'), cssModule);\n    return (\n      /*#__PURE__*/\n      // We need to disable this linting rule to use an `<a>` instead of\n      // `<button>` because that's what the Bootstrap examples require:\n      // https://getbootstrap.com/docs/4.5/components/carousel/#with-controls\n      // eslint-disable-next-line jsx-a11y/anchor-is-valid\n      React__default.createElement(\"a\", {\n        className: anchorClasses,\n        style: {\n          cursor: \"pointer\"\n        },\n        role: \"button\",\n        tabIndex: \"0\",\n        onClick: function onClick(e) {\n          e.preventDefault();\n          onClickHandler();\n        }\n      },\n      /*#__PURE__*/\n      React__default.createElement(\"span\", {\n        className: iconClasses,\n        \"aria-hidden\": \"true\"\n      }),\n      /*#__PURE__*/\n      React__default.createElement(\"span\", {\n        className: screenReaderClasses\n      }, directionText || direction))\n    );\n  };\n\n  CarouselControl.propTypes = {\n    direction: propTypes.oneOf(['prev', 'next']).isRequired,\n    onClickHandler: propTypes.func.isRequired,\n    cssModule: propTypes.object,\n    directionText: propTypes.string,\n    className: propTypes.string\n  };\n\n  var CarouselIndicators = function CarouselIndicators(props) {\n    var items = props.items,\n        activeIndex = props.activeIndex,\n        cssModule = props.cssModule,\n        onClickHandler = props.onClickHandler,\n        className = props.className;\n    var listClasses = mapToCssModules(classnames(className, 'carousel-indicators'), cssModule);\n    var indicators = items.map(function (item, idx) {\n      var indicatorClasses = mapToCssModules(classnames({\n        active: activeIndex === idx\n      }), cssModule);\n      return (\n        /*#__PURE__*/\n        React__default.createElement(\"li\", {\n          key: \"\" + (item.key || Object.values(item).join('')),\n          onClick: function onClick(e) {\n            e.preventDefault();\n            onClickHandler(idx);\n          },\n          className: indicatorClasses\n        })\n      );\n    });\n    return (\n      /*#__PURE__*/\n      React__default.createElement(\"ol\", {\n        className: listClasses\n      }, indicators)\n    );\n  };\n\n  CarouselIndicators.propTypes = {\n    items: propTypes.array.isRequired,\n    activeIndex: propTypes.number.isRequired,\n    cssModule: propTypes.object,\n    onClickHandler: propTypes.func.isRequired,\n    className: propTypes.string\n  };\n\n  var CarouselCaption = function CarouselCaption(props) {\n    var captionHeader = props.captionHeader,\n        captionText = props.captionText,\n        cssModule = props.cssModule,\n        className = props.className;\n    var classes = mapToCssModules(classnames(className, 'carousel-caption', 'd-none', 'd-md-block'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(\"div\", {\n        className: classes\n      },\n      /*#__PURE__*/\n      React__default.createElement(\"h3\", null, captionHeader),\n      /*#__PURE__*/\n      React__default.createElement(\"p\", null, captionText))\n    );\n  };\n\n  CarouselCaption.propTypes = {\n    captionHeader: propTypes.node,\n    captionText: propTypes.node.isRequired,\n    cssModule: propTypes.object,\n    className: propTypes.string\n  };\n  var _excluded$x = [\"defaultActiveIndex\", \"autoPlay\", \"indicators\", \"controls\", \"items\", \"goToIndex\"];\n  var propTypes$y = {\n    items: propTypes.array.isRequired,\n    indicators: propTypes.bool,\n    controls: propTypes.bool,\n    autoPlay: propTypes.bool,\n    defaultActiveIndex: propTypes.number,\n    activeIndex: propTypes.number,\n    next: propTypes.func,\n    previous: propTypes.func,\n    goToIndex: propTypes.func\n  };\n\n  var UncontrolledCarousel =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(UncontrolledCarousel, _Component);\n\n    function UncontrolledCarousel(props) {\n      var _this;\n\n      _this = _Component.call(this, props) || this;\n      _this.animating = false;\n      _this.state = {\n        activeIndex: props.defaultActiveIndex || 0\n      };\n      _this.next = _this.next.bind(_assertThisInitialized(_this));\n      _this.previous = _this.previous.bind(_assertThisInitialized(_this));\n      _this.goToIndex = _this.goToIndex.bind(_assertThisInitialized(_this));\n      _this.onExiting = _this.onExiting.bind(_assertThisInitialized(_this));\n      _this.onExited = _this.onExited.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    var _proto = UncontrolledCarousel.prototype;\n\n    _proto.onExiting = function onExiting() {\n      this.animating = true;\n    };\n\n    _proto.onExited = function onExited() {\n      this.animating = false;\n    };\n\n    _proto.next = function next() {\n      if (this.animating) return;\n      var nextIndex = this.state.activeIndex === this.props.items.length - 1 ? 0 : this.state.activeIndex + 1;\n      this.setState({\n        activeIndex: nextIndex\n      });\n    };\n\n    _proto.previous = function previous() {\n      if (this.animating) return;\n      var nextIndex = this.state.activeIndex === 0 ? this.props.items.length - 1 : this.state.activeIndex - 1;\n      this.setState({\n        activeIndex: nextIndex\n      });\n    };\n\n    _proto.goToIndex = function goToIndex(newIndex) {\n      if (this.animating) return;\n      this.setState({\n        activeIndex: newIndex\n      });\n    };\n\n    _proto.render = function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          defaultActiveIndex = _this$props.defaultActiveIndex,\n          autoPlay = _this$props.autoPlay,\n          indicators = _this$props.indicators,\n          controls = _this$props.controls,\n          items = _this$props.items,\n          goToIndex = _this$props.goToIndex,\n          props = _objectWithoutPropertiesLoose(_this$props, _excluded$x);\n\n      var activeIndex = this.state.activeIndex;\n      var slides = items.map(function (item) {\n        var key = item.key || item.src;\n        return (\n          /*#__PURE__*/\n          React__default.createElement(CarouselItem, {\n            onExiting: _this2.onExiting,\n            onExited: _this2.onExited,\n            key: key\n          },\n          /*#__PURE__*/\n          React__default.createElement(\"img\", {\n            className: \"d-block w-100\",\n            src: item.src,\n            alt: item.altText\n          }),\n          /*#__PURE__*/\n          React__default.createElement(CarouselCaption, {\n            captionText: item.caption,\n            captionHeader: item.header || item.caption\n          }))\n        );\n      });\n      return (\n        /*#__PURE__*/\n        React__default.createElement(Carousel, _extends({\n          activeIndex: activeIndex,\n          next: this.next,\n          previous: this.previous,\n          ride: autoPlay ? 'carousel' : undefined\n        }, props), indicators &&\n        /*#__PURE__*/\n        React__default.createElement(CarouselIndicators, {\n          items: items,\n          activeIndex: props.activeIndex || activeIndex,\n          onClickHandler: goToIndex || this.goToIndex\n        }), slides, controls &&\n        /*#__PURE__*/\n        React__default.createElement(CarouselControl, {\n          direction: \"prev\",\n          directionText: \"Previous\",\n          onClickHandler: props.previous || this.previous\n        }), controls &&\n        /*#__PURE__*/\n        React__default.createElement(CarouselControl, {\n          direction: \"next\",\n          directionText: \"Next\",\n          onClickHandler: props.next || this.next\n        }))\n      );\n    };\n\n    return UncontrolledCarousel;\n  }(React.Component);\n\n  UncontrolledCarousel.propTypes = propTypes$y;\n  UncontrolledCarousel.defaultProps = {\n    controls: true,\n    indicators: true,\n    autoPlay: true\n  };\n  var _excluded$y = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$z = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$w = {\n    tag: 'div'\n  };\n\n  var CardSubtitle = function CardSubtitle(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$y);\n\n    var classes = mapToCssModules(classnames(className, 'card-subtitle'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  CardSubtitle.propTypes = propTypes$z;\n  CardSubtitle.defaultProps = defaultProps$w;\n  var _excluded$z = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$A = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$x = {\n    tag: 'p'\n  };\n\n  var CardText = function CardText(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$z);\n\n    var classes = mapToCssModules(classnames(className, 'card-text'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  CardText.propTypes = propTypes$A;\n  CardText.defaultProps = defaultProps$x;\n  var _excluded$A = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$B = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$y = {\n    tag: 'div'\n  };\n\n  var CardTitle = function CardTitle(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$A);\n\n    var classes = mapToCssModules(classnames(className, 'card-title'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  CardTitle.propTypes = propTypes$B;\n  CardTitle.defaultProps = defaultProps$y;\n  var _excluded$B = [\"className\", \"label\", \"valid\", \"invalid\", \"cssModule\", \"children\", \"bsSize\", \"innerRef\", \"htmlFor\", \"type\", \"onChange\", \"dataBrowse\", \"hidden\"];\n  var propTypes$C = {\n    className: propTypes.string,\n    id: propTypes.oneOfType([propTypes.string, propTypes.number]).isRequired,\n    label: propTypes.node,\n    valid: propTypes.bool,\n    invalid: propTypes.bool,\n    bsSize: propTypes.string,\n    htmlFor: propTypes.string,\n    cssModule: propTypes.object,\n    onChange: propTypes.func,\n    children: propTypes.oneOfType([propTypes.node, propTypes.array, propTypes.func]),\n    innerRef: propTypes.oneOfType([propTypes.object, propTypes.string, propTypes.func])\n  };\n\n  var CustomFileInput =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(CustomFileInput, _React$Component);\n\n    function CustomFileInput(props) {\n      var _this;\n\n      _this = _React$Component.call(this, props) || this;\n      _this.state = {\n        files: null\n      };\n      _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    var _proto = CustomFileInput.prototype;\n\n    _proto.onChange = function onChange(e) {\n      var input = e.target;\n      var onChange = this.props.onChange;\n      var files = this.getSelectedFiles(input);\n\n      if (typeof onChange === \"function\") {\n        onChange.apply(void 0, arguments);\n      }\n\n      this.setState({\n        files: files\n      });\n    };\n\n    _proto.getSelectedFiles = function getSelectedFiles(input) {\n      var multiple = this.props.multiple;\n\n      if (multiple && input.files) {\n        var files = [].slice.call(input.files);\n        return files.map(function (file) {\n          return file.name;\n        }).join(\", \");\n      }\n\n      if (input.value.indexOf(\"fakepath\") !== -1) {\n        var parts = input.value.split(\"\\\\\");\n        return parts[parts.length - 1];\n      }\n\n      return input.value;\n    };\n\n    _proto.render = function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          label = _this$props.label,\n          valid = _this$props.valid,\n          invalid = _this$props.invalid,\n          cssModule = _this$props.cssModule,\n          children = _this$props.children,\n          bsSize = _this$props.bsSize,\n          innerRef = _this$props.innerRef,\n          htmlFor = _this$props.htmlFor,\n          type = _this$props.type,\n          onChange = _this$props.onChange,\n          dataBrowse = _this$props.dataBrowse,\n          hidden = _this$props.hidden,\n          attributes = _objectWithoutPropertiesLoose(_this$props, _excluded$B);\n\n      var customClass = mapToCssModules(classnames(className, \"custom-file\"), cssModule);\n      var validationClassNames = mapToCssModules(classnames(invalid && \"is-invalid\", valid && \"is-valid\"), cssModule);\n      var labelHtmlFor = htmlFor || attributes.id;\n      var files = this.state.files;\n      return (\n        /*#__PURE__*/\n        React__default.createElement(\"div\", {\n          className: customClass,\n          hidden: hidden || false\n        },\n        /*#__PURE__*/\n        React__default.createElement(\"input\", _extends({\n          type: \"file\"\n        }, attributes, {\n          ref: innerRef,\n          \"aria-invalid\": invalid,\n          className: classnames(validationClassNames, mapToCssModules(\"custom-file-input\", cssModule)),\n          onChange: this.onChange\n        })),\n        /*#__PURE__*/\n        React__default.createElement(\"label\", {\n          className: mapToCssModules(\"custom-file-label\", cssModule),\n          htmlFor: labelHtmlFor,\n          \"data-browse\": dataBrowse\n        }, files || label || \"Choose file\"), children)\n      );\n    };\n\n    return CustomFileInput;\n  }(React__default.Component);\n\n  CustomFileInput.propTypes = propTypes$C;\n  var _excluded$C = [\"className\", \"label\", \"inline\", \"valid\", \"invalid\", \"cssModule\", \"children\", \"bsSize\", \"innerRef\", \"htmlFor\"],\n      _excluded2 = [\"type\"],\n      _excluded3 = [\"hidden\"];\n  var propTypes$D = {\n    className: propTypes.string,\n    id: propTypes.oneOfType([propTypes.string, propTypes.number]).isRequired,\n    type: propTypes.string.isRequired,\n    label: propTypes.node,\n    inline: propTypes.bool,\n    valid: propTypes.bool,\n    invalid: propTypes.bool,\n    bsSize: propTypes.string,\n    htmlFor: propTypes.string,\n    cssModule: propTypes.object,\n    children: propTypes.oneOfType([propTypes.node, propTypes.array, propTypes.func]),\n    innerRef: propTypes.oneOfType([propTypes.object, propTypes.string, propTypes.func])\n  };\n\n  function CustomInput(props) {\n    var className = props.className,\n        label = props.label,\n        inline = props.inline,\n        valid = props.valid,\n        invalid = props.invalid,\n        cssModule = props.cssModule,\n        children = props.children,\n        bsSize = props.bsSize,\n        innerRef = props.innerRef,\n        htmlFor = props.htmlFor,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$C);\n\n    var type = attributes.type;\n    var customClass = mapToCssModules(classnames(className, \"custom-\" + type, bsSize ? \"custom-\" + type + \"-\" + bsSize : false), cssModule);\n    var validationClassNames = mapToCssModules(classnames(invalid && \"is-invalid\", valid && \"is-valid\"), cssModule);\n    var labelHtmlFor = htmlFor || attributes.id;\n\n    if (type === \"select\") {\n      var _type = attributes.type,\n          _rest = _objectWithoutPropertiesLoose(attributes, _excluded2);\n\n      return (\n        /*#__PURE__*/\n        React__default.createElement(\"select\", _extends({}, _rest, {\n          ref: innerRef,\n          className: classnames(validationClassNames, customClass),\n          \"aria-invalid\": invalid\n        }), children)\n      );\n    }\n\n    if (type === \"file\") {\n      return (\n        /*#__PURE__*/\n        React__default.createElement(CustomFileInput, props)\n      );\n    }\n\n    if (type !== \"checkbox\" && type !== \"radio\" && type !== \"switch\") {\n      return (\n        /*#__PURE__*/\n        React__default.createElement(\"input\", _extends({}, attributes, {\n          ref: innerRef,\n          \"aria-invalid\": invalid,\n          className: classnames(validationClassNames, customClass)\n        }))\n      );\n    }\n\n    var wrapperClasses = classnames(customClass, mapToCssModules(classnames(\"custom-control\", {\n      \"custom-control-inline\": inline\n    }), cssModule));\n\n    var hidden = attributes.hidden,\n        rest = _objectWithoutPropertiesLoose(attributes, _excluded3);\n\n    return (\n      /*#__PURE__*/\n      React__default.createElement(\"div\", {\n        className: wrapperClasses,\n        hidden: hidden || false\n      },\n      /*#__PURE__*/\n      React__default.createElement(\"input\", _extends({}, rest, {\n        type: type === \"switch\" ? \"checkbox\" : type,\n        ref: innerRef,\n        \"aria-invalid\": invalid,\n        className: classnames(validationClassNames, mapToCssModules(\"custom-control-input\", cssModule))\n      })),\n      /*#__PURE__*/\n      React__default.createElement(\"label\", {\n        className: mapToCssModules(\"custom-control-label\", cssModule),\n        htmlFor: labelHtmlFor\n      }, label), children)\n    );\n  }\n\n  CustomInput.propTypes = propTypes$D;\n  var _excluded$D = [\"cssModule\", \"children\", \"isOpen\", \"flip\", \"target\", \"offset\", \"fallbackPlacement\", \"placementPrefix\", \"arrowClassName\", \"hideArrow\", \"popperClassName\", \"tag\", \"container\", \"modifiers\", \"positionFixed\", \"boundariesElement\", \"onClosed\", \"fade\", \"transition\", \"placement\"];\n\n  function noop() {}\n\n  var propTypes$E = {\n    children: propTypes.oneOfType([propTypes.node, propTypes.func]).isRequired,\n    popperClassName: propTypes.string,\n    placement: propTypes.string,\n    placementPrefix: propTypes.string,\n    arrowClassName: propTypes.string,\n    hideArrow: propTypes.bool,\n    tag: tagPropType,\n    isOpen: propTypes.bool.isRequired,\n    cssModule: propTypes.object,\n    offset: propTypes.oneOfType([propTypes.string, propTypes.number]),\n    fallbackPlacement: propTypes.oneOfType([propTypes.string, propTypes.array]),\n    flip: propTypes.bool,\n    container: targetPropType,\n    target: targetPropType.isRequired,\n    modifiers: propTypes.object,\n    positionFixed: propTypes.bool,\n    boundariesElement: propTypes.oneOfType([propTypes.string, DOMElement]),\n    onClosed: propTypes.func,\n    fade: propTypes.bool,\n    transition: propTypes.shape(Fade.propTypes)\n  };\n  var defaultProps$z = {\n    boundariesElement: 'scrollParent',\n    placement: 'auto',\n    hideArrow: false,\n    isOpen: false,\n    offset: 0,\n    fallbackPlacement: 'flip',\n    flip: true,\n    container: 'body',\n    modifiers: {},\n    onClosed: noop,\n    fade: true,\n    transition: _extends({}, Fade.defaultProps)\n  };\n\n  var PopperContent =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(PopperContent, _React$Component);\n\n    function PopperContent(props) {\n      var _this;\n\n      _this = _React$Component.call(this, props) || this;\n      _this.setTargetNode = _this.setTargetNode.bind(_assertThisInitialized(_this));\n      _this.getTargetNode = _this.getTargetNode.bind(_assertThisInitialized(_this));\n      _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n      _this.onClosed = _this.onClosed.bind(_assertThisInitialized(_this));\n      _this.state = {\n        isOpen: props.isOpen\n      };\n      return _this;\n    }\n\n    PopperContent.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n      if (props.isOpen && !state.isOpen) {\n        return {\n          isOpen: props.isOpen\n        };\n      } else return null;\n    };\n\n    var _proto = PopperContent.prototype;\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      if (this._element && this._element.childNodes && this._element.childNodes[0] && this._element.childNodes[0].focus) {\n        this._element.childNodes[0].focus();\n      }\n    };\n\n    _proto.setTargetNode = function setTargetNode(node) {\n      this.targetNode = typeof node === 'string' ? getTarget(node) : node;\n    };\n\n    _proto.getTargetNode = function getTargetNode() {\n      return this.targetNode;\n    };\n\n    _proto.getContainerNode = function getContainerNode() {\n      return getTarget(this.props.container);\n    };\n\n    _proto.getRef = function getRef(ref) {\n      this._element = ref;\n    };\n\n    _proto.onClosed = function onClosed() {\n      this.props.onClosed();\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    _proto.renderChildren = function renderChildren() {\n      var _this$props = this.props,\n          cssModule = _this$props.cssModule,\n          children = _this$props.children,\n          isOpen = _this$props.isOpen,\n          flip = _this$props.flip,\n          target = _this$props.target,\n          offset = _this$props.offset,\n          fallbackPlacement = _this$props.fallbackPlacement,\n          placementPrefix = _this$props.placementPrefix,\n          _arrowClassName = _this$props.arrowClassName,\n          hideArrow = _this$props.hideArrow,\n          _popperClassName = _this$props.popperClassName,\n          tag = _this$props.tag,\n          container = _this$props.container,\n          modifiers = _this$props.modifiers,\n          positionFixed = _this$props.positionFixed,\n          boundariesElement = _this$props.boundariesElement,\n          onClosed = _this$props.onClosed,\n          fade = _this$props.fade,\n          transition = _this$props.transition,\n          placement = _this$props.placement,\n          attrs = _objectWithoutPropertiesLoose(_this$props, _excluded$D);\n\n      var arrowClassName = mapToCssModules(classnames('arrow', _arrowClassName), cssModule);\n      var popperClassName = mapToCssModules(classnames(_popperClassName, placementPrefix ? placementPrefix + \"-auto\" : ''), this.props.cssModule);\n\n      var extendedModifiers = _extends({\n        offset: {\n          offset: offset\n        },\n        flip: {\n          enabled: flip,\n          behavior: fallbackPlacement\n        },\n        preventOverflow: {\n          boundariesElement: boundariesElement\n        }\n      }, modifiers);\n\n      var popperTransition = _extends({}, Fade.defaultProps, transition, {\n        baseClass: fade ? transition.baseClass : '',\n        timeout: fade ? transition.timeout : 0\n      });\n\n      return (\n        /*#__PURE__*/\n        React__default.createElement(Fade, _extends({}, popperTransition, attrs, {\n          in: isOpen,\n          onExited: this.onClosed,\n          tag: tag\n        }),\n        /*#__PURE__*/\n        React__default.createElement(reactPopper.Popper, {\n          referenceElement: this.targetNode,\n          modifiers: extendedModifiers,\n          placement: placement,\n          positionFixed: positionFixed\n        }, function (_ref) {\n          var ref = _ref.ref,\n              style = _ref.style,\n              placement = _ref.placement,\n              outOfBoundaries = _ref.outOfBoundaries,\n              arrowProps = _ref.arrowProps,\n              scheduleUpdate = _ref.scheduleUpdate;\n          return (\n            /*#__PURE__*/\n            React__default.createElement(\"div\", {\n              ref: ref,\n              style: style,\n              className: popperClassName,\n              \"x-placement\": placement,\n              \"x-out-of-boundaries\": outOfBoundaries ? 'true' : undefined\n            }, typeof children === 'function' ? children({\n              scheduleUpdate: scheduleUpdate\n            }) : children, !hideArrow &&\n            /*#__PURE__*/\n            React__default.createElement(\"span\", {\n              ref: arrowProps.ref,\n              className: arrowClassName,\n              style: arrowProps.style\n            }))\n          );\n        }))\n      );\n    };\n\n    _proto.render = function render() {\n      this.setTargetNode(this.props.target);\n\n      if (this.state.isOpen) {\n        return this.props.container === 'inline' ? this.renderChildren() :\n        /*#__PURE__*/\n        ReactDOM.createPortal(\n        /*#__PURE__*/\n        React__default.createElement(\"div\", {\n          ref: this.getRef\n        }, this.renderChildren()), this.getContainerNode());\n      }\n\n      return null;\n    };\n\n    return PopperContent;\n  }(React__default.Component);\n\n  PopperContent.propTypes = propTypes$E;\n  PopperContent.defaultProps = defaultProps$z;\n\n  var PopperTargetHelper = function PopperTargetHelper(props, context) {\n    context.popperManager.setTargetNode(getTarget(props.target));\n    return null;\n  };\n\n  PopperTargetHelper.contextTypes = {\n    popperManager: propTypes.object.isRequired\n  };\n  PopperTargetHelper.propTypes = {\n    target: targetPropType.isRequired\n  };\n  var propTypes$F = {\n    children: propTypes.oneOfType([propTypes.node, propTypes.func]),\n    placement: propTypes.oneOf(PopperPlacements),\n    target: targetPropType.isRequired,\n    container: targetPropType,\n    isOpen: propTypes.bool,\n    disabled: propTypes.bool,\n    hideArrow: propTypes.bool,\n    boundariesElement: propTypes.oneOfType([propTypes.string, DOMElement]),\n    className: propTypes.string,\n    innerClassName: propTypes.string,\n    arrowClassName: propTypes.string,\n    popperClassName: propTypes.string,\n    cssModule: propTypes.object,\n    toggle: propTypes.func,\n    autohide: propTypes.bool,\n    placementPrefix: propTypes.string,\n    delay: propTypes.oneOfType([propTypes.shape({\n      show: propTypes.number,\n      hide: propTypes.number\n    }), propTypes.number]),\n    modifiers: propTypes.object,\n    positionFixed: propTypes.bool,\n    offset: propTypes.oneOfType([propTypes.string, propTypes.number]),\n    innerRef: propTypes.oneOfType([propTypes.func, propTypes.string, propTypes.object]),\n    trigger: propTypes.string,\n    fade: propTypes.bool,\n    flip: propTypes.bool\n  };\n  var DEFAULT_DELAYS = {\n    show: 0,\n    hide: 50\n  };\n  var defaultProps$A = {\n    isOpen: false,\n    hideArrow: false,\n    autohide: false,\n    delay: DEFAULT_DELAYS,\n    toggle: function toggle() {},\n    trigger: 'click',\n    fade: true\n  };\n\n  function isInDOMSubtree(element, subtreeRoot) {\n    return subtreeRoot && (element === subtreeRoot || subtreeRoot.contains(element));\n  }\n\n  function isInDOMSubtrees(element, subtreeRoots) {\n    if (subtreeRoots === void 0) {\n      subtreeRoots = [];\n    }\n\n    return subtreeRoots && subtreeRoots.length && subtreeRoots.filter(function (subTreeRoot) {\n      return isInDOMSubtree(element, subTreeRoot);\n    })[0];\n  }\n\n  var TooltipPopoverWrapper =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(TooltipPopoverWrapper, _React$Component);\n\n    function TooltipPopoverWrapper(props) {\n      var _this;\n\n      _this = _React$Component.call(this, props) || this;\n      _this._targets = [];\n      _this.currentTargetElement = null;\n      _this.addTargetEvents = _this.addTargetEvents.bind(_assertThisInitialized(_this));\n      _this.handleDocumentClick = _this.handleDocumentClick.bind(_assertThisInitialized(_this));\n      _this.removeTargetEvents = _this.removeTargetEvents.bind(_assertThisInitialized(_this));\n      _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n      _this.showWithDelay = _this.showWithDelay.bind(_assertThisInitialized(_this));\n      _this.hideWithDelay = _this.hideWithDelay.bind(_assertThisInitialized(_this));\n      _this.onMouseOverTooltipContent = _this.onMouseOverTooltipContent.bind(_assertThisInitialized(_this));\n      _this.onMouseLeaveTooltipContent = _this.onMouseLeaveTooltipContent.bind(_assertThisInitialized(_this));\n      _this.show = _this.show.bind(_assertThisInitialized(_this));\n      _this.hide = _this.hide.bind(_assertThisInitialized(_this));\n      _this.onEscKeyDown = _this.onEscKeyDown.bind(_assertThisInitialized(_this));\n      _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n      _this.state = {\n        isOpen: props.isOpen\n      };\n      _this._isMounted = false;\n      return _this;\n    }\n\n    var _proto = TooltipPopoverWrapper.prototype;\n\n    _proto.componentDidMount = function componentDidMount() {\n      this._isMounted = true;\n      this.updateTarget();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this._isMounted = false;\n      this.removeTargetEvents();\n      this._targets = null;\n      this.clearShowTimeout();\n      this.clearHideTimeout();\n    };\n\n    TooltipPopoverWrapper.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n      if (props.isOpen && !state.isOpen) {\n        return {\n          isOpen: props.isOpen\n        };\n      } else return null;\n    };\n\n    _proto.onMouseOverTooltipContent = function onMouseOverTooltipContent() {\n      if (this.props.trigger.indexOf('hover') > -1 && !this.props.autohide) {\n        if (this._hideTimeout) {\n          this.clearHideTimeout();\n        }\n\n        if (this.state.isOpen && !this.props.isOpen) {\n          this.toggle();\n        }\n      }\n    };\n\n    _proto.onMouseLeaveTooltipContent = function onMouseLeaveTooltipContent(e) {\n      if (this.props.trigger.indexOf('hover') > -1 && !this.props.autohide) {\n        if (this._showTimeout) {\n          this.clearShowTimeout();\n        }\n\n        e.persist();\n        this._hideTimeout = setTimeout(this.hide.bind(this, e), this.getDelay('hide'));\n      }\n    };\n\n    _proto.onEscKeyDown = function onEscKeyDown(e) {\n      if (e.key === 'Escape') {\n        this.hide(e);\n      }\n    };\n\n    _proto.getRef = function getRef(ref) {\n      var innerRef = this.props.innerRef;\n\n      if (innerRef) {\n        if (typeof innerRef === 'function') {\n          innerRef(ref);\n        } else if (typeof innerRef === 'object') {\n          innerRef.current = ref;\n        }\n      }\n\n      this._popover = ref;\n    };\n\n    _proto.getDelay = function getDelay(key) {\n      var delay = this.props.delay;\n\n      if (typeof delay === 'object') {\n        return isNaN(delay[key]) ? DEFAULT_DELAYS[key] : delay[key];\n      }\n\n      return delay;\n    };\n\n    _proto.getCurrentTarget = function getCurrentTarget(target) {\n      if (!target) return null;\n\n      var index = this._targets.indexOf(target);\n\n      if (index >= 0) return this._targets[index];\n      return this.getCurrentTarget(target.parentElement);\n    };\n\n    _proto.show = function show(e) {\n      if (!this.props.isOpen) {\n        this.clearShowTimeout();\n        this.currentTargetElement = e ? e.currentTarget || this.getCurrentTarget(e.target) : null;\n\n        if (e && e.composedPath && typeof e.composedPath === 'function') {\n          var path = e.composedPath();\n          this.currentTargetElement = path && path[0] || this.currentTargetElement;\n        }\n\n        this.toggle(e);\n      }\n    };\n\n    _proto.showWithDelay = function showWithDelay(e) {\n      if (this._hideTimeout) {\n        this.clearHideTimeout();\n      }\n\n      this._showTimeout = setTimeout(this.show.bind(this, e), this.getDelay('show'));\n    };\n\n    _proto.hide = function hide(e) {\n      if (this.props.isOpen) {\n        this.clearHideTimeout();\n        this.currentTargetElement = null;\n        this.toggle(e);\n      }\n    };\n\n    _proto.hideWithDelay = function hideWithDelay(e) {\n      if (this._showTimeout) {\n        this.clearShowTimeout();\n      }\n\n      this._hideTimeout = setTimeout(this.hide.bind(this, e), this.getDelay('hide'));\n    };\n\n    _proto.clearShowTimeout = function clearShowTimeout() {\n      clearTimeout(this._showTimeout);\n      this._showTimeout = undefined;\n    };\n\n    _proto.clearHideTimeout = function clearHideTimeout() {\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = undefined;\n    };\n\n    _proto.handleDocumentClick = function handleDocumentClick(e) {\n      var triggers = this.props.trigger.split(' ');\n\n      if (triggers.indexOf('legacy') > -1 && (this.props.isOpen || isInDOMSubtrees(e.target, this._targets))) {\n        if (this._hideTimeout) {\n          this.clearHideTimeout();\n        }\n\n        if (this.props.isOpen && !isInDOMSubtree(e.target, this._popover)) {\n          this.hideWithDelay(e);\n        } else if (!this.props.isOpen) {\n          this.showWithDelay(e);\n        }\n      } else if (triggers.indexOf('click') > -1 && isInDOMSubtrees(e.target, this._targets)) {\n        if (this._hideTimeout) {\n          this.clearHideTimeout();\n        }\n\n        if (!this.props.isOpen) {\n          this.showWithDelay(e);\n        } else {\n          this.hideWithDelay(e);\n        }\n      }\n    };\n\n    _proto.addEventOnTargets = function addEventOnTargets(type, handler, isBubble) {\n      this._targets.forEach(function (target) {\n        target.addEventListener(type, handler, isBubble);\n      });\n    };\n\n    _proto.removeEventOnTargets = function removeEventOnTargets(type, handler, isBubble) {\n      this._targets.forEach(function (target) {\n        target.removeEventListener(type, handler, isBubble);\n      });\n    };\n\n    _proto.addTargetEvents = function addTargetEvents() {\n      if (this.props.trigger) {\n        var triggers = this.props.trigger.split(' ');\n\n        if (triggers.indexOf('manual') === -1) {\n          if (triggers.indexOf('click') > -1 || triggers.indexOf('legacy') > -1) {\n            document.addEventListener('click', this.handleDocumentClick, true);\n          }\n\n          if (this._targets && this._targets.length) {\n            if (triggers.indexOf('hover') > -1) {\n              this.addEventOnTargets('mouseover', this.showWithDelay, true);\n              this.addEventOnTargets('mouseout', this.hideWithDelay, true);\n            }\n\n            if (triggers.indexOf('focus') > -1) {\n              this.addEventOnTargets('focusin', this.show, true);\n              this.addEventOnTargets('focusout', this.hide, true);\n            }\n\n            this.addEventOnTargets('keydown', this.onEscKeyDown, true);\n          }\n        }\n      }\n    };\n\n    _proto.removeTargetEvents = function removeTargetEvents() {\n      if (this._targets) {\n        this.removeEventOnTargets('mouseover', this.showWithDelay, true);\n        this.removeEventOnTargets('mouseout', this.hideWithDelay, true);\n        this.removeEventOnTargets('keydown', this.onEscKeyDown, true);\n        this.removeEventOnTargets('focusin', this.show, true);\n        this.removeEventOnTargets('focusout', this.hide, true);\n      }\n\n      document.removeEventListener('click', this.handleDocumentClick, true);\n    };\n\n    _proto.updateTarget = function updateTarget() {\n      var newTarget = getTarget(this.props.target, true);\n\n      if (newTarget !== this._targets) {\n        this.removeTargetEvents();\n        this._targets = newTarget ? Array.from(newTarget) : [];\n        this.currentTargetElement = this.currentTargetElement || this._targets[0];\n        this.addTargetEvents();\n      }\n    };\n\n    _proto.toggle = function toggle(e) {\n      if (this.props.disabled || !this._isMounted) {\n        return e && e.preventDefault();\n      }\n\n      return this.props.toggle(e);\n    };\n\n    _proto.render = function render() {\n      var _this2 = this;\n\n      if (this.props.isOpen) {\n        this.updateTarget();\n      }\n\n      var target = this.currentTargetElement || this._targets[0];\n\n      if (!target) {\n        return null;\n      }\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          cssModule = _this$props.cssModule,\n          innerClassName = _this$props.innerClassName,\n          isOpen = _this$props.isOpen,\n          hideArrow = _this$props.hideArrow,\n          boundariesElement = _this$props.boundariesElement,\n          placement = _this$props.placement,\n          placementPrefix = _this$props.placementPrefix,\n          arrowClassName = _this$props.arrowClassName,\n          popperClassName = _this$props.popperClassName,\n          container = _this$props.container,\n          modifiers = _this$props.modifiers,\n          positionFixed = _this$props.positionFixed,\n          offset = _this$props.offset,\n          fade = _this$props.fade,\n          flip = _this$props.flip,\n          children = _this$props.children;\n      var attributes = omit(this.props, Object.keys(propTypes$F));\n      var popperClasses = mapToCssModules(popperClassName, cssModule);\n      var classes = mapToCssModules(innerClassName, cssModule);\n      return (\n        /*#__PURE__*/\n        React__default.createElement(PopperContent, {\n          className: className,\n          target: target,\n          isOpen: isOpen,\n          hideArrow: hideArrow,\n          boundariesElement: boundariesElement,\n          placement: placement,\n          placementPrefix: placementPrefix,\n          arrowClassName: arrowClassName,\n          popperClassName: popperClasses,\n          container: container,\n          modifiers: modifiers,\n          positionFixed: positionFixed,\n          offset: offset,\n          cssModule: cssModule,\n          fade: fade,\n          flip: flip\n        }, function (_ref) {\n          var scheduleUpdate = _ref.scheduleUpdate;\n          return (\n            /*#__PURE__*/\n            React__default.createElement(\"div\", _extends({}, attributes, {\n              ref: _this2.getRef,\n              className: classes,\n              role: \"tooltip\",\n              onMouseOver: _this2.onMouseOverTooltipContent,\n              onMouseLeave: _this2.onMouseLeaveTooltipContent,\n              onKeyDown: _this2.onEscKeyDown\n            }), typeof children === 'function' ? children({\n              scheduleUpdate: scheduleUpdate\n            }) : children)\n          );\n        })\n      );\n    };\n\n    return TooltipPopoverWrapper;\n  }(React__default.Component);\n\n  TooltipPopoverWrapper.propTypes = propTypes$F;\n  TooltipPopoverWrapper.defaultProps = defaultProps$A;\n  var defaultProps$B = {\n    placement: 'right',\n    placementPrefix: 'bs-popover',\n    trigger: 'click'\n  };\n\n  var Popover = function Popover(props) {\n    var popperClasses = classnames('popover', 'show', props.popperClassName);\n    var classes = classnames('popover-inner', props.innerClassName);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(TooltipPopoverWrapper, _extends({}, props, {\n        popperClassName: popperClasses,\n        innerClassName: classes\n      }))\n    );\n  };\n\n  Popover.propTypes = propTypes$F;\n  Popover.defaultProps = defaultProps$B;\n  var omitKeys = ['defaultOpen'];\n\n  var UncontrolledPopover =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(UncontrolledPopover, _Component);\n\n    function UncontrolledPopover(props) {\n      var _this;\n\n      _this = _Component.call(this, props) || this;\n      _this.state = {\n        isOpen: props.defaultOpen || false\n      };\n      _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    var _proto = UncontrolledPopover.prototype;\n\n    _proto.toggle = function toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    _proto.render = function render() {\n      return (\n        /*#__PURE__*/\n        React__default.createElement(Popover, _extends({\n          isOpen: this.state.isOpen,\n          toggle: this.toggle\n        }, omit(this.props, omitKeys)))\n      );\n    };\n\n    return UncontrolledPopover;\n  }(React.Component);\n\n  UncontrolledPopover.propTypes = _extends({\n    defaultOpen: propTypes.bool\n  }, Popover.propTypes);\n  var _excluded$E = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$G = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$C = {\n    tag: 'h3'\n  };\n\n  var PopoverHeader = function PopoverHeader(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$E);\n\n    var classes = mapToCssModules(classnames(className, 'popover-header'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  PopoverHeader.propTypes = propTypes$G;\n  PopoverHeader.defaultProps = defaultProps$C;\n  var _excluded$F = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$H = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$D = {\n    tag: 'div'\n  };\n\n  var PopoverBody = function PopoverBody(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$F);\n\n    var classes = mapToCssModules(classnames(className, 'popover-body'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  PopoverBody.propTypes = propTypes$H;\n  PopoverBody.defaultProps = defaultProps$D;\n  var _excluded$G = [\"children\", \"className\", \"barClassName\", \"cssModule\", \"value\", \"min\", \"max\", \"animated\", \"striped\", \"color\", \"bar\", \"multi\", \"tag\", \"style\", \"barStyle\", \"barAriaValueText\", \"barAriaLabelledBy\"];\n  var propTypes$I = {\n    children: propTypes.node,\n    bar: propTypes.bool,\n    multi: propTypes.bool,\n    tag: tagPropType,\n    value: propTypes.oneOfType([propTypes.string, propTypes.number]),\n    min: propTypes.oneOfType([propTypes.string, propTypes.number]),\n    max: propTypes.oneOfType([propTypes.string, propTypes.number]),\n    animated: propTypes.bool,\n    striped: propTypes.bool,\n    color: propTypes.string,\n    className: propTypes.string,\n    barClassName: propTypes.string,\n    cssModule: propTypes.object,\n    style: propTypes.object,\n    barStyle: propTypes.object,\n    barAriaValueText: propTypes.string,\n    barAriaLabelledBy: propTypes.string\n  };\n  var defaultProps$E = {\n    tag: 'div',\n    value: 0,\n    min: 0,\n    max: 100,\n    style: {},\n    barStyle: {}\n  };\n\n  var Progress = function Progress(props) {\n    var children = props.children,\n        className = props.className,\n        barClassName = props.barClassName,\n        cssModule = props.cssModule,\n        value = props.value,\n        min = props.min,\n        max = props.max,\n        animated = props.animated,\n        striped = props.striped,\n        color = props.color,\n        bar = props.bar,\n        multi = props.multi,\n        Tag = props.tag,\n        style = props.style,\n        barStyle = props.barStyle,\n        barAriaValueText = props.barAriaValueText,\n        barAriaLabelledBy = props.barAriaLabelledBy,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$G);\n\n    var percent = toNumber(value) / toNumber(max) * 100;\n    var progressClasses = mapToCssModules(classnames(className, 'progress'), cssModule);\n    var progressBarClasses = mapToCssModules(classnames('progress-bar', bar ? className || barClassName : barClassName, animated ? 'progress-bar-animated' : null, color ? \"bg-\" + color : null, striped || animated ? 'progress-bar-striped' : null), cssModule);\n    var progressBarProps = {\n      className: progressBarClasses,\n      style: _extends({}, bar ? style : {}, barStyle, {\n        width: percent + \"%\"\n      }),\n      role: 'progressbar',\n      'aria-valuenow': value,\n      'aria-valuemin': min,\n      'aria-valuemax': max,\n      'aria-valuetext': barAriaValueText,\n      'aria-labelledby': barAriaLabelledBy,\n      children: children\n    };\n\n    if (bar) {\n      return (\n        /*#__PURE__*/\n        React__default.createElement(Tag, _extends({}, attributes, progressBarProps))\n      );\n    }\n\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        style: style,\n        className: progressClasses\n      }), multi ? children :\n      /*#__PURE__*/\n      React__default.createElement(\"div\", progressBarProps))\n    );\n  };\n\n  Progress.propTypes = propTypes$I;\n  Progress.defaultProps = defaultProps$E;\n  var propTypes$J = {\n    children: propTypes.node.isRequired,\n    node: propTypes.any\n  };\n\n  var Portal$1 =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(Portal, _React$Component);\n\n    function Portal() {\n      return _React$Component.apply(this, arguments) || this;\n    }\n\n    var _proto = Portal.prototype;\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this.defaultNode) {\n        document.body.removeChild(this.defaultNode);\n      }\n\n      this.defaultNode = null;\n    };\n\n    _proto.render = function render() {\n      if (!canUseDOM) {\n        return null;\n      }\n\n      if (!this.props.node && !this.defaultNode) {\n        this.defaultNode = document.createElement('div');\n        document.body.appendChild(this.defaultNode);\n      }\n\n      return (\n        /*#__PURE__*/\n        ReactDOM.createPortal(this.props.children, this.props.node || this.defaultNode)\n      );\n    };\n\n    return Portal;\n  }(React__default.Component);\n\n  Portal$1.propTypes = propTypes$J;\n\n  function noop$1() {}\n\n  var FadePropTypes = propTypes.shape(Fade.propTypes);\n  var propTypes$K = {\n    isOpen: propTypes.bool,\n    autoFocus: propTypes.bool,\n    centered: propTypes.bool,\n    scrollable: propTypes.bool,\n    size: propTypes.string,\n    toggle: propTypes.func,\n    keyboard: propTypes.bool,\n    role: propTypes.string,\n    labelledBy: propTypes.string,\n    backdrop: propTypes.oneOfType([propTypes.bool, propTypes.oneOf(['static'])]),\n    onEnter: propTypes.func,\n    onExit: propTypes.func,\n    onOpened: propTypes.func,\n    onClosed: propTypes.func,\n    children: propTypes.node,\n    className: propTypes.string,\n    wrapClassName: propTypes.string,\n    modalClassName: propTypes.string,\n    backdropClassName: propTypes.string,\n    contentClassName: propTypes.string,\n    external: propTypes.node,\n    fade: propTypes.bool,\n    cssModule: propTypes.object,\n    zIndex: propTypes.oneOfType([propTypes.number, propTypes.string]),\n    backdropTransition: FadePropTypes,\n    modalTransition: FadePropTypes,\n    innerRef: propTypes.oneOfType([propTypes.object, propTypes.string, propTypes.func]),\n    unmountOnClose: propTypes.bool,\n    returnFocusAfterClose: propTypes.bool,\n    container: targetPropType,\n    trapFocus: propTypes.bool\n  };\n  var propsToOmit = Object.keys(propTypes$K);\n  var defaultProps$F = {\n    isOpen: false,\n    autoFocus: true,\n    centered: false,\n    scrollable: false,\n    role: 'dialog',\n    backdrop: true,\n    keyboard: true,\n    zIndex: 1050,\n    fade: true,\n    onOpened: noop$1,\n    onClosed: noop$1,\n    modalTransition: {\n      timeout: TransitionTimeouts.Modal\n    },\n    backdropTransition: {\n      mountOnEnter: true,\n      timeout: TransitionTimeouts.Fade // uses standard fade transition\n\n    },\n    unmountOnClose: true,\n    returnFocusAfterClose: true,\n    container: 'body',\n    trapFocus: false\n  };\n\n  var Modal =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(Modal, _React$Component);\n\n    function Modal(props) {\n      var _this;\n\n      _this = _React$Component.call(this, props) || this;\n      _this._element = null;\n      _this._originalBodyPadding = null;\n      _this.getFocusableChildren = _this.getFocusableChildren.bind(_assertThisInitialized(_this));\n      _this.handleBackdropClick = _this.handleBackdropClick.bind(_assertThisInitialized(_this));\n      _this.handleBackdropMouseDown = _this.handleBackdropMouseDown.bind(_assertThisInitialized(_this));\n      _this.handleEscape = _this.handleEscape.bind(_assertThisInitialized(_this));\n      _this.handleStaticBackdropAnimation = _this.handleStaticBackdropAnimation.bind(_assertThisInitialized(_this));\n      _this.handleTab = _this.handleTab.bind(_assertThisInitialized(_this));\n      _this.onOpened = _this.onOpened.bind(_assertThisInitialized(_this));\n      _this.onClosed = _this.onClosed.bind(_assertThisInitialized(_this));\n      _this.manageFocusAfterClose = _this.manageFocusAfterClose.bind(_assertThisInitialized(_this));\n      _this.clearBackdropAnimationTimeout = _this.clearBackdropAnimationTimeout.bind(_assertThisInitialized(_this));\n      _this.trapFocus = _this.trapFocus.bind(_assertThisInitialized(_this));\n      _this.state = {\n        isOpen: false,\n        showStaticBackdropAnimation: false\n      };\n      return _this;\n    }\n\n    var _proto = Modal.prototype;\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props = this.props,\n          isOpen = _this$props.isOpen,\n          autoFocus = _this$props.autoFocus,\n          onEnter = _this$props.onEnter;\n\n      if (isOpen) {\n        this.init();\n        this.setState({\n          isOpen: true\n        });\n\n        if (autoFocus) {\n          this.setFocus();\n        }\n      }\n\n      if (onEnter) {\n        onEnter();\n      } // traps focus inside the Modal, even if the browser address bar is focused\n\n\n      document.addEventListener('focus', this.trapFocus, true);\n      this._isMounted = true;\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n      if (this.props.isOpen && !prevProps.isOpen) {\n        this.init();\n        this.setState({\n          isOpen: true\n        }); // let render() renders Modal Dialog first\n\n        return;\n      } // now Modal Dialog is rendered and we can refer this._element and this._dialog\n\n\n      if (this.props.autoFocus && this.state.isOpen && !prevState.isOpen) {\n        this.setFocus();\n      }\n\n      if (this._element && prevProps.zIndex !== this.props.zIndex) {\n        this._element.style.zIndex = this.props.zIndex;\n      }\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.clearBackdropAnimationTimeout();\n\n      if (this.props.onExit) {\n        this.props.onExit();\n      }\n\n      if (this._element) {\n        this.destroy();\n\n        if (this.props.isOpen || this.state.isOpen) {\n          this.close();\n        }\n      }\n\n      document.removeEventListener('focus', this.trapFocus, true);\n      this._isMounted = false;\n    };\n\n    _proto.trapFocus = function trapFocus(ev) {\n      if (!this.props.trapFocus) {\n        return;\n      }\n\n      if (!this._element) //element is not attached\n        return;\n      if (this._dialog && this._dialog.parentNode === ev.target) // initial focus when the Modal is opened\n        return;\n      if (this.modalIndex < Modal.openCount - 1) // last opened modal\n        return;\n      var children = this.getFocusableChildren();\n\n      for (var i = 0; i < children.length; i++) {\n        // focus is already inside the Modal\n        if (children[i] === ev.target) return;\n      }\n\n      if (children.length > 0) {\n        // otherwise focus the first focusable element in the Modal\n        ev.preventDefault();\n        ev.stopPropagation();\n        children[0].focus();\n      }\n    };\n\n    _proto.onOpened = function onOpened(node, isAppearing) {\n      this.props.onOpened();\n      (this.props.modalTransition.onEntered || noop$1)(node, isAppearing);\n    };\n\n    _proto.onClosed = function onClosed(node) {\n      var unmountOnClose = this.props.unmountOnClose; // so all methods get called before it is unmounted\n\n      this.props.onClosed();\n      (this.props.modalTransition.onExited || noop$1)(node);\n\n      if (unmountOnClose) {\n        this.destroy();\n      }\n\n      this.close();\n\n      if (this._isMounted) {\n        this.setState({\n          isOpen: false\n        });\n      }\n    };\n\n    _proto.setFocus = function setFocus() {\n      if (this._dialog && this._dialog.parentNode && typeof this._dialog.parentNode.focus === 'function') {\n        this._dialog.parentNode.focus();\n      }\n    };\n\n    _proto.getFocusableChildren = function getFocusableChildren() {\n      return this._element.querySelectorAll(focusableElements.join(', '));\n    };\n\n    _proto.getFocusedChild = function getFocusedChild() {\n      var currentFocus;\n      var focusableChildren = this.getFocusableChildren();\n\n      try {\n        currentFocus = document.activeElement;\n      } catch (err) {\n        currentFocus = focusableChildren[0];\n      }\n\n      return currentFocus;\n    } // not mouseUp because scrollbar fires it, shouldn't close when user scrolls\n    ;\n\n    _proto.handleBackdropClick = function handleBackdropClick(e) {\n      if (e.target === this._mouseDownElement) {\n        e.stopPropagation();\n        var backdrop = this._dialog ? this._dialog.parentNode : null;\n\n        if (backdrop && e.target === backdrop && this.props.backdrop === 'static') {\n          this.handleStaticBackdropAnimation();\n        }\n\n        if (!this.props.isOpen || this.props.backdrop !== true) return;\n\n        if (backdrop && e.target === backdrop && this.props.toggle) {\n          this.props.toggle(e);\n        }\n      }\n    };\n\n    _proto.handleTab = function handleTab(e) {\n      if (e.which !== 9) return;\n      if (this.modalIndex < Modal.openCount - 1) return; // last opened modal\n\n      var focusableChildren = this.getFocusableChildren();\n      var totalFocusable = focusableChildren.length;\n      if (totalFocusable === 0) return;\n      var currentFocus = this.getFocusedChild();\n      var focusedIndex = 0;\n\n      for (var i = 0; i < totalFocusable; i += 1) {\n        if (focusableChildren[i] === currentFocus) {\n          focusedIndex = i;\n          break;\n        }\n      }\n\n      if (e.shiftKey && focusedIndex === 0) {\n        e.preventDefault();\n        focusableChildren[totalFocusable - 1].focus();\n      } else if (!e.shiftKey && focusedIndex === totalFocusable - 1) {\n        e.preventDefault();\n        focusableChildren[0].focus();\n      }\n    };\n\n    _proto.handleBackdropMouseDown = function handleBackdropMouseDown(e) {\n      this._mouseDownElement = e.target;\n    };\n\n    _proto.handleEscape = function handleEscape(e) {\n      if (this.props.isOpen && e.keyCode === keyCodes.esc && this.props.toggle) {\n        if (this.props.keyboard) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.props.toggle(e);\n        } else if (this.props.backdrop === 'static') {\n          e.preventDefault();\n          e.stopPropagation();\n          this.handleStaticBackdropAnimation();\n        }\n      }\n    };\n\n    _proto.handleStaticBackdropAnimation = function handleStaticBackdropAnimation() {\n      var _this2 = this;\n\n      this.clearBackdropAnimationTimeout();\n      this.setState({\n        showStaticBackdropAnimation: true\n      });\n      this._backdropAnimationTimeout = setTimeout(function () {\n        _this2.setState({\n          showStaticBackdropAnimation: false\n        });\n      }, 100);\n    };\n\n    _proto.init = function init() {\n      try {\n        this._triggeringElement = document.activeElement;\n      } catch (err) {\n        this._triggeringElement = null;\n      }\n\n      if (!this._element) {\n        this._element = document.createElement('div');\n\n        this._element.setAttribute('tabindex', '-1');\n\n        this._element.style.position = 'relative';\n        this._element.style.zIndex = this.props.zIndex;\n        this._mountContainer = getTarget(this.props.container);\n\n        this._mountContainer.appendChild(this._element);\n      }\n\n      this._originalBodyPadding = getOriginalBodyPadding();\n      conditionallyUpdateScrollbar();\n\n      if (Modal.openCount === 0) {\n        document.body.className = classnames(document.body.className, mapToCssModules('modal-open', this.props.cssModule));\n      }\n\n      this.modalIndex = Modal.openCount;\n      Modal.openCount += 1;\n    };\n\n    _proto.destroy = function destroy() {\n      if (this._element) {\n        this._mountContainer.removeChild(this._element);\n\n        this._element = null;\n      }\n\n      this.manageFocusAfterClose();\n    };\n\n    _proto.manageFocusAfterClose = function manageFocusAfterClose() {\n      if (this._triggeringElement) {\n        var returnFocusAfterClose = this.props.returnFocusAfterClose;\n        if (this._triggeringElement.focus && returnFocusAfterClose) this._triggeringElement.focus();\n        this._triggeringElement = null;\n      }\n    };\n\n    _proto.close = function close() {\n      if (Modal.openCount <= 1) {\n        var modalOpenClassName = mapToCssModules('modal-open', this.props.cssModule); // Use regex to prevent matching `modal-open` as part of a different class, e.g. `my-modal-opened`\n\n        var modalOpenClassNameRegex = new RegExp(\"(^| )\" + modalOpenClassName + \"( |$)\");\n        document.body.className = document.body.className.replace(modalOpenClassNameRegex, ' ').trim();\n      }\n\n      this.manageFocusAfterClose();\n      Modal.openCount = Math.max(0, Modal.openCount - 1);\n      setScrollbarWidth(this._originalBodyPadding);\n    };\n\n    _proto.renderModalDialog = function renderModalDialog() {\n      var _classNames,\n          _this3 = this;\n\n      var attributes = omit(this.props, propsToOmit);\n      var dialogBaseClass = 'modal-dialog';\n      return (\n        /*#__PURE__*/\n        React__default.createElement(\"div\", _extends({}, attributes, {\n          className: mapToCssModules(classnames(dialogBaseClass, this.props.className, (_classNames = {}, _classNames[\"modal-\" + this.props.size] = this.props.size, _classNames[dialogBaseClass + \"-centered\"] = this.props.centered, _classNames[dialogBaseClass + \"-scrollable\"] = this.props.scrollable, _classNames)), this.props.cssModule),\n          role: \"document\",\n          ref: function ref(c) {\n            _this3._dialog = c;\n          }\n        }),\n        /*#__PURE__*/\n        React__default.createElement(\"div\", {\n          className: mapToCssModules(classnames('modal-content', this.props.contentClassName), this.props.cssModule)\n        }, this.props.children))\n      );\n    };\n\n    _proto.render = function render() {\n      var unmountOnClose = this.props.unmountOnClose;\n\n      if (!!this._element && (this.state.isOpen || !unmountOnClose)) {\n        var isModalHidden = !!this._element && !this.state.isOpen && !unmountOnClose;\n        this._element.style.display = isModalHidden ? 'none' : 'block';\n        var _this$props2 = this.props,\n            wrapClassName = _this$props2.wrapClassName,\n            modalClassName = _this$props2.modalClassName,\n            backdropClassName = _this$props2.backdropClassName,\n            cssModule = _this$props2.cssModule,\n            isOpen = _this$props2.isOpen,\n            backdrop = _this$props2.backdrop,\n            role = _this$props2.role,\n            labelledBy = _this$props2.labelledBy,\n            external = _this$props2.external,\n            innerRef = _this$props2.innerRef;\n        var modalAttributes = {\n          onClick: this.handleBackdropClick,\n          onMouseDown: this.handleBackdropMouseDown,\n          onKeyUp: this.handleEscape,\n          onKeyDown: this.handleTab,\n          style: {\n            display: 'block'\n          },\n          'aria-labelledby': labelledBy,\n          role: role,\n          tabIndex: '-1'\n        };\n        var hasTransition = this.props.fade;\n\n        var modalTransition = _extends({}, Fade.defaultProps, this.props.modalTransition, {\n          baseClass: hasTransition ? this.props.modalTransition.baseClass : '',\n          timeout: hasTransition ? this.props.modalTransition.timeout : 0\n        });\n\n        var backdropTransition = _extends({}, Fade.defaultProps, this.props.backdropTransition, {\n          baseClass: hasTransition ? this.props.backdropTransition.baseClass : '',\n          timeout: hasTransition ? this.props.backdropTransition.timeout : 0\n        });\n\n        var Backdrop = backdrop && (hasTransition ?\n        /*#__PURE__*/\n        React__default.createElement(Fade, _extends({}, backdropTransition, {\n          in: isOpen && !!backdrop,\n          cssModule: cssModule,\n          className: mapToCssModules(classnames('modal-backdrop', backdropClassName), cssModule)\n        })) :\n        /*#__PURE__*/\n        React__default.createElement(\"div\", {\n          className: mapToCssModules(classnames('modal-backdrop', 'show', backdropClassName), cssModule)\n        }));\n        return (\n          /*#__PURE__*/\n          React__default.createElement(Portal$1, {\n            node: this._element\n          },\n          /*#__PURE__*/\n          React__default.createElement(\"div\", {\n            className: mapToCssModules(wrapClassName)\n          },\n          /*#__PURE__*/\n          React__default.createElement(Fade, _extends({}, modalAttributes, modalTransition, {\n            in: isOpen,\n            onEntered: this.onOpened,\n            onExited: this.onClosed,\n            cssModule: cssModule,\n            className: mapToCssModules(classnames('modal', modalClassName, this.state.showStaticBackdropAnimation && 'modal-static'), cssModule),\n            innerRef: innerRef\n          }), external, this.renderModalDialog()), Backdrop))\n        );\n      }\n\n      return null;\n    };\n\n    _proto.clearBackdropAnimationTimeout = function clearBackdropAnimationTimeout() {\n      if (this._backdropAnimationTimeout) {\n        clearTimeout(this._backdropAnimationTimeout);\n        this._backdropAnimationTimeout = undefined;\n      }\n    };\n\n    return Modal;\n  }(React__default.Component);\n\n  Modal.propTypes = propTypes$K;\n  Modal.defaultProps = defaultProps$F;\n  Modal.openCount = 0;\n  var _excluded$H = [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\", \"charCode\", \"close\"];\n  var propTypes$L = {\n    tag: tagPropType,\n    wrapTag: tagPropType,\n    toggle: propTypes.func,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    children: propTypes.node,\n    closeAriaLabel: propTypes.string,\n    charCode: propTypes.oneOfType([propTypes.string, propTypes.number]),\n    close: propTypes.object\n  };\n  var defaultProps$G = {\n    tag: 'h5',\n    wrapTag: 'div',\n    closeAriaLabel: 'Close',\n    charCode: 215\n  };\n\n  var ModalHeader = function ModalHeader(props) {\n    var closeButton;\n\n    var className = props.className,\n        cssModule = props.cssModule,\n        children = props.children,\n        toggle = props.toggle,\n        Tag = props.tag,\n        WrapTag = props.wrapTag,\n        closeAriaLabel = props.closeAriaLabel,\n        charCode = props.charCode,\n        close = props.close,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$H);\n\n    var classes = mapToCssModules(classnames(className, 'modal-header'), cssModule);\n\n    if (!close && toggle) {\n      var closeIcon = typeof charCode === 'number' ? String.fromCharCode(charCode) : charCode;\n      closeButton =\n      /*#__PURE__*/\n      React__default.createElement(\"button\", {\n        type: \"button\",\n        onClick: toggle,\n        className: mapToCssModules('close', cssModule),\n        \"aria-label\": closeAriaLabel\n      },\n      /*#__PURE__*/\n      React__default.createElement(\"span\", {\n        \"aria-hidden\": \"true\"\n      }, closeIcon));\n    }\n\n    return (\n      /*#__PURE__*/\n      React__default.createElement(WrapTag, _extends({}, attributes, {\n        className: classes\n      }),\n      /*#__PURE__*/\n      React__default.createElement(Tag, {\n        className: mapToCssModules('modal-title', cssModule)\n      }, children), close || closeButton)\n    );\n  };\n\n  ModalHeader.propTypes = propTypes$L;\n  ModalHeader.defaultProps = defaultProps$G;\n  var _excluded$I = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$M = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$H = {\n    tag: 'div'\n  };\n\n  var ModalBody = function ModalBody(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$I);\n\n    var classes = mapToCssModules(classnames(className, 'modal-body'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  ModalBody.propTypes = propTypes$M;\n  ModalBody.defaultProps = defaultProps$H;\n  var _excluded$J = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$N = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$I = {\n    tag: 'div'\n  };\n\n  var ModalFooter = function ModalFooter(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$J);\n\n    var classes = mapToCssModules(classnames(className, 'modal-footer'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  ModalFooter.propTypes = propTypes$N;\n  ModalFooter.defaultProps = defaultProps$I;\n  var defaultProps$J = {\n    placement: 'top',\n    autohide: true,\n    placementPrefix: 'bs-tooltip',\n    trigger: 'hover focus'\n  };\n\n  var Tooltip = function Tooltip(props) {\n    var popperClasses = classnames('tooltip', 'show', props.popperClassName);\n    var classes = classnames('tooltip-inner', props.innerClassName);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(TooltipPopoverWrapper, _extends({}, props, {\n        popperClassName: popperClasses,\n        innerClassName: classes\n      }))\n    );\n  };\n\n  Tooltip.propTypes = propTypes$F;\n  Tooltip.defaultProps = defaultProps$J;\n  var _excluded$K = [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"];\n  var propTypes$O = {\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    size: propTypes.string,\n    bordered: propTypes.bool,\n    borderless: propTypes.bool,\n    striped: propTypes.bool,\n    dark: propTypes.bool,\n    hover: propTypes.bool,\n    responsive: propTypes.oneOfType([propTypes.bool, propTypes.string]),\n    tag: tagPropType,\n    responsiveTag: tagPropType,\n    innerRef: propTypes.oneOfType([propTypes.func, propTypes.string, propTypes.object])\n  };\n  var defaultProps$K = {\n    tag: 'table',\n    responsiveTag: 'div'\n  };\n\n  var Table = function Table(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        size = props.size,\n        bordered = props.bordered,\n        borderless = props.borderless,\n        striped = props.striped,\n        dark = props.dark,\n        hover = props.hover,\n        responsive = props.responsive,\n        Tag = props.tag,\n        ResponsiveTag = props.responsiveTag,\n        innerRef = props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$K);\n\n    var classes = mapToCssModules(classnames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n    var table =\n    /*#__PURE__*/\n    React__default.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n\n    if (responsive) {\n      var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n      return (\n        /*#__PURE__*/\n        React__default.createElement(ResponsiveTag, {\n          className: responsiveClassName\n        }, table)\n      );\n    }\n\n    return table;\n  };\n\n  Table.propTypes = propTypes$O;\n  Table.defaultProps = defaultProps$K;\n  var _excluded$L = [\"className\", \"cssModule\", \"tag\", \"flush\", \"horizontal\"];\n  var propTypes$P = {\n    tag: tagPropType,\n    flush: propTypes.bool,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    horizontal: propTypes.oneOfType([propTypes.bool, propTypes.string])\n  };\n  var defaultProps$L = {\n    tag: 'ul',\n    horizontal: false\n  };\n\n  var getHorizontalClass = function getHorizontalClass(horizontal) {\n    if (horizontal === false) {\n      return false;\n    } else if (horizontal === true || horizontal === \"xs\") {\n      return \"list-group-horizontal\";\n    }\n\n    return \"list-group-horizontal-\" + horizontal;\n  };\n\n  var ListGroup = function ListGroup(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        flush = props.flush,\n        horizontal = props.horizontal,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$L);\n\n    var classes = mapToCssModules(classnames(className, 'list-group', // list-group-horizontal cannot currently be mixed with list-group-flush\n    // we only try to apply horizontal classes if flush is false\n    flush ? 'list-group-flush' : getHorizontalClass(horizontal)), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  ListGroup.propTypes = propTypes$P;\n  ListGroup.defaultProps = defaultProps$L;\n  var _excluded$M = [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"];\n  var propTypes$Q = {\n    children: propTypes.node,\n    inline: propTypes.bool,\n    tag: tagPropType,\n    innerRef: propTypes.oneOfType([propTypes.object, propTypes.func, propTypes.string]),\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$M = {\n    tag: 'form'\n  };\n\n  var Form =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Form, _Component);\n\n    function Form(props) {\n      var _this;\n\n      _this = _Component.call(this, props) || this;\n      _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n      _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    var _proto = Form.prototype;\n\n    _proto.getRef = function getRef(ref) {\n      if (this.props.innerRef) {\n        this.props.innerRef(ref);\n      }\n\n      this.ref = ref;\n    };\n\n    _proto.submit = function submit() {\n      if (this.ref) {\n        this.ref.submit();\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          cssModule = _this$props.cssModule,\n          inline = _this$props.inline,\n          Tag = _this$props.tag,\n          innerRef = _this$props.innerRef,\n          attributes = _objectWithoutPropertiesLoose(_this$props, _excluded$M);\n\n      var classes = mapToCssModules(classnames(className, inline ? 'form-inline' : false), cssModule);\n      return (\n        /*#__PURE__*/\n        React__default.createElement(Tag, _extends({}, attributes, {\n          ref: innerRef,\n          className: classes\n        }))\n      );\n    };\n\n    return Form;\n  }(React.Component);\n\n  Form.propTypes = propTypes$Q;\n  Form.defaultProps = defaultProps$M;\n  var _excluded$N = [\"className\", \"cssModule\", \"valid\", \"tooltip\", \"tag\"];\n  var propTypes$R = {\n    children: propTypes.node,\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    valid: propTypes.bool,\n    tooltip: propTypes.bool\n  };\n  var defaultProps$N = {\n    tag: 'div',\n    valid: undefined\n  };\n\n  var FormFeedback = function FormFeedback(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        valid = props.valid,\n        tooltip = props.tooltip,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$N);\n\n    var validMode = tooltip ? 'tooltip' : 'feedback';\n    var classes = mapToCssModules(classnames(className, valid ? \"valid-\" + validMode : \"invalid-\" + validMode), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  FormFeedback.propTypes = propTypes$R;\n  FormFeedback.defaultProps = defaultProps$N;\n  var _excluded$O = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\n  var propTypes$S = {\n    children: propTypes.node,\n    row: propTypes.bool,\n    check: propTypes.bool,\n    inline: propTypes.bool,\n    disabled: propTypes.bool,\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$O = {\n    tag: 'div'\n  };\n\n  var FormGroup = function FormGroup(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        row = props.row,\n        disabled = props.disabled,\n        check = props.check,\n        inline = props.inline,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$O);\n\n    var classes = mapToCssModules(classnames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n    if (Tag === 'fieldset') {\n      attributes.disabled = disabled;\n    }\n\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  FormGroup.propTypes = propTypes$S;\n  FormGroup.defaultProps = defaultProps$O;\n  var _excluded$P = [\"className\", \"cssModule\", \"inline\", \"color\", \"tag\"];\n  var propTypes$T = {\n    children: propTypes.node,\n    inline: propTypes.bool,\n    tag: tagPropType,\n    color: propTypes.string,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$P = {\n    tag: 'small',\n    color: 'muted'\n  };\n\n  var FormText = function FormText(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        inline = props.inline,\n        color = props.color,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$P);\n\n    var classes = mapToCssModules(classnames(className, !inline ? 'form-text' : false, color ? \"text-\" + color : false), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  FormText.propTypes = propTypes$T;\n  FormText.defaultProps = defaultProps$P;\n  var _excluded$Q = [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"];\n  var propTypes$U = {\n    children: propTypes.node,\n    type: propTypes.string,\n    size: propTypes.oneOfType([propTypes.number, propTypes.string]),\n    bsSize: propTypes.string,\n    valid: propTypes.bool,\n    invalid: propTypes.bool,\n    tag: tagPropType,\n    innerRef: propTypes.oneOfType([propTypes.object, propTypes.func, propTypes.string]),\n    plaintext: propTypes.bool,\n    addon: propTypes.bool,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$Q = {\n    type: 'text'\n  };\n\n  var Input =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(Input, _React$Component);\n\n    function Input(props) {\n      var _this;\n\n      _this = _React$Component.call(this, props) || this;\n      _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n      _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    var _proto = Input.prototype;\n\n    _proto.getRef = function getRef(ref) {\n      if (this.props.innerRef) {\n        this.props.innerRef(ref);\n      }\n\n      this.ref = ref;\n    };\n\n    _proto.focus = function focus() {\n      if (this.ref) {\n        this.ref.focus();\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          cssModule = _this$props.cssModule,\n          type = _this$props.type,\n          bsSize = _this$props.bsSize,\n          valid = _this$props.valid,\n          invalid = _this$props.invalid,\n          tag = _this$props.tag,\n          addon = _this$props.addon,\n          plaintext = _this$props.plaintext,\n          innerRef = _this$props.innerRef,\n          attributes = _objectWithoutPropertiesLoose(_this$props, _excluded$Q);\n\n      var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n      var isNotaNumber = new RegExp('\\\\D', 'g');\n      var fileInput = type === 'file';\n      var textareaInput = type === 'textarea';\n      var selectInput = type === 'select';\n      var rangeInput = type === 'range';\n      var Tag = tag || (selectInput || textareaInput ? type : 'input');\n      var formControlClass = 'form-control';\n\n      if (plaintext) {\n        formControlClass = formControlClass + \"-plaintext\";\n        Tag = tag || 'input';\n      } else if (fileInput) {\n        formControlClass = formControlClass + \"-file\";\n      } else if (rangeInput) {\n        formControlClass = formControlClass + \"-range\";\n      } else if (checkInput) {\n        if (addon) {\n          formControlClass = null;\n        } else {\n          formControlClass = 'form-check-input';\n        }\n      }\n\n      if (attributes.size && isNotaNumber.test(attributes.size)) {\n        warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n        bsSize = attributes.size;\n        delete attributes.size;\n      }\n\n      var classes = mapToCssModules(classnames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n      if (Tag === 'input' || tag && typeof tag === 'function') {\n        attributes.type = type;\n      }\n\n      if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n        warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n        delete attributes.children;\n      }\n\n      return (\n        /*#__PURE__*/\n        React__default.createElement(Tag, _extends({}, attributes, {\n          ref: innerRef,\n          className: classes,\n          \"aria-invalid\": invalid\n        }))\n      );\n    };\n\n    return Input;\n  }(React__default.Component);\n\n  Input.propTypes = propTypes$U;\n  Input.defaultProps = defaultProps$Q;\n  var _excluded$R = [\"className\", \"cssModule\", \"tag\", \"size\"];\n  var propTypes$V = {\n    tag: tagPropType,\n    size: propTypes.string,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$R = {\n    tag: 'div'\n  };\n\n  var InputGroup = function InputGroup(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        size = props.size,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$R);\n\n    var classes = mapToCssModules(classnames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  InputGroup.propTypes = propTypes$V;\n  InputGroup.defaultProps = defaultProps$R;\n  var _excluded$S = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$W = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$S = {\n    tag: 'span'\n  };\n\n  var InputGroupText = function InputGroupText(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$S);\n\n    var classes = mapToCssModules(classnames(className, 'input-group-text'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  InputGroupText.propTypes = propTypes$W;\n  InputGroupText.defaultProps = defaultProps$S;\n  var _excluded$T = [\"className\", \"cssModule\", \"tag\", \"addonType\", \"children\"];\n  var propTypes$X = {\n    tag: tagPropType,\n    addonType: propTypes.oneOf(['prepend', 'append']).isRequired,\n    children: propTypes.node,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$T = {\n    tag: 'div'\n  };\n\n  var InputGroupAddon = function InputGroupAddon(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        addonType = props.addonType,\n        children = props.children,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$T);\n\n    var classes = mapToCssModules(classnames(className, 'input-group-' + addonType), cssModule); // Convenience to assist with transition\n\n    if (typeof children === 'string') {\n      return (\n        /*#__PURE__*/\n        React__default.createElement(Tag, _extends({}, attributes, {\n          className: classes\n        }),\n        /*#__PURE__*/\n        React__default.createElement(InputGroupText, {\n          children: children\n        }))\n      );\n    }\n\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes,\n        children: children\n      }))\n    );\n  };\n\n  InputGroupAddon.propTypes = propTypes$X;\n  InputGroupAddon.defaultProps = defaultProps$T;\n  var propTypes$Y = {\n    addonType: propTypes.oneOf(['prepend', 'append']).isRequired,\n    children: propTypes.node\n  };\n\n  var InputGroupButtonDropdown = function InputGroupButtonDropdown(props) {\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Dropdown, props)\n    );\n  };\n\n  InputGroupButtonDropdown.propTypes = propTypes$Y;\n  var _excluded$U = [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"];\n  var colWidths$1 = ['xs', 'sm', 'md', 'lg', 'xl'];\n  var stringOrNumberProp$1 = propTypes.oneOfType([propTypes.number, propTypes.string]);\n  var columnProps$1 = propTypes.oneOfType([propTypes.bool, propTypes.string, propTypes.number, propTypes.shape({\n    size: stringOrNumberProp$1,\n    order: stringOrNumberProp$1,\n    offset: stringOrNumberProp$1\n  })]);\n  var propTypes$Z = {\n    children: propTypes.node,\n    hidden: propTypes.bool,\n    check: propTypes.bool,\n    size: propTypes.string,\n    for: propTypes.string,\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    xs: columnProps$1,\n    sm: columnProps$1,\n    md: columnProps$1,\n    lg: columnProps$1,\n    xl: columnProps$1,\n    widths: propTypes.array\n  };\n  var defaultProps$U = {\n    tag: 'label',\n    widths: colWidths$1\n  };\n\n  var getColumnSizeClass$1 = function getColumnSizeClass(isXs, colWidth, colSize) {\n    if (colSize === true || colSize === '') {\n      return isXs ? 'col' : \"col-\" + colWidth;\n    } else if (colSize === 'auto') {\n      return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n    }\n\n    return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n  };\n\n  var Label = function Label(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        hidden = props.hidden,\n        widths = props.widths,\n        Tag = props.tag,\n        check = props.check,\n        size = props.size,\n        htmlFor = props.for,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$U);\n\n    var colClasses = [];\n    widths.forEach(function (colWidth, i) {\n      var columnProp = props[colWidth];\n      delete attributes[colWidth];\n\n      if (!columnProp && columnProp !== '') {\n        return;\n      }\n\n      var isXs = !i;\n      var colClass;\n\n      if (isObject(columnProp)) {\n        var _classNames;\n\n        var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n        colClass = getColumnSizeClass$1(isXs, colWidth, columnProp.size);\n        colClasses.push(mapToCssModules(classnames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n      } else {\n        colClass = getColumnSizeClass$1(isXs, colWidth, columnProp);\n        colClasses.push(colClass);\n      }\n    });\n    var classes = mapToCssModules(classnames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({\n        htmlFor: htmlFor\n      }, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  Label.propTypes = propTypes$Z;\n  Label.defaultProps = defaultProps$U;\n  var _excluded$V = [\"body\", \"bottom\", \"className\", \"cssModule\", \"heading\", \"left\", \"list\", \"middle\", \"object\", \"right\", \"tag\", \"top\"];\n  var propTypes$_ = {\n    body: propTypes.bool,\n    bottom: propTypes.bool,\n    children: propTypes.node,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    heading: propTypes.bool,\n    left: propTypes.bool,\n    list: propTypes.bool,\n    middle: propTypes.bool,\n    object: propTypes.bool,\n    right: propTypes.bool,\n    tag: tagPropType,\n    top: propTypes.bool\n  };\n\n  var Media = function Media(props) {\n    var body = props.body,\n        bottom = props.bottom,\n        className = props.className,\n        cssModule = props.cssModule,\n        heading = props.heading,\n        left = props.left,\n        list = props.list,\n        middle = props.middle,\n        object = props.object,\n        right = props.right,\n        tag = props.tag,\n        top = props.top,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$V);\n\n    var defaultTag;\n\n    if (heading) {\n      defaultTag = 'h4';\n    } else if (attributes.href) {\n      defaultTag = 'a';\n    } else if (attributes.src || object) {\n      defaultTag = 'img';\n    } else if (list) {\n      defaultTag = 'ul';\n    } else {\n      defaultTag = 'div';\n    }\n\n    var Tag = tag || defaultTag;\n    var classes = mapToCssModules(classnames(className, {\n      'media-body': body,\n      'media-heading': heading,\n      'media-left': left,\n      'media-right': right,\n      'media-top': top,\n      'media-bottom': bottom,\n      'media-middle': middle,\n      'media-object': object,\n      'media-list': list,\n      media: !body && !heading && !left && !right && !top && !bottom && !middle && !object && !list\n    }), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  Media.propTypes = propTypes$_;\n  var _excluded$W = [\"className\", \"listClassName\", \"cssModule\", \"size\", \"tag\", \"listTag\", \"aria-label\"];\n  var propTypes$$ = {\n    children: propTypes.node,\n    className: propTypes.string,\n    listClassName: propTypes.string,\n    cssModule: propTypes.object,\n    size: propTypes.string,\n    tag: tagPropType,\n    listTag: tagPropType,\n    'aria-label': propTypes.string\n  };\n  var defaultProps$V = {\n    tag: 'nav',\n    listTag: 'ul',\n    'aria-label': 'pagination'\n  };\n\n  var Pagination = function Pagination(props) {\n    var _classNames;\n\n    var className = props.className,\n        listClassName = props.listClassName,\n        cssModule = props.cssModule,\n        size = props.size,\n        Tag = props.tag,\n        ListTag = props.listTag,\n        label = props['aria-label'],\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$W);\n\n    var classes = mapToCssModules(classnames(className), cssModule);\n    var listClasses = mapToCssModules(classnames(listClassName, 'pagination', (_classNames = {}, _classNames[\"pagination-\" + size] = !!size, _classNames)), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, {\n        className: classes,\n        \"aria-label\": label\n      },\n      /*#__PURE__*/\n      React__default.createElement(ListTag, _extends({}, attributes, {\n        className: listClasses\n      })))\n    );\n  };\n\n  Pagination.propTypes = propTypes$$;\n  Pagination.defaultProps = defaultProps$V;\n  var _excluded$X = [\"active\", \"className\", \"cssModule\", \"disabled\", \"tag\"];\n  var propTypes$10 = {\n    active: propTypes.bool,\n    children: propTypes.node,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    disabled: propTypes.bool,\n    tag: tagPropType\n  };\n  var defaultProps$W = {\n    tag: 'li'\n  };\n\n  var PaginationItem = function PaginationItem(props) {\n    var active = props.active,\n        className = props.className,\n        cssModule = props.cssModule,\n        disabled = props.disabled,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$X);\n\n    var classes = mapToCssModules(classnames(className, 'page-item', {\n      active: active,\n      disabled: disabled\n    }), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  PaginationItem.propTypes = propTypes$10;\n  PaginationItem.defaultProps = defaultProps$W;\n  var _excluded$Y = [\"className\", \"cssModule\", \"next\", \"previous\", \"first\", \"last\", \"tag\"];\n  var propTypes$11 = {\n    'aria-label': propTypes.string,\n    children: propTypes.node,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    next: propTypes.bool,\n    previous: propTypes.bool,\n    first: propTypes.bool,\n    last: propTypes.bool,\n    tag: tagPropType\n  };\n  var defaultProps$X = {\n    tag: 'a'\n  };\n\n  var PaginationLink = function PaginationLink(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        next = props.next,\n        previous = props.previous,\n        first = props.first,\n        last = props.last,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$Y);\n\n    var classes = mapToCssModules(classnames(className, 'page-link'), cssModule);\n    var defaultAriaLabel;\n\n    if (previous) {\n      defaultAriaLabel = 'Previous';\n    } else if (next) {\n      defaultAriaLabel = 'Next';\n    } else if (first) {\n      defaultAriaLabel = 'First';\n    } else if (last) {\n      defaultAriaLabel = 'Last';\n    }\n\n    var ariaLabel = props['aria-label'] || defaultAriaLabel;\n    var defaultCaret;\n\n    if (previous) {\n      defaultCaret = \"\\u2039\";\n    } else if (next) {\n      defaultCaret = \"\\u203A\";\n    } else if (first) {\n      defaultCaret = \"\\xAB\";\n    } else if (last) {\n      defaultCaret = \"\\xBB\";\n    }\n\n    var children = props.children;\n\n    if (children && Array.isArray(children) && children.length === 0) {\n      children = null;\n    }\n\n    if (!attributes.href && Tag === 'a') {\n      Tag = 'button';\n    }\n\n    if (previous || next || first || last) {\n      children = [\n      /*#__PURE__*/\n      React__default.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        key: \"caret\"\n      }, children || defaultCaret),\n      /*#__PURE__*/\n      React__default.createElement(\"span\", {\n        className: \"sr-only\",\n        key: \"sr\"\n      }, ariaLabel)];\n    }\n\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes,\n        \"aria-label\": ariaLabel\n      }), children)\n    );\n  };\n\n  PaginationLink.propTypes = propTypes$11;\n  PaginationLink.defaultProps = defaultProps$X;\n  /**\n   * TabContext\n   * {\n   *  activeTabId: PropTypes.any\n   * }\n   */\n\n  var TabContext =\n  /*#__PURE__*/\n  React__default.createContext({});\n  var propTypes$12 = {\n    tag: tagPropType,\n    activeTab: propTypes.any,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$Y = {\n    tag: 'div'\n  };\n\n  var TabContent =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(TabContent, _Component);\n\n    TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      if (prevState.activeTab !== nextProps.activeTab) {\n        return {\n          activeTab: nextProps.activeTab\n        };\n      }\n\n      return null;\n    };\n\n    function TabContent(props) {\n      var _this;\n\n      _this = _Component.call(this, props) || this;\n      _this.state = {\n        activeTab: _this.props.activeTab\n      };\n      return _this;\n    }\n\n    var _proto = TabContent.prototype;\n\n    _proto.render = function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          cssModule = _this$props.cssModule,\n          Tag = _this$props.tag;\n      var attributes = omit(this.props, Object.keys(propTypes$12));\n      var classes = mapToCssModules(classnames('tab-content', className), cssModule);\n      return (\n        /*#__PURE__*/\n        React__default.createElement(TabContext.Provider, {\n          value: {\n            activeTabId: this.state.activeTab\n          }\n        },\n        /*#__PURE__*/\n        React__default.createElement(Tag, _extends({}, attributes, {\n          className: classes\n        })))\n      );\n    };\n\n    return TabContent;\n  }(React.Component);\n\n  TabContent.propTypes = propTypes$12;\n  TabContent.defaultProps = defaultProps$Y;\n  var _excluded$Z = [\"className\", \"cssModule\", \"tabId\", \"tag\"];\n  var propTypes$13 = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    tabId: propTypes.any\n  };\n  var defaultProps$Z = {\n    tag: 'div'\n  };\n\n  function TabPane(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        tabId = props.tabId,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$Z);\n\n    var getClasses = function getClasses(activeTabId) {\n      return mapToCssModules(classnames('tab-pane', className, {\n        active: tabId === activeTabId\n      }), cssModule);\n    };\n\n    return (\n      /*#__PURE__*/\n      React__default.createElement(TabContext.Consumer, null, function (_ref) {\n        var activeTabId = _ref.activeTabId;\n        return (\n          /*#__PURE__*/\n          React__default.createElement(Tag, _extends({}, attributes, {\n            className: getClasses(activeTabId)\n          }))\n        );\n      })\n    );\n  }\n\n  TabPane.propTypes = propTypes$13;\n  TabPane.defaultProps = defaultProps$Z;\n  var _excluded$_ = [\"className\", \"cssModule\", \"tag\", \"fluid\"];\n  var propTypes$14 = {\n    tag: tagPropType,\n    fluid: propTypes.bool,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$_ = {\n    tag: 'div'\n  };\n\n  var Jumbotron = function Jumbotron(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        fluid = props.fluid,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$_);\n\n    var classes = mapToCssModules(classnames(className, 'jumbotron', fluid ? 'jumbotron-fluid' : false), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  Jumbotron.propTypes = propTypes$14;\n  Jumbotron.defaultProps = defaultProps$_;\n  var _excluded$$ = [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"];\n  var propTypes$15 = {\n    children: propTypes.node,\n    className: propTypes.string,\n    closeClassName: propTypes.string,\n    closeAriaLabel: propTypes.string,\n    cssModule: propTypes.object,\n    color: propTypes.string,\n    fade: propTypes.bool,\n    isOpen: propTypes.bool,\n    toggle: propTypes.func,\n    tag: tagPropType,\n    transition: propTypes.shape(Fade.propTypes),\n    innerRef: propTypes.oneOfType([propTypes.object, propTypes.string, propTypes.func])\n  };\n  var defaultProps$$ = {\n    color: 'success',\n    isOpen: true,\n    tag: 'div',\n    closeAriaLabel: 'Close',\n    fade: true,\n    transition: _extends({}, Fade.defaultProps, {\n      unmountOnExit: true\n    })\n  };\n\n  function Alert(props) {\n    var className = props.className,\n        closeClassName = props.closeClassName,\n        closeAriaLabel = props.closeAriaLabel,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        color = props.color,\n        isOpen = props.isOpen,\n        toggle = props.toggle,\n        children = props.children,\n        transition = props.transition,\n        fade = props.fade,\n        innerRef = props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$$);\n\n    var classes = mapToCssModules(classnames(className, 'alert', \"alert-\" + color, {\n      'alert-dismissible': toggle\n    }), cssModule);\n    var closeClasses = mapToCssModules(classnames('close', closeClassName), cssModule);\n\n    var alertTransition = _extends({}, Fade.defaultProps, transition, {\n      baseClass: fade ? transition.baseClass : '',\n      timeout: fade ? transition.timeout : 0\n    });\n\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Fade, _extends({}, attributes, alertTransition, {\n        tag: Tag,\n        className: classes,\n        in: isOpen,\n        role: \"alert\",\n        innerRef: innerRef\n      }), toggle ?\n      /*#__PURE__*/\n      React__default.createElement(\"button\", {\n        type: \"button\",\n        className: closeClasses,\n        \"aria-label\": closeAriaLabel,\n        onClick: toggle\n      },\n      /*#__PURE__*/\n      React__default.createElement(\"span\", {\n        \"aria-hidden\": \"true\"\n      }, \"\\xD7\")) : null, children)\n    );\n  }\n\n  Alert.propTypes = propTypes$15;\n  Alert.defaultProps = defaultProps$$;\n  var _excluded$10 = [\"className\", \"cssModule\", \"tag\", \"isOpen\", \"children\", \"transition\", \"fade\", \"innerRef\"];\n  var propTypes$16 = {\n    children: propTypes.node,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    fade: propTypes.bool,\n    isOpen: propTypes.bool,\n    tag: tagPropType,\n    transition: propTypes.shape(Fade.propTypes),\n    innerRef: propTypes.oneOfType([propTypes.object, propTypes.string, propTypes.func])\n  };\n  var defaultProps$10 = {\n    isOpen: true,\n    tag: 'div',\n    fade: true,\n    transition: _extends({}, Fade.defaultProps, {\n      unmountOnExit: true\n    })\n  };\n\n  function Toast(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        isOpen = props.isOpen,\n        children = props.children,\n        transition = props.transition,\n        fade = props.fade,\n        innerRef = props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$10);\n\n    var classes = mapToCssModules(classnames(className, 'toast'), cssModule);\n\n    var toastTransition = _extends({}, Fade.defaultProps, transition, {\n      baseClass: fade ? transition.baseClass : '',\n      timeout: fade ? transition.timeout : 0\n    });\n\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Fade, _extends({}, attributes, toastTransition, {\n        tag: Tag,\n        className: classes,\n        in: isOpen,\n        role: \"alert\",\n        innerRef: innerRef\n      }), children)\n    );\n  }\n\n  Toast.propTypes = propTypes$16;\n  Toast.defaultProps = defaultProps$10;\n  var _excluded$11 = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\n  var propTypes$17 = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    innerRef: propTypes.oneOfType([propTypes.object, propTypes.string, propTypes.func])\n  };\n  var defaultProps$11 = {\n    tag: 'div'\n  };\n\n  var ToastBody = function ToastBody(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        innerRef = props.innerRef,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$11);\n\n    var classes = mapToCssModules(classnames(className, 'toast-body'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes,\n        ref: innerRef\n      }))\n    );\n  };\n\n  ToastBody.propTypes = propTypes$17;\n  ToastBody.defaultProps = defaultProps$11;\n  var _excluded$12 = [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\", \"charCode\", \"close\", \"tagClassName\", \"icon\"];\n  var propTypes$18 = {\n    tag: tagPropType,\n    icon: propTypes.oneOfType([propTypes.string, propTypes.node]),\n    wrapTag: tagPropType,\n    toggle: propTypes.func,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    children: propTypes.node,\n    closeAriaLabel: propTypes.string,\n    charCode: propTypes.oneOfType([propTypes.string, propTypes.number]),\n    close: propTypes.object\n  };\n  var defaultProps$12 = {\n    tag: 'strong',\n    wrapTag: 'div',\n    tagClassName: 'mr-auto',\n    closeAriaLabel: 'Close',\n    charCode: 215\n  };\n\n  var ToastHeader = function ToastHeader(props) {\n    var closeButton;\n    var icon;\n\n    var className = props.className,\n        cssModule = props.cssModule,\n        children = props.children,\n        toggle = props.toggle,\n        Tag = props.tag,\n        WrapTag = props.wrapTag,\n        closeAriaLabel = props.closeAriaLabel,\n        charCode = props.charCode,\n        close = props.close,\n        tagClassName = props.tagClassName,\n        iconProp = props.icon,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$12);\n\n    var classes = mapToCssModules(classnames(className, 'toast-header'), cssModule);\n\n    if (!close && toggle) {\n      var closeIcon = typeof charCode === 'number' ? String.fromCharCode(charCode) : charCode;\n      closeButton =\n      /*#__PURE__*/\n      React__default.createElement(\"button\", {\n        type: \"button\",\n        onClick: toggle,\n        className: mapToCssModules('close', cssModule),\n        \"aria-label\": closeAriaLabel\n      },\n      /*#__PURE__*/\n      React__default.createElement(\"span\", {\n        \"aria-hidden\": \"true\"\n      }, closeIcon));\n    }\n\n    if (typeof iconProp === \"string\") {\n      icon =\n      /*#__PURE__*/\n      React__default.createElement(\"svg\", {\n        className: mapToCssModules(\"rounded text-\" + iconProp),\n        width: \"20\",\n        height: \"20\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        preserveAspectRatio: \"xMidYMid slice\",\n        focusable: \"false\",\n        role: \"img\"\n      },\n      /*#__PURE__*/\n      React__default.createElement(\"rect\", {\n        fill: \"currentColor\",\n        width: \"100%\",\n        height: \"100%\"\n      }));\n    } else if (iconProp) {\n      icon = iconProp;\n    }\n\n    return (\n      /*#__PURE__*/\n      React__default.createElement(WrapTag, _extends({}, attributes, {\n        className: classes\n      }), icon,\n      /*#__PURE__*/\n      React__default.createElement(Tag, {\n        className: mapToCssModules(classnames(tagClassName, {\n          \"ml-2\": icon != null\n        }), cssModule)\n      }, children), close || closeButton)\n    );\n  };\n\n  ToastHeader.propTypes = propTypes$18;\n  ToastHeader.defaultProps = defaultProps$12;\n  var _excluded$13 = [\"tag\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"];\n\n  var _transitionStatusToCl;\n\n  var propTypes$19 = _extends({}, reactTransitionGroup_1.propTypes, {\n    isOpen: propTypes.bool,\n    children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),\n    tag: tagPropType,\n    className: propTypes.node,\n    navbar: propTypes.bool,\n    cssModule: propTypes.object,\n    innerRef: propTypes.oneOfType([propTypes.func, propTypes.string, propTypes.object])\n  });\n\n  var defaultProps$13 = _extends({}, reactTransitionGroup_1.defaultProps, {\n    isOpen: false,\n    appear: false,\n    enter: true,\n    exit: true,\n    tag: 'div',\n    timeout: TransitionTimeouts.Collapse\n  });\n\n  var transitionStatusToClassHash = (_transitionStatusToCl = {}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);\n\n  function getTransitionClass(status) {\n    return transitionStatusToClassHash[status] || 'collapse';\n  }\n\n  function getHeight(node) {\n    return node.scrollHeight;\n  }\n\n  var Collapse =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Collapse, _Component);\n\n    function Collapse(props) {\n      var _this;\n\n      _this = _Component.call(this, props) || this;\n      _this.state = {\n        height: null\n      };\n      ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {\n        _this[name] = _this[name].bind(_assertThisInitialized(_this));\n      });\n      return _this;\n    }\n\n    var _proto = Collapse.prototype;\n\n    _proto.onEntering = function onEntering(node, isAppearing) {\n      this.setState({\n        height: getHeight(node)\n      });\n      this.props.onEntering(node, isAppearing);\n    };\n\n    _proto.onEntered = function onEntered(node, isAppearing) {\n      this.setState({\n        height: null\n      });\n      this.props.onEntered(node, isAppearing);\n    };\n\n    _proto.onExit = function onExit(node) {\n      this.setState({\n        height: getHeight(node)\n      });\n      this.props.onExit(node);\n    };\n\n    _proto.onExiting = function onExiting(node) {\n      // getting this variable triggers a reflow\n      var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars\n\n      this.setState({\n        height: 0\n      });\n      this.props.onExiting(node);\n    };\n\n    _proto.onExited = function onExited(node) {\n      this.setState({\n        height: null\n      });\n      this.props.onExited(node);\n    };\n\n    _proto.render = function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          Tag = _this$props.tag,\n          isOpen = _this$props.isOpen,\n          className = _this$props.className,\n          navbar = _this$props.navbar,\n          cssModule = _this$props.cssModule,\n          children = _this$props.children,\n          innerRef = _this$props.innerRef,\n          otherProps = _objectWithoutPropertiesLoose(_this$props, _excluded$13);\n\n      var height = this.state.height;\n      var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n      var childProps = omit(otherProps, TransitionPropTypeKeys);\n      return (\n        /*#__PURE__*/\n        React__default.createElement(reactTransitionGroup_1, _extends({}, transitionProps, {\n          in: isOpen,\n          onEntering: this.onEntering,\n          onEntered: this.onEntered,\n          onExit: this.onExit,\n          onExiting: this.onExiting,\n          onExited: this.onExited\n        }), function (status) {\n          var collapseClass = getTransitionClass(status);\n          var classes = mapToCssModules(classnames(className, collapseClass, navbar && 'navbar-collapse'), cssModule);\n          var style = height === null ? null : {\n            height: height\n          };\n          return (\n            /*#__PURE__*/\n            React__default.createElement(Tag, _extends({}, childProps, {\n              style: _extends({}, childProps.style, style),\n              className: classes,\n              ref: _this2.props.innerRef\n            }), children)\n          );\n        })\n      );\n    };\n\n    return Collapse;\n  }(React.Component);\n\n  Collapse.propTypes = propTypes$19;\n  Collapse.defaultProps = defaultProps$13;\n  var _excluded$14 = [\"className\", \"cssModule\", \"tag\", \"active\", \"disabled\", \"action\", \"color\"];\n  var propTypes$1a = {\n    tag: tagPropType,\n    active: propTypes.bool,\n    disabled: propTypes.bool,\n    color: propTypes.string,\n    action: propTypes.bool,\n    className: propTypes.any,\n    cssModule: propTypes.object\n  };\n  var defaultProps$14 = {\n    tag: 'li'\n  };\n\n  var handleDisabledOnClick = function handleDisabledOnClick(e) {\n    e.preventDefault();\n  };\n\n  var ListGroupItem = function ListGroupItem(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        active = props.active,\n        disabled = props.disabled,\n        action = props.action,\n        color = props.color,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$14);\n\n    var classes = mapToCssModules(classnames(className, active ? 'active' : false, disabled ? 'disabled' : false, action ? 'list-group-item-action' : false, color ? \"list-group-item-\" + color : false, 'list-group-item'), cssModule); // Prevent click event when disabled.\n\n    if (disabled) {\n      attributes.onClick = handleDisabledOnClick;\n    }\n\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  ListGroupItem.propTypes = propTypes$1a;\n  ListGroupItem.defaultProps = defaultProps$14;\n  var _excluded$15 = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$1b = {\n    tag: tagPropType,\n    className: propTypes.any,\n    cssModule: propTypes.object\n  };\n  var defaultProps$15 = {\n    tag: 'h5'\n  };\n\n  var ListGroupItemHeading = function ListGroupItemHeading(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$15);\n\n    var classes = mapToCssModules(classnames(className, 'list-group-item-heading'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  ListGroupItemHeading.propTypes = propTypes$1b;\n  ListGroupItemHeading.defaultProps = defaultProps$15;\n  var _excluded$16 = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$1c = {\n    tag: tagPropType,\n    className: propTypes.any,\n    cssModule: propTypes.object\n  };\n  var defaultProps$16 = {\n    tag: 'p'\n  };\n\n  var ListGroupItemText = function ListGroupItemText(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$16);\n\n    var classes = mapToCssModules(classnames(className, 'list-group-item-text'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      }))\n    );\n  };\n\n  ListGroupItemText.propTypes = propTypes$1c;\n  ListGroupItemText.defaultProps = defaultProps$16;\n  var _excluded$17 = [\"className\", \"cssModule\", \"tag\", \"type\"];\n  var propTypes$1d = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    type: propTypes.string\n  };\n  var defaultProps$17 = {\n    tag: 'ul'\n  };\n  var List =\n  /*#__PURE__*/\n  React.forwardRef(function (props, ref) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        type = props.type,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$17);\n\n    var classes = mapToCssModules(classnames(className, type ? \"list-\" + type : false), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes,\n        ref: ref\n      }))\n    );\n  });\n  List.propTypes = propTypes$1d;\n  List.defaultProps = defaultProps$17;\n  var _excluded$18 = [\"className\", \"cssModule\", \"tag\"];\n  var propTypes$1e = {\n    tag: tagPropType,\n    className: propTypes.string,\n    cssModule: propTypes.object\n  };\n  var defaultProps$18 = {\n    tag: 'li'\n  };\n  var ListInlineItem =\n  /*#__PURE__*/\n  React.forwardRef(function (props, ref) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$18);\n\n    var classes = mapToCssModules(classnames(className, 'list-inline-item'), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({}, attributes, {\n        className: classes,\n        ref: ref\n      }))\n    );\n  });\n  ListInlineItem.propTypes = propTypes$1e;\n  ListInlineItem.defaultProps = defaultProps$18;\n\n  var UncontrolledAlert =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(UncontrolledAlert, _Component);\n\n    function UncontrolledAlert(props) {\n      var _this;\n\n      _this = _Component.call(this, props) || this;\n      _this.state = {\n        isOpen: true\n      };\n      _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    var _proto = UncontrolledAlert.prototype;\n\n    _proto.toggle = function toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    _proto.render = function render() {\n      return (\n        /*#__PURE__*/\n        React__default.createElement(Alert, _extends({\n          isOpen: this.state.isOpen,\n          toggle: this.toggle\n        }, this.props))\n      );\n    };\n\n    return UncontrolledAlert;\n  }(React.Component);\n\n  var omitKeys$1 = ['defaultOpen'];\n\n  var UncontrolledButtonDropdown =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(UncontrolledButtonDropdown, _Component);\n\n    function UncontrolledButtonDropdown(props) {\n      var _this;\n\n      _this = _Component.call(this, props) || this;\n      _this.state = {\n        isOpen: props.defaultOpen || false\n      };\n      _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    var _proto = UncontrolledButtonDropdown.prototype;\n\n    _proto.toggle = function toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    _proto.render = function render() {\n      return (\n        /*#__PURE__*/\n        React__default.createElement(ButtonDropdown, _extends({\n          isOpen: this.state.isOpen,\n          toggle: this.toggle\n        }, omit(this.props, omitKeys$1)))\n      );\n    };\n\n    return UncontrolledButtonDropdown;\n  }(React.Component);\n\n  UncontrolledButtonDropdown.propTypes = _extends({\n    defaultOpen: propTypes.bool\n  }, ButtonDropdown.propTypes);\n  var omitKeys$2 = ['toggleEvents', 'defaultOpen'];\n  var propTypes$1f = {\n    defaultOpen: propTypes.bool,\n    toggler: propTypes.string.isRequired,\n    toggleEvents: propTypes.arrayOf(propTypes.string)\n  };\n  var defaultProps$19 = {\n    toggleEvents: defaultToggleEvents\n  };\n\n  var UncontrolledCollapse =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(UncontrolledCollapse, _Component);\n\n    function UncontrolledCollapse(props) {\n      var _this;\n\n      _this = _Component.call(this, props) || this;\n      _this.togglers = null;\n      _this.removeEventListeners = null;\n      _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n      _this.state = {\n        isOpen: props.defaultOpen || false\n      };\n      return _this;\n    }\n\n    var _proto = UncontrolledCollapse.prototype;\n\n    _proto.componentDidMount = function componentDidMount() {\n      this.togglers = findDOMElements(this.props.toggler);\n\n      if (this.togglers.length) {\n        this.removeEventListeners = addMultipleEventListeners(this.togglers, this.toggle, this.props.toggleEvents);\n      }\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this.togglers.length && this.removeEventListeners) {\n        this.removeEventListeners();\n      }\n    };\n\n    _proto.toggle = function toggle(e) {\n      this.setState(function (_ref) {\n        var isOpen = _ref.isOpen;\n        return {\n          isOpen: !isOpen\n        };\n      });\n      e.preventDefault();\n    };\n\n    _proto.render = function render() {\n      return (\n        /*#__PURE__*/\n        React__default.createElement(Collapse, _extends({\n          isOpen: this.state.isOpen\n        }, omit(this.props, omitKeys$2)))\n      );\n    };\n\n    return UncontrolledCollapse;\n  }(React.Component);\n\n  UncontrolledCollapse.propTypes = propTypes$1f;\n  UncontrolledCollapse.defaultProps = defaultProps$19;\n  var omitKeys$3 = ['defaultOpen'];\n\n  var UncontrolledDropdown =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(UncontrolledDropdown, _Component);\n\n    function UncontrolledDropdown(props) {\n      var _this;\n\n      _this = _Component.call(this, props) || this;\n      _this.state = {\n        isOpen: props.defaultOpen || false\n      };\n      _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    var _proto = UncontrolledDropdown.prototype;\n\n    _proto.toggle = function toggle(e) {\n      var _this2 = this;\n\n      var isOpen = !this.state.isOpen;\n      this.setState({\n        isOpen: isOpen\n      }, function () {\n        if (_this2.props.onToggle) {\n          _this2.props.onToggle(e, isOpen);\n        }\n      });\n    };\n\n    _proto.render = function render() {\n      return (\n        /*#__PURE__*/\n        React__default.createElement(Dropdown, _extends({\n          isOpen: this.state.isOpen,\n          toggle: this.toggle\n        }, omit(this.props, omitKeys$3)))\n      );\n    };\n\n    return UncontrolledDropdown;\n  }(React.Component);\n\n  UncontrolledDropdown.propTypes = _extends({\n    defaultOpen: propTypes.bool,\n    onToggle: propTypes.func\n  }, Dropdown.propTypes);\n  var omitKeys$4 = ['defaultOpen'];\n\n  var UncontrolledTooltip =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(UncontrolledTooltip, _Component);\n\n    function UncontrolledTooltip(props) {\n      var _this;\n\n      _this = _Component.call(this, props) || this;\n      _this.state = {\n        isOpen: props.defaultOpen || false\n      };\n      _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    var _proto = UncontrolledTooltip.prototype;\n\n    _proto.toggle = function toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    _proto.render = function render() {\n      return (\n        /*#__PURE__*/\n        React__default.createElement(Tooltip, _extends({\n          isOpen: this.state.isOpen,\n          toggle: this.toggle\n        }, omit(this.props, omitKeys$4)))\n      );\n    };\n\n    return UncontrolledTooltip;\n  }(React.Component);\n\n  UncontrolledTooltip.propTypes = _extends({\n    defaultOpen: propTypes.bool\n  }, Tooltip.propTypes);\n  var _excluded$19 = [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"];\n  var propTypes$1g = {\n    tag: tagPropType,\n    type: propTypes.string,\n    size: propTypes.string,\n    color: propTypes.string,\n    className: propTypes.string,\n    cssModule: propTypes.object,\n    children: propTypes.string\n  };\n  var defaultProps$1a = {\n    tag: 'div',\n    type: 'border',\n    children: 'Loading...'\n  };\n\n  var Spinner = function Spinner(props) {\n    var className = props.className,\n        cssModule = props.cssModule,\n        type = props.type,\n        size = props.size,\n        color = props.color,\n        children = props.children,\n        Tag = props.tag,\n        attributes = _objectWithoutPropertiesLoose(props, _excluded$19);\n\n    var classes = mapToCssModules(classnames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n    return (\n      /*#__PURE__*/\n      React__default.createElement(Tag, _extends({\n        role: \"status\"\n      }, attributes, {\n        className: classes\n      }), children &&\n      /*#__PURE__*/\n      React__default.createElement(\"span\", {\n        className: mapToCssModules('sr-only', cssModule)\n      }, children))\n    );\n  };\n\n  Spinner.propTypes = propTypes$1g;\n  Spinner.defaultProps = defaultProps$1a;\n\n  (function () {\n    if (typeof window !== 'object' || typeof window.CustomEvent === 'function') return;\n\n    var CustomEvent = function CustomEvent(event, params) {\n      params = params || {\n        bubbles: false,\n        cancelable: false,\n        detail: null\n      };\n      var evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return evt;\n    };\n\n    window.CustomEvent = CustomEvent;\n  })();\n\n  (function () {\n    if (typeof Object.values === 'function') return;\n\n    var values = function values(O) {\n      return Object.keys(O).map(function (key) {\n        return O[key];\n      });\n    };\n\n    Object.values = values;\n  })();\n\n  var polyfill$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    __proto__: null\n  });\n  exports.Alert = Alert;\n  exports.Badge = Badge;\n  exports.Breadcrumb = Breadcrumb;\n  exports.BreadcrumbItem = BreadcrumbItem;\n  exports.Button = Button;\n  exports.ButtonDropdown = ButtonDropdown;\n  exports.ButtonGroup = ButtonGroup;\n  exports.ButtonToggle = ButtonToggle;\n  exports.ButtonToolbar = ButtonToolbar;\n  exports.Card = Card;\n  exports.CardBody = CardBody;\n  exports.CardColumns = CardColumns;\n  exports.CardDeck = CardDeck;\n  exports.CardFooter = CardFooter;\n  exports.CardGroup = CardGroup;\n  exports.CardHeader = CardHeader;\n  exports.CardImg = CardImg;\n  exports.CardImgOverlay = CardImgOverlay;\n  exports.CardLink = CardLink;\n  exports.CardSubtitle = CardSubtitle;\n  exports.CardText = CardText;\n  exports.CardTitle = CardTitle;\n  exports.Carousel = Carousel;\n  exports.CarouselCaption = CarouselCaption;\n  exports.CarouselControl = CarouselControl;\n  exports.CarouselIndicators = CarouselIndicators;\n  exports.CarouselItem = CarouselItem;\n  exports.Col = Col;\n  exports.Collapse = Collapse;\n  exports.Container = Container;\n  exports.CustomFileInput = CustomFileInput;\n  exports.CustomInput = CustomInput;\n  exports.Dropdown = Dropdown;\n  exports.DropdownContext = DropdownContext;\n  exports.DropdownItem = DropdownItem;\n  exports.DropdownMenu = DropdownMenu;\n  exports.DropdownToggle = DropdownToggle;\n  exports.Fade = Fade;\n  exports.Form = Form;\n  exports.FormFeedback = FormFeedback;\n  exports.FormGroup = FormGroup;\n  exports.FormText = FormText;\n  exports.Input = Input;\n  exports.InputGroup = InputGroup;\n  exports.InputGroupAddon = InputGroupAddon;\n  exports.InputGroupButtonDropdown = InputGroupButtonDropdown;\n  exports.InputGroupText = InputGroupText;\n  exports.Jumbotron = Jumbotron;\n  exports.Label = Label;\n  exports.List = List;\n  exports.ListGroup = ListGroup;\n  exports.ListGroupItem = ListGroupItem;\n  exports.ListGroupItemHeading = ListGroupItemHeading;\n  exports.ListGroupItemText = ListGroupItemText;\n  exports.ListInlineItem = ListInlineItem;\n  exports.Media = Media;\n  exports.Modal = Modal;\n  exports.ModalBody = ModalBody;\n  exports.ModalFooter = ModalFooter;\n  exports.ModalHeader = ModalHeader;\n  exports.Nav = Nav;\n  exports.NavItem = NavItem;\n  exports.NavLink = NavLink;\n  exports.Navbar = Navbar;\n  exports.NavbarBrand = NavbarBrand;\n  exports.NavbarText = NavbarText;\n  exports.NavbarToggler = NavbarToggler;\n  exports.Pagination = Pagination;\n  exports.PaginationItem = PaginationItem;\n  exports.PaginationLink = PaginationLink;\n  exports.Polyfill = polyfill$1;\n  exports.Popover = Popover;\n  exports.PopoverBody = PopoverBody;\n  exports.PopoverHeader = PopoverHeader;\n  exports.PopperContent = PopperContent;\n  exports.PopperTargetHelper = PopperTargetHelper;\n  exports.Progress = Progress;\n  exports.Row = Row;\n  exports.Spinner = Spinner;\n  exports.TabContent = TabContent;\n  exports.TabPane = TabPane;\n  exports.Table = Table;\n  exports.Toast = Toast;\n  exports.ToastBody = ToastBody;\n  exports.ToastHeader = ToastHeader;\n  exports.Tooltip = Tooltip;\n  exports.UncontrolledAlert = UncontrolledAlert;\n  exports.UncontrolledButtonDropdown = UncontrolledButtonDropdown;\n  exports.UncontrolledCarousel = UncontrolledCarousel;\n  exports.UncontrolledCollapse = UncontrolledCollapse;\n  exports.UncontrolledDropdown = UncontrolledDropdown;\n  exports.UncontrolledPopover = UncontrolledPopover;\n  exports.UncontrolledTooltip = UncontrolledTooltip;\n  exports.Util = utils;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":null,"metadata":{},"sourceType":"script"}