{"ast":null,"code":"var _jsxFileName = \"/Users/huangzhongkai/Desktop/ntu msis/Semester 2/Blockchain System Software Engineering/FrontendAssessment/codes/Codes/src/index.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.css'\n// import App from './components/App';\n// import * as serviceWorker from './serviceWorker';\n// ReactDOM.render(<App />, document.getElementById('root'));\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport configureStore from './store/store';\nimport Root from './components/root'; // document.addEventListener('DOMContentLoaded', () => {\n//   const root = document.getElementById('root');\n//   let store;\n//   if (window.currentUser) {\n//     const preloadedState = {\n//       entities: {\n//         users: { [window.currentUser.id]: window.currentUser }\n//       },\n//       session: { id: window.currentUser.id }\n//     };\n//     store = configureStore(preloadedState);\n//     delete window.currentUser;\n//   } else {\n//     store = configureStore();\n//   }\n//   ReactDOM.render(<Root store={store} />, root);\n// });\n// document.addEventListener('DOMContentLoaded', () => {\n//   const root = document.getElementById('root');\n//   let store;\n//   if (window.currentUser) {\n//     const preloadedState = {\n//       entities: {\n//         users: { [window.currentUser.id]: window.currentUser }\n//       },\n//       session: { id: window.currentUser.id }\n//     };\n//     store = configureStore(preloadedState);\n//     delete window.currentUser;\n//   } else {\n//     store = configureStore();\n//   }\n//   ReactDOM.render(<Root store={store} />, root);\n// });\n\nReactDOM.render(React.createElement(Root, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}), root);","map":{"version":3,"sources":["/Users/huangzhongkai/Desktop/ntu msis/Semester 2/Blockchain System Software Engineering/FrontendAssessment/codes/Codes/src/index.js"],"names":["React","ReactDOM","configureStore","Root","render","store","root"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,cAAP,MAA2B,eAA3B;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGAF,QAAQ,CAACG,MAAT,CAAgB,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAEC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAwCC,IAAxC","sourcesContent":["// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import 'bootstrap/dist/css/bootstrap.css'\r\n// import App from './components/App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\n// ReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// // If you want your app to work offline and load faster, you can change\r\n// // unregister() to register() below. Note this comes with some pitfalls.\r\n// // Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport configureStore from './store/store'\r\nimport Root from './components/root'\r\n\r\n\r\n// document.addEventListener('DOMContentLoaded', () => {\r\n//   const root = document.getElementById('root');\r\n\r\n//   let store;\r\n//   if (window.currentUser) {\r\n//     const preloadedState = {\r\n//       entities: {\r\n//         users: { [window.currentUser.id]: window.currentUser }\r\n//       },\r\n//       session: { id: window.currentUser.id }\r\n//     };\r\n//     store = configureStore(preloadedState);\r\n//     delete window.currentUser;\r\n//   } else {\r\n//     store = configureStore();\r\n//   }\r\n\r\n//   ReactDOM.render(<Root store={store} />, root);\r\n// });\r\n\r\n\r\n\r\n// document.addEventListener('DOMContentLoaded', () => {\r\n//   const root = document.getElementById('root');\r\n\r\n//   let store;\r\n//   if (window.currentUser) {\r\n//     const preloadedState = {\r\n//       entities: {\r\n//         users: { [window.currentUser.id]: window.currentUser }\r\n//       },\r\n//       session: { id: window.currentUser.id }\r\n//     };\r\n//     store = configureStore(preloadedState);\r\n//     delete window.currentUser;\r\n//   } else {\r\n//     store = configureStore();\r\n//   }\r\n\r\n//   ReactDOM.render(<Root store={store} />, root);\r\n// });\r\n\r\n\r\nReactDOM.render(<Root store={store} />, root);"]},"metadata":{},"sourceType":"module"}